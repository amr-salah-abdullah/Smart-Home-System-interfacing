

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan 01 23:53:13 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1,inline
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1,inline
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1,inline
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1,inline
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1,inline
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1,inline
   141                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1,inline
   143                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   144                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   145                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   146   000000                     
   147                           ; Generated 21/07/2023 GMT
   148                           ; 
   149                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   150                           ; All rights reserved.
   151                           ; 
   152                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   153                           ; 
   154                           ; Redistribution and use in source and binary forms, with or without modification, are
   155                           ; permitted provided that the following conditions are met:
   156                           ; 
   157                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   158                           ;        conditions and the following disclaimer.
   159                           ; 
   160                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   161                           ;        of conditions and the following disclaimer in the documentation and/or other
   162                           ;        materials provided with the distribution. Publication is not required when
   163                           ;        this file is used in an embedded application.
   164                           ; 
   165                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   166                           ;        software without specific prior written permission.
   167                           ; 
   168                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   169                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   170                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   171                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   172                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   173                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   174                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   175                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   176                           ; 
   177                           ; 
   178                           ; Code-generator required, PIC18F46K20 Definitions
   179                           ; 
   180                           ; SFR Addresses
   181   000000                     
   182 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   183   000000                     
   184 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   185   000000                     
   186 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   187   000000                     
   188                           	psect	idataCOMRAM
   189   00360A                     __pidataCOMRAM:
   190                           	callstack 0
   191                           
   192                           ;initializer for _autocont
   193   00360A  01                 	db	1
   194                           
   195                           	psect	idataBANK0
   196   00317E                     __pidataBANK0:
   197                           	callstack 0
   198                           
   199                           ;initializer for _PORT_Reg
   200   00317E  80                 	db	128
   201   00317F  0F                 	db	15
   202   003180  81                 	db	129
   203   003181  0F                 	db	15
   204   003182  82                 	db	130
   205   003183  0F                 	db	15
   206   003184  83                 	db	131
   207   003185  0F                 	db	15
   208   003186  84                 	db	132
   209   003187  0F                 	db	15
   210                           
   211                           ;initializer for _LAT_Reg
   212   003188  89                 	db	137
   213   003189  0F                 	db	15
   214   00318A  8A                 	db	138
   215   00318B  0F                 	db	15
   216   00318C  8B                 	db	139
   217   00318D  0F                 	db	15
   218   00318E  8C                 	db	140
   219   00318F  0F                 	db	15
   220   003190  8D                 	db	141
   221   003191  0F                 	db	15
   222                           
   223                           ;initializer for _TRIS_Reg
   224   003192  92                 	db	146
   225   003193  0F                 	db	15
   226   003194  93                 	db	147
   227   003195  0F                 	db	15
   228   003196  94                 	db	148
   229   003197  0F                 	db	15
   230   003198  95                 	db	149
   231   003199  0F                 	db	15
   232   00319A  96                 	db	150
   233   00319B  0F                 	db	15
   234                           
   235                           ;initializer for _doorlightauto
   236   00319C  01                 	db	1
   237                           
   238                           ;initializer for _homelightauto
   239   00319D  01                 	db	1
   240                           
   241                           ;initializer for _lcd
   242   00319E  00                 	db	0
   243   00319F  03                 	db	3
   244   0031A0  01                 	db	1
   245   0031A1  03                 	db	3
   246   0031A2  02                 	db	2
   247   0031A3  03                 	db	3
   248   0031A4  04                 	db	4
   249   0031A5  05                 	db	5
   250   0031A6  03                 	db	3
   251   0031A7  03                 	db	3
   252   0031A8  03                 	db	3
   253   0031A9  03                 	db	3
   254                           
   255                           	psect	smallconst
   256   001000                     __psmallconst:
   257                           	callstack 0
   258   001000  00                 	db	0
   259   001001                     _i2c_fsmStateTable:
   260                           	callstack 0
   261   001001  F4                 	db	low _I2C_DO_IDLE
   262   001002  34                 	db	high _I2C_DO_IDLE
   263   001003  BE                 	db	low _I2C_DO_SEND_ADR_READ
   264   001004  34                 	db	high _I2C_DO_SEND_ADR_READ
   265   001005  AE                 	db	low _I2C_DO_SEND_ADR_WRITE
   266   001006  34                 	db	high _I2C_DO_SEND_ADR_WRITE
   267   001007  48                 	db	low _I2C_DO_TX
   268   001008  22                 	db	high _I2C_DO_TX
   269   001009  14                 	db	low _I2C_DO_RX
   270   00100A  25                 	db	high _I2C_DO_RX
   271   00100B  E8                 	db	low _I2C_DO_RCEN
   272   00100C  34                 	db	high _I2C_DO_RCEN
   273   00100D  E4                 	db	low _I2C_DO_TX_EMPTY
   274   00100E  27                 	db	high _I2C_DO_TX_EMPTY
   275   00100F  AA                 	db	low _I2C_DO_SEND_RESTART_READ
   276   001010  35                 	db	high _I2C_DO_SEND_RESTART_READ
   277   001011  A2                 	db	low _I2C_DO_SEND_RESTART_WRITE
   278   001012  35                 	db	high _I2C_DO_SEND_RESTART_WRITE
   279   001013  9A                 	db	low _I2C_DO_SEND_RESTART
   280   001014  35                 	db	high _I2C_DO_SEND_RESTART
   281   001015  92                 	db	low _I2C_DO_SEND_STOP
   282   001016  35                 	db	high _I2C_DO_SEND_STOP
   283   001017  8A                 	db	low _I2C_DO_RX_ACK
   284   001018  35                 	db	high _I2C_DO_RX_ACK
   285   001019  82                 	db	low _I2C_DO_RX_NACK_STOP
   286   00101A  35                 	db	high _I2C_DO_RX_NACK_STOP
   287   00101B  7A                 	db	low _I2C_DO_RX_NACK_RESTART
   288   00101C  35                 	db	high _I2C_DO_RX_NACK_RESTART
   289   00101D  DC                 	db	low _I2C_DO_RESET
   290   00101E  34                 	db	high _I2C_DO_RESET
   291   00101F  58                 	db	low _I2C_DO_ADDRESS_NACK
   292   001020  2B                 	db	high _I2C_DO_ADDRESS_NACK
   293   001021                     __end_of_i2c_fsmStateTable:
   294                           	callstack 0
   295   000000                     _ADCON0	set	4034
   296   000000                     _ADRESH	set	4036
   297   000000                     _ADRESL	set	4035
   298   000000                     _PIE2bits	set	4000
   299   000000                     _IPR1bits	set	3999
   300   000000                     _TXREG	set	4013
   301   000000                     _RCREG	set	4014
   302   000000                     _SPBRG	set	4015
   303   000000                     _TXSTA	set	4012
   304   000000                     _RCSTA	set	4011
   305   000000                     _BAUDCON	set	4024
   306   000000                     _EEDATA	set	4008
   307   000000                     _EEADR	set	4009
   308   000000                     _EEADRH	set	4010
   309   000000                     _EECON2	set	4007
   310   000000                     _TRISD	set	3989
   311   000000                     _TRISC	set	3988
   312   000000                     _TRISB	set	3987
   313   000000                     _LATC	set	3979
   314   000000                     _LATB	set	3978
   315   001021                     STR_10:
   316   001021  55                 	db	85	;'U'
   317   001022  73                 	db	115	;'s'
   318   001023  65                 	db	101	;'e'
   319   001024  72                 	db	114	;'r'
   320   001025  20                 	db	32
   321   001026  45                 	db	69	;'E'
   322   001027  6E                 	db	110	;'n'
   323   001028  74                 	db	116	;'t'
   324   001029  65                 	db	101	;'e'
   325   00102A  72                 	db	114	;'r'
   326   00102B  65                 	db	101	;'e'
   327   00102C  64                 	db	100	;'d'
   328   00102D  20                 	db	32
   329   00102E  69                 	db	105	;'i'
   330   00102F  6E                 	db	110	;'n'
   331   001030  76                 	db	118	;'v'
   332   001031  61                 	db	97	;'a'
   333   001032  6C                 	db	108	;'l'
   334   001033  69                 	db	105	;'i'
   335   001034  64                 	db	100	;'d'
   336   001035  20                 	db	32
   337   001036  50                 	db	80	;'P'
   338   001037  49                 	db	73	;'I'
   339   001038  4E                 	db	78	;'N'
   340   001039  20                 	db	32
   341   00103A  4C                 	db	76	;'L'
   342   00103B  6F                 	db	111	;'o'
   343   00103C  63                 	db	99	;'c'
   344   00103D  61                 	db	97	;'a'
   345   00103E  74                 	db	116	;'t'
   346   00103F  69                 	db	105	;'i'
   347   001040  6F                 	db	111	;'o'
   348   001041  6E                 	db	110	;'n'
   349   001042  20                 	db	32
   350   001043  6F                 	db	111	;'o'
   351   001044  72                 	db	114	;'r'
   352   001045  20                 	db	32
   353   001046  4E                 	db	78	;'N'
   354   001047  55                 	db	85	;'U'
   355   001048  4C                 	db	76	;'L'
   356   001049  4C                 	db	76	;'L'
   357   00104A  20                 	db	32
   358   00104B  50                 	db	80	;'P'
   359   00104C  4F                 	db	79	;'O'
   360   00104D  49                 	db	73	;'I'
   361   00104E  4E                 	db	78	;'N'
   362   00104F  54                 	db	84	;'T'
   363   001050  45                 	db	69	;'E'
   364   001051  52                 	db	82	;'R'
   365   001052  0A                 	db	10
   366   001053  00                 	db	0
   367   001054                     STR_11:
   368   001054  55                 	db	85	;'U'
   369   001055  73                 	db	115	;'s'
   370   001056  65                 	db	101	;'e'
   371   001057  72                 	db	114	;'r'
   372   001058  20                 	db	32
   373   001059  45                 	db	69	;'E'
   374   00105A  6E                 	db	110	;'n'
   375   00105B  74                 	db	116	;'t'
   376   00105C  65                 	db	101	;'e'
   377   00105D  72                 	db	114	;'r'
   378   00105E  65                 	db	101	;'e'
   379   00105F  64                 	db	100	;'d'
   380   001060  20                 	db	32
   381   001061  69                 	db	105	;'i'
   382   001062  6E                 	db	110	;'n'
   383   001063  76                 	db	118	;'v'
   384   001064  61                 	db	97	;'a'
   385   001065  6C                 	db	108	;'l'
   386   001066  69                 	db	105	;'i'
   387   001067  64                 	db	100	;'d'
   388   001068  20                 	db	32
   389   001069  4C                 	db	76	;'L'
   390   00106A  6F                 	db	111	;'o'
   391   00106B  67                 	db	103	;'g'
   392   00106C  69                 	db	105	;'i'
   393   00106D  63                 	db	99	;'c'
   394   00106E  20                 	db	32
   395   00106F  6F                 	db	111	;'o'
   396   001070  72                 	db	114	;'r'
   397   001071  20                 	db	32
   398   001072  4E                 	db	78	;'N'
   399   001073  55                 	db	85	;'U'
   400   001074  4C                 	db	76	;'L'
   401   001075  4C                 	db	76	;'L'
   402   001076  20                 	db	32
   403   001077  50                 	db	80	;'P'
   404   001078  4F                 	db	79	;'O'
   405   001079  49                 	db	73	;'I'
   406   00107A  4E                 	db	78	;'N'
   407   00107B  54                 	db	84	;'T'
   408   00107C  45                 	db	69	;'E'
   409   00107D  52                 	db	82	;'R'
   410   00107E  0A                 	db	10
   411   00107F  00                 	db	0
   412   001080                     STR_6:
   413   001080  54                 	db	84	;'T'
   414   001081  45                 	db	69	;'E'
   415   001082  4D                 	db	77	;'M'
   416   001083  50                 	db	80	;'P'
   417   001084  3A                 	db	58	;':'
   418   001085  20                 	db	32
   419   001086  00                 	db	0
   420   001087                     STR_4:
   421   001087  44                 	db	68	;'D'
   422   001088  61                 	db	97	;'a'
   423   001089  74                 	db	116	;'t'
   424   00108A  65                 	db	101	;'e'
   425   00108B  3A                 	db	58	;':'
   426   00108C  20                 	db	32
   427   00108D  00                 	db	0
   428   00108E                     STR_1:
   429   00108E  44                 	db	68	;'D'
   430   00108F  41                 	db	65	;'A'
   431   001090  54                 	db	84	;'T'
   432   001091  45                 	db	69	;'E'
   433   001092  3A                 	db	58	;':'
   434   001093  20                 	db	32
   435   001094  00                 	db	0
   436   001095                     STR_2:
   437   001095  54                 	db	84	;'T'
   438   001096  69                 	db	105	;'i'
   439   001097  6D                 	db	109	;'m'
   440   001098  65                 	db	101	;'e'
   441   001099  3A                 	db	58	;':'
   442   00109A  20                 	db	32
   443   00109B  00                 	db	0
   444   00109C  25                 	db	37
   445   00109D  6C                 	db	108	;'l'
   446   00109E  75                 	db	117	;'u'
   447   00109F  00                 	db	0
   448   0010A0                     STR_7:
   449   0010A0  25                 	db	37
   450   0010A1  69                 	db	105	;'i'
   451   0010A2  00                 	db	0
   452   0010A3                     STR_3:
   453   0010A3  25                 	db	37
   454   0010A4  75                 	db	117	;'u'
   455   0010A5  00                 	db	0
   456   0010A6  00                 	db	0	; dummy byte at the end
   457   000000                     
   458                           	psect	nvCOMRAM
   459   000038                     __pnvCOMRAM:
   460                           	callstack 0
   461   000038                     _INT2_InterruptHandler:
   462                           	callstack 0
   463   000038                     	ds	2
   464   00003A                     _INT1_InterruptHandler:
   465                           	callstack 0
   466   00003A                     	ds	2
   467   00003C                     _INT0_InterruptHandler:
   468                           	callstack 0
   469   00003C                     	ds	2
   470   00003E                     _ADC_InterruptHandler:
   471                           	callstack 0
   472   00003E                     	ds	2
   473                           
   474                           	psect	nvBANK0
   475   0000FE                     __pnvBANK0:
   476                           	callstack 0
   477   0000FE                     _EUSART_FramingErrorHandler:
   478                           	callstack 0
   479   0000FE                     	ds	2
   480                           
   481                           	psect	nvBANK1
   482   000144                     __pnvBANK1:
   483                           	callstack 0
   484   000144                     _EUSART_ErrorHandler:
   485                           	callstack 0
   486   000144                     	ds	2
   487   000146                     _EUSART_OverrunErrorHandler:
   488                           	callstack 0
   489   000146                     	ds	2
   490   000000                     _LATAbits	set	3977
   491   000000                     _ADCON0bits	set	4034
   492   000000                     _SSPSTATbits	set	4039
   493   000000                     _SSPCON2bits	set	4037
   494   000000                     _SSPCON1bits	set	4038
   495   000000                     _RCSTAbits	set	4011
   496   000000                     _TXSTAbits	set	4012
   497   000000                     _WPUB	set	3964
   498   000000                     _ANSEL	set	3966
   499   000000                     _OSCTUNE	set	3995
   500   000000                     _OSCCON	set	4051
   501   000000                     _INTCONbits	set	4082
   502   000000                     _LATA	set	3977
   503   000000                     _LATD	set	3980
   504   000000                     _LATE	set	3981
   505   000000                     _TABLAT	set	4085
   506   000000                     _TBLPTRL	set	4086
   507   000000                     _TBLPTRH	set	4087
   508   000000                     _TBLPTRU	set	4088
   509   000000                     _INTCON3bits	set	4080
   510   000000                     _INTCON2bits	set	4081
   511   000000                     _PIE1bits	set	3997
   512   000000                     _PIR1bits	set	3998
   513   000000                     _PIR2bits	set	4001
   514   000000                     _EECON1bits	set	4006
   515   000000                     _TRISA	set	3986
   516   000000                     _TRISE	set	3990
   517   000000                     _ANSELH	set	3967
   518   000000                     _PORTE	set	3972
   519   000000                     _PORTD	set	3971
   520   000000                     _PORTC	set	3970
   521   000000                     _PORTB	set	3969
   522   000000                     _PORTA	set	3968
   523   000000                     _IPR2bits	set	4002
   524   000000                     _ADCON2	set	4032
   525   000000                     _ADCON1	set	4033
   526   000000                     _SSPCON2	set	4037
   527   000000                     _SSPCON1	set	4038
   528   000000                     _SSPSTAT	set	4039
   529   000000                     _SPBRGH	set	4016
   530   000000                     _RCONbits	set	4048
   531   000000                     _SSPBUF	set	4041
   532   000000                     _SSPADD	set	4040
   533                           
   534                           ; #config settings
   535                           
   536                           	psect	cinit
   537   002D4A                     __pcinit:
   538                           	callstack 0
   539   002D4A                     start_initialization:
   540                           	callstack 0
   541   002D4A                     __initialization:
   542                           	callstack 0
   543                           
   544                           ; Initialize objects allocated to BANK0 (44 bytes)
   545                           ; load TBLPTR registers with __pidataBANK0
   546   002D4A  0E7E               	movlw	low __pidataBANK0
   547   002D4C  6EF6               	movwf	tblptrl,c
   548   002D4E  0E31               	movlw	high __pidataBANK0
   549   002D50  6EF7               	movwf	tblptrh,c
   550   002D52  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   551   002D54  6EF8               	movwf	tblptru,c
   552   002D56  EE00  F0AC         	lfsr	0,__pdataBANK0
   553   002D5A  EE10 F02C          	lfsr	1,44
   554   002D5E                     copy_data0:
   555   002D5E  0009               	tblrd		*+
   556   002D60  CFF5 FFEE          	movff	tablat,postinc0
   557   002D64  50E5               	movf	postdec1,w,c
   558   002D66  50E1               	movf	fsr1l,w,c
   559   002D68  E1FA               	bnz	copy_data0
   560                           
   561                           ; Initialize objects allocated to COMRAM (1 bytes)
   562                           ; load TBLPTR registers with __pidataCOMRAM
   563   002D6A  0E0A               	movlw	low __pidataCOMRAM
   564   002D6C  6EF6               	movwf	tblptrl,c
   565   002D6E  0E36               	movlw	high __pidataCOMRAM
   566   002D70  6EF7               	movwf	tblptrh,c
   567   002D72  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   568   002D74  6EF8               	movwf	tblptru,c
   569   002D76  0009               	tblrd		*+	;fetch initializer
   570   002D78  CFF5 F040          	movff	tablat,__pdataCOMRAM
   571                           
   572                           ; Clear objects allocated to BANK1 (32 bytes)
   573   002D7C  EE01  F024         	lfsr	0,__pbssBANK1
   574   002D80  0E20               	movlw	32
   575   002D82                     clear_0:
   576   002D82  6AEE               	clrf	postinc0,c
   577   002D84  06E8               	decf	wreg,f,c
   578   002D86  E1FD               	bnz	clear_0
   579                           
   580                           ; Clear objects allocated to BANK0 (76 bytes)
   581   002D88  EE00  F060         	lfsr	0,__pbssBANK0
   582   002D8C  0E4C               	movlw	76
   583   002D8E                     clear_1:
   584   002D8E  6AEE               	clrf	postinc0,c
   585   002D90  06E8               	decf	wreg,f,c
   586   002D92  E1FD               	bnz	clear_1
   587                           
   588                           ; Clear objects allocated to COMRAM (23 bytes)
   589   002D94  EE00  F021         	lfsr	0,__pbssCOMRAM
   590   002D98  0E17               	movlw	23
   591   002D9A                     clear_2:
   592   002D9A  6AEE               	clrf	postinc0,c
   593   002D9C  06E8               	decf	wreg,f,c
   594   002D9E  E1FD               	bnz	clear_2
   595   002DA0                     end_of_initialization:
   596                           	callstack 0
   597   002DA0                     __end_of__initialization:
   598                           	callstack 0
   599   002DA0  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   600   002DA2  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   601   002DA4  0100               	movlb	0
   602   002DA6  EFB2  F00A         	goto	_main	;jump to C main() function
   603                           
   604                           	psect	bssCOMRAM
   605   000021                     __pbssCOMRAM:
   606                           	callstack 0
   607   000021                     _dt:
   608                           	callstack 0
   609   000021                     	ds	7
   610   000028                     _width:
   611                           	callstack 0
   612   000028                     	ds	2
   613   00002A                     _prec:
   614                           	callstack 0
   615   00002A                     	ds	2
   616   00002C                     _MSSP_InterruptHandler:
   617                           	callstack 0
   618   00002C                     	ds	2
   619   00002E                     _flags:
   620                           	callstack 0
   621   00002E                     	ds	1
   622   00002F                     send4bit@F3726:
   623                           	callstack 0
   624   00002F                     	ds	1
   625   000030                     LCD4B_SENDCHARPOS@F3699:
   626                           	callstack 0
   627   000030                     	ds	1
   628   000031                     _eusartRxLastError:
   629                           	callstack 0
   630   000031                     	ds	1
   631   000032                     __Time:
   632                           	callstack 0
   633   000032                     	ds	3
   634   000035                     __Date:
   635                           	callstack 0
   636   000035                     	ds	3
   637                           
   638                           	psect	dataCOMRAM
   639   000040                     __pdataCOMRAM:
   640                           	callstack 0
   641   000040                     _autocont:
   642                           	callstack 0
   643   000040                     	ds	1
   644                           
   645                           	psect	bssBANK0
   646   000060                     __pbssBANK0:
   647                           	callstack 0
   648   000060                     _I2C_Status:
   649                           	callstack 0
   650   000060                     	ds	36
   651   000084                     _timer:
   652                           	callstack 0
   653   000084                     	ds	7
   654   00008B                     _lightread:
   655                           	callstack 0
   656   00008B                     	ds	2
   657   00008D                     sendenable@F3731:
   658                           	callstack 0
   659   00008D                     	ds	1
   660   00008E                     LCD4B_SENDCHAR@F3689:
   661                           	callstack 0
   662   00008E                     	ds	1
   663   00008F                     LCD4B_SENDCMD@F3681:
   664                           	callstack 0
   665   00008F                     	ds	1
   666   000090                     LCD4B_SET@F3675:
   667                           	callstack 0
   668   000090                     	ds	1
   669   000091                     LCD4B_SET@F3672:
   670                           	callstack 0
   671   000091                     	ds	1
   672   000092                     _EEPROMreading:
   673                           	callstack 0
   674   000092                     	ds	1
   675   000093                     _TCA7temp:
   676                           	callstack 0
   677   000093                     	ds	1
   678   000094                     _datestr:
   679                           	callstack 0
   680   000094                     	ds	10
   681   00009E                     _timestr:
   682                           	callstack 0
   683   00009E                     	ds	10
   684   0000A8                     _LCDtemp:
   685                           	callstack 0
   686   0000A8                     	ds	4
   687                           
   688                           	psect	dataBANK0
   689   0000AC                     __pdataBANK0:
   690                           	callstack 0
   691   0000AC                     _PORT_Reg:
   692                           	callstack 0
   693   0000AC                     	ds	10
   694   0000B6                     _LAT_Reg:
   695                           	callstack 0
   696   0000B6                     	ds	10
   697   0000C0                     _TRIS_Reg:
   698                           	callstack 0
   699   0000C0                     	ds	10
   700   0000CA                     _doorlightauto:
   701                           	callstack 0
   702   0000CA                     	ds	1
   703   0000CB                     _homelightauto:
   704                           	callstack 0
   705   0000CB                     	ds	1
   706   0000CC                     _lcd:
   707                           	callstack 0
   708   0000CC                     	ds	12
   709                           
   710                           	psect	bssBANK1
   711   000124                     __pbssBANK1:
   712                           	callstack 0
   713   000124                     _dbuf:
   714                           	callstack 0
   715   000124                     	ds	32
   716                           
   717                           	psect	cstackBANK1
   718   000100                     __pcstackBANK1:
   719                           	callstack 0
   720   000100                     ?_sprintf:
   721                           	callstack 0
   722   000100                     sprintf@s:
   723                           	callstack 0
   724   000100                     printf@ap:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x0
   728   000100                     	ds	1
   729   000101                     sprintf@fmt:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x1
   733   000101                     	ds	1
   734   000102                     PINWRITE@pinconfig:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x2
   738   000102                     	ds	2
   739   000104                     PINWRITE@log:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x4
   743   000104                     	ds	1
   744   000105                     ??_PINWRITE:
   745                           
   746                           ; 1 bytes @ 0x5
   747   000105                     	ds	1
   748   000106                     sprintf@ap:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x6
   752   000106                     	ds	2
   753   000108                     sprintf@f:
   754                           	callstack 0
   755                           
   756                           ; 12 bytes @ 0x8
   757   000108                     	ds	2
   758   00010A                     sendenable@lcd:
   759                           	callstack 0
   760   00010A                     PINSTART@pinconfig:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0xA
   764   00010A                     	ds	1
   765   00010B                     ??_sendenable:
   766                           
   767                           ; 1 bytes @ 0xB
   768   00010B                     	ds	1
   769   00010C                     ??_PINSTART:
   770   00010C                     sendenable@ret:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0xC
   774   00010C                     	ds	1
   775   00010D                     sendenable@pinEN:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0xD
   779   00010D                     	ds	1
   780   00010E                     LCD4B_SENDCMD@lcd:
   781                           	callstack 0
   782   00010E                     LCD4B_SENDCHAR@lcd:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0xE
   786   00010E                     	ds	1
   787   00010F                     LCD4B_SENDCMD@cmd:
   788                           	callstack 0
   789   00010F                     LCD4B_SENDCHAR@data:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0xF
   793   00010F                     	ds	1
   794   000110                     ??_LCD4B_SENDCHAR:
   795   000110                     ??_LCD4B_SENDCMD:
   796                           
   797                           ; 1 bytes @ 0x10
   798   000110                     	ds	1
   799   000111                     PINSTART@ret:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x11
   803   000111                     	ds	1
   804   000112                     LCD4B_SENDCMD@ret:
   805                           	callstack 0
   806   000112                     LCD4B_SENDCHAR@ret:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x12
   810   000112                     	ds	1
   811   000113                     LCD4B_SENDCMD@i:
   812                           	callstack 0
   813   000113                     LCD4B_SENDCHAR@i:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x13
   817   000113                     	ds	2
   818   000115                     LCD4B_SENDCMD@i_2487:
   819                           	callstack 0
   820   000115                     LCD4B_SENDCHAR@i_2509:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x15
   824   000115                     	ds	2
   825   000117                     LCD4B_SENDCMD@pinptr:
   826                           	callstack 0
   827   000117                     LCD4B_SENDCHAR@pinptr:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x17
   831   000117                     	ds	1
   832   000118                     LCD4B_SET@lcd:
   833                           	callstack 0
   834   000118                     LCD4B_SENDSTR@lcd:
   835                           	callstack 0
   836   000118                     setcursor4bit@lcd:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x18
   840   000118                     	ds	1
   841   000119                     ??_LCD4B_SET:
   842   000119                     LCD4B_SENDSTR@str:
   843                           	callstack 0
   844   000119                     setcursor4bit@row:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x19
   848   000119                     	ds	1
   849   00011A                     LCD4B_SENDSTR@str_old:
   850                           	callstack 0
   851   00011A                     setcursor4bit@col:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x1A
   855   00011A                     	ds	1
   856   00011B                     ??_setcursor4bit:
   857   00011B                     LCD4B_SENDSTR@length:
   858                           	callstack 0
   859   00011B                     LCD4B_SET@i:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x1B
   863   00011B                     	ds	2
   864   00011D                     LCD4B_SET@pinptr_2461:
   865                           	callstack 0
   866   00011D                     setcursor4bit@ret:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x1D
   870   00011D                     	ds	1
   871   00011E                     LCD4B_SET@pinptr:
   872                           	callstack 0
   873   00011E                     LCD4B_SENDSTRPOS@lcd:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x1E
   877   00011E                     	ds	1
   878   00011F                     LCD4B_SENDSTRPOS@str:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x1F
   882   00011F                     	ds	1
   883   000120                     LCD4B_SENDSTRPOS@row:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x20
   887   000120                     	ds	1
   888   000121                     LCD4B_SENDSTRPOS@column:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x21
   892   000121                     	ds	1
   893   000122                     ??_main:
   894                           
   895                           ; 1 bytes @ 0x22
   896   000122                     	ds	2
   897                           
   898                           	psect	cstackBANK0
   899   0000D8                     __pcstackBANK0:
   900                           	callstack 0
   901   0000D8                     ?_strlen:
   902                           	callstack 0
   903   0000D8                     ?_ADC_GetConversion:
   904                           	callstack 0
   905   0000D8                     ?___lldiv:
   906                           	callstack 0
   907   0000D8                     ?___aldiv:
   908                           	callstack 0
   909   0000D8                     ?___almod:
   910                           	callstack 0
   911   0000D8                     ?___llmod:
   912                           	callstack 0
   913   0000D8                     EUSART_Write@txData:
   914                           	callstack 0
   915   0000D8                     I2C_Close@returnValue:
   916                           	callstack 0
   917   0000D8                     I2C_MasterOperation@read:
   918                           	callstack 0
   919   0000D8                     EUSART_SetFramingErrorHandler@interruptHandler:
   920                           	callstack 0
   921   0000D8                     EUSART_SetOverrunErrorHandler@interruptHandler:
   922                           	callstack 0
   923   0000D8                     EUSART_SetErrorHandler@interruptHandler:
   924                           	callstack 0
   925   0000D8                     I2C_SetBuffer@buffer:
   926                           	callstack 0
   927   0000D8                     I2C_SetInterruptHandler@InterruptHandler:
   928                           	callstack 0
   929   0000D8                     I2C_SetCallback@cb:
   930                           	callstack 0
   931   0000D8                     ADC_SetInterruptHandler@InterruptHandler:
   932                           	callstack 0
   933   0000D8                     INT0_SetInterruptHandler@InterruptHandler:
   934                           	callstack 0
   935   0000D8                     INT1_SetInterruptHandler@InterruptHandler:
   936                           	callstack 0
   937   0000D8                     INT2_SetInterruptHandler@InterruptHandler:
   938                           	callstack 0
   939   0000D8                     fputc@c:
   940                           	callstack 0
   941   0000D8                     strlen@s:
   942                           	callstack 0
   943   0000D8                     ___lldiv@dividend:
   944                           	callstack 0
   945   0000D8                     ___aldiv@dividend:
   946                           	callstack 0
   947   0000D8                     ___almod@dividend:
   948                           	callstack 0
   949   0000D8                     ___llmod@dividend:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x0
   953   0000D8                     	ds	1
   954   0000D9                     I2C_MasterOperation@returnValue:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x1
   958   0000D9                     	ds	1
   959   0000DA                     ??_ADC_GetConversion:
   960   0000DA                     I2C_Open@address:
   961                           	callstack 0
   962   0000DA                     I2C_SetBuffer@bufferSize:
   963                           	callstack 0
   964   0000DA                     I2C_SetCallback@ptr:
   965                           	callstack 0
   966   0000DA                     fputc@fp:
   967                           	callstack 0
   968   0000DA                     strlen@a:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x2
   972   0000DA                     	ds	1
   973   0000DB                     I2C_Open@returnValue:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x3
   977   0000DB                     	ds	1
   978   0000DC                     ??_fputc:
   979   0000DC                     I2C_SetCallback@idx:
   980                           	callstack 0
   981   0000DC                     ADC_GetConversion@channel:
   982                           	callstack 0
   983   0000DC                     EUSART_SendString@str:
   984                           	callstack 0
   985   0000DC                     ___lldiv@divisor:
   986                           	callstack 0
   987   0000DC                     ___aldiv@divisor:
   988                           	callstack 0
   989   0000DC                     ___almod@divisor:
   990                           	callstack 0
   991   0000DC                     ___llmod@divisor:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x4
   995   0000DC                     	ds	1
   996   0000DD                     I2C_SetDataCompleteCallback@cb:
   997                           	callstack 0
   998   0000DD                     I2C_SetAddressNackCallback@cb:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x5
  1002   0000DD                     	ds	1
  1003   0000DE                     EUSART_SendString@len:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x6
  1007   0000DE                     	ds	1
  1008   0000DF                     I2C_SetDataCompleteCallback@ptr:
  1009                           	callstack 0
  1010   0000DF                     I2C_SetAddressNackCallback@ptr:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x7
  1014   0000DF                     	ds	1
  1015   0000E0                     ___lldiv@counter:
  1016                           	callstack 0
  1017   0000E0                     ___aldiv@counter:
  1018                           	callstack 0
  1019   0000E0                     ___almod@counter:
  1020                           	callstack 0
  1021   0000E0                     ___llmod@counter:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x8
  1025   0000E0                     	ds	1
  1026   0000E1                     I2C_Read1ByteRegister@reg:
  1027                           	callstack 0
  1028   0000E1                     I2C_Write1ByteRegister@reg:
  1029                           	callstack 0
  1030   0000E1                     ___aldiv@sign:
  1031                           	callstack 0
  1032   0000E1                     ___almod@sign:
  1033                           	callstack 0
  1034   0000E1                     ___lldiv@quotient:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x9
  1038   0000E1                     	ds	1
  1039   0000E2                     ?_abs:
  1040                           	callstack 0
  1041   0000E2                     I2C_Read1ByteRegister@address:
  1042                           	callstack 0
  1043   0000E2                     I2C_Write1ByteRegister@data:
  1044                           	callstack 0
  1045   0000E2                     abs@a:
  1046                           	callstack 0
  1047   0000E2                     ___aldiv@quotient:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0xA
  1051   0000E2                     	ds	1
  1052   0000E3                     I2C_Read1ByteRegister@returnValue:
  1053                           	callstack 0
  1054   0000E3                     I2C_Write1ByteRegister@address:
  1055                           	callstack 0
  1056                           
  1057                           ; 1 bytes @ 0xB
  1058   0000E3                     	ds	1
  1059   0000E4                     ??_abs:
  1060   0000E4                     ?_GetDataAndTime:
  1061                           	callstack 0
  1062   0000E4                     EXTEEPROM_WriteByte@Byteadd:
  1063                           	callstack 0
  1064   0000E4                     EXTEEPROM_ReadByte@Byteadd:
  1065                           	callstack 0
  1066   0000E4                     ReadTemp@addr:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0xC
  1070   0000E4                     	ds	1
  1071   0000E5                     EXTEEPROM_WriteByte@data:
  1072                           	callstack 0
  1073   0000E5                     EXTEEPROM_ReadByte@Eadd:
  1074                           	callstack 0
  1075   0000E5                     ReadTemp@temp:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0xD
  1079   0000E5                     	ds	1
  1080   0000E6                     EXTEEPROM_WriteByte@Eadd:
  1081                           	callstack 0
  1082   0000E6                     EXTEEPROM_ReadByte@read:
  1083                           	callstack 0
  1084   0000E6                     vfpfcnvrt@fp:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0xE
  1088   0000E6                     	ds	2
  1089   0000E8                     vfpfcnvrt@fmt:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x10
  1093   0000E8                     	ds	1
  1094   0000E9                     vfpfcnvrt@ap:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x11
  1098   0000E9                     	ds	2
  1099   0000EB                     ??_vfpfcnvrt:
  1100                           
  1101                           ; 1 bytes @ 0x13
  1102   0000EB                     	ds	2
  1103   0000ED                     
  1104                           ; 1 bytes @ 0x15
  1105   0000ED                     	ds	2
  1106   0000EF                     vfpfcnvrt@done:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x17
  1110   0000EF                     	ds	1
  1111   0000F0                     vfpfcnvrt@cp:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x18
  1115   0000F0                     	ds	1
  1116   0000F1                     vfpfcnvrt@convarg:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x19
  1120   0000F1                     	ds	4
  1121   0000F5                     vfpfcnvrt@c:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x1D
  1125   0000F5                     	ds	1
  1126   0000F6                     ?_vfprintf:
  1127                           	callstack 0
  1128   0000F6                     vfprintf@fp:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x1E
  1132   0000F6                     	ds	2
  1133   0000F8                     vfprintf@fmt:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x20
  1137   0000F8                     	ds	1
  1138   0000F9                     vfprintf@ap:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x21
  1142   0000F9                     	ds	2
  1143   0000FB                     vfprintf@cfmt:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x23
  1147   0000FB                     	ds	1
  1148   0000FC                     ?_printf:
  1149                           	callstack 0
  1150   0000FC                     printf@fmt:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x24
  1154   0000FC                     	ds	1
  1155   0000FD                     PINWRITE@ret:
  1156                           	callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x25
  1159   0000FD                     	ds	1
  1160   0000FE                     
  1161                           ; 1 bytes @ 0x26
  1162                           
  1163                           	psect	cstackCOMRAM
  1164   000001                     __pcstackCOMRAM:
  1165                           	callstack 0
  1166   000001                     ??_manual_Override:
  1167   000001                     ??_manual_homelight:
  1168   000001                     ??_manual_Doorlight:
  1169   000001                     I2C_MasterSendTxData@data:
  1170                           	callstack 0
  1171   000001                     i2I2C_SetBuffer@buffer:
  1172                           	callstack 0
  1173   000001                     i2I2C_SetCallback@cb:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x0
  1177   000001                     	ds	1
  1178   000002                     
  1179                           ; 1 bytes @ 0x1
  1180   000002                     	ds	1
  1181   000003                     i2I2C_SetBuffer@bufferSize:
  1182                           	callstack 0
  1183   000003                     i2I2C_SetCallback@ptr:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x2
  1187   000003                     	ds	2
  1188   000005                     i2I2C_SetCallback@idx:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x4
  1192   000005                     	ds	1
  1193   000006                     i2I2C_SetDataCompleteCallback@cb:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x5
  1197   000006                     	ds	2
  1198   000008                     i2I2C_SetDataCompleteCallback@ptr:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x7
  1202   000008                     	ds	2
  1203   00000A                     rd1RegCompleteHandler@ptr:
  1204                           	callstack 0
  1205   00000A                     rd2RegCompleteHandler@ptr:
  1206                           	callstack 0
  1207   00000A                     wr1RegCompleteHandler@ptr:
  1208                           	callstack 0
  1209   00000A                     wr2RegCompleteHandler@ptr:
  1210                           	callstack 0
  1211   00000A                     rdBlkRegCompleteHandler@ptr:
  1212                           	callstack 0
  1213   00000A                     I2C_CallbackReturnReset@funPtr:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x9
  1217   00000A                     	ds	2
  1218   00000C                     ??_rdBlkRegCompleteHandler:
  1219   00000C                     
  1220                           ; 1 bytes @ 0xB
  1221   00000C                     	ds	1
  1222   00000D                     ??_I2C_DO_TX:
  1223   00000D                     ??_I2C_DO_RX:
  1224   00000D                     ??_I2C_DO_TX_EMPTY:
  1225   00000D                     ??_I2C_DO_ADDRESS_NACK:
  1226                           
  1227                           ; 1 bytes @ 0xC
  1228   00000D                     	ds	2
  1229   00000F                     ??_I2C_MasterFsm:
  1230                           
  1231                           ; 1 bytes @ 0xE
  1232   00000F                     	ds	3
  1233   000012                     ??_INTERRUPT_InterruptManagerHigh:
  1234                           
  1235                           ; 1 bytes @ 0x11
  1236   000012                     	ds	10
  1237   00001C                     ??_INTERRUPT_InterruptManagerLow:
  1238                           
  1239                           ; 1 bytes @ 0x1B
  1240   00001C                     	ds	5
  1241                           
  1242 ;;
  1243 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1244 ;;
  1245 ;; *************** function _main *****************
  1246 ;; Defined at:
  1247 ;;		line 37 in file "main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;Total ram usage:        2 bytes
  1266 ;; Hardware stack levels required when called: 20
  1267 ;; This function calls:
  1268 ;;		_ADC_GetConversion
  1269 ;;		_ADC_SetInterruptHandler
  1270 ;;		_EXTEEPROM_ReadByte
  1271 ;;		_EXTEEPROM_WriteByte
  1272 ;;		_GetDataAndTime
  1273 ;;		_I2C_Write1ByteRegister
  1274 ;;		_INT0_SetInterruptHandler
  1275 ;;		_INT1_SetInterruptHandler
  1276 ;;		_INT2_SetInterruptHandler
  1277 ;;		_LCD4B_SENDCHAR
  1278 ;;		_LCD4B_SENDSTR
  1279 ;;		_LCD4B_SENDSTRPOS
  1280 ;;		_LCD4B_SET
  1281 ;;		_PrintDateUART
  1282 ;;		_PrintTimeUART
  1283 ;;		_ReadTemp
  1284 ;;		_SYSTEM_Initialize
  1285 ;;		_sprintf
  1286 ;; This function is called by:
  1287 ;;		Startup code after reset
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text0
  1292   001564                     __ptext0:
  1293                           	callstack 0
  1294   001564                     _main:
  1295                           	callstack 11
  1296   001564                     
  1297                           ;main.c: 40:     SYSTEM_Initialize();
  1298   001564  EC97  F019         	call	_SYSTEM_Initialize	;wreg free
  1299                           
  1300                           ;main.c: 42:     ADC_SetInterruptHandler(lightSwitch);
  1301   001568  0E88               	movlw	low _lightSwitch
  1302   00156A  0100               	movlb	0	; () banked
  1303   00156C  6FD8               	movwf	ADC_SetInterruptHandler@InterruptHandler& (0+255),b
  1304   00156E  0E2A               	movlw	high _lightSwitch
  1305   001570  6FD9               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1306   001572  ECA3  F01A         	call	_ADC_SetInterruptHandler	;wreg free
  1307                           
  1308                           ;main.c: 45:     INT0_SetInterruptHandler(manual_Override);
  1309   001576  0EE6               	movlw	low _manual_Override
  1310   001578  0100               	movlb	0	; () banked
  1311   00157A  6FD8               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  1312   00157C  0E26               	movlw	high _manual_Override
  1313   00157E  6FD9               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1314   001580  EC8F  F01A         	call	_INT0_SetInterruptHandler	;wreg free
  1315                           
  1316                           ;main.c: 46:     INT1_SetInterruptHandler(manual_homelight);
  1317   001584  0E50               	movlw	low _manual_homelight
  1318   001586  0100               	movlb	0	; () banked
  1319   001588  6FD8               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  1320   00158A  0E31               	movlw	high _manual_homelight
  1321   00158C  6FD9               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1322   00158E  EC8A  F01A         	call	_INT1_SetInterruptHandler	;wreg free
  1323                           
  1324                           ;main.c: 47:     INT2_SetInterruptHandler(manual_Doorlight);
  1325   001592  0EDE               	movlw	low _manual_Doorlight
  1326   001594  0100               	movlb	0	; () banked
  1327   001596  6FD8               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  1328   001598  0E32               	movlw	high _manual_Doorlight
  1329   00159A  6FD9               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1330   00159C  EC85  F01A         	call	_INT2_SetInterruptHandler	;wreg free
  1331   0015A0                     
  1332                           ;main.c: 50:     EXTEEPROM_WriteByte(0x50, 0x00, 0x07);
  1333   0015A0  0E00               	movlw	0
  1334   0015A2  0100               	movlb	0	; () banked
  1335   0015A4  6FE4               	movwf	EXTEEPROM_WriteByte@Byteadd& (0+255),b
  1336   0015A6  0E07               	movlw	7
  1337   0015A8  6FE5               	movwf	EXTEEPROM_WriteByte@data& (0+255),b
  1338   0015AA  0E50               	movlw	80
  1339   0015AC  EC38  F01A         	call	_EXTEEPROM_WriteByte
  1340   0015B0                     
  1341                           ;main.c: 51:     _delay((unsigned long)((500)*(16000000L/4000.0)));
  1342   0015B0  0E0B               	movlw	11
  1343   0015B2  0101               	movlb	1	; () banked
  1344   0015B4  6F23               	movwf	(??_main+1)& (0+255),b
  1345   0015B6  0E26               	movlw	38
  1346   0015B8  6F22               	movwf	??_main& (0+255),b
  1347   0015BA  0E5D               	movlw	93
  1348   0015BC                     u5987:
  1349   0015BC  2EE8               	decfsz	wreg,f,c
  1350   0015BE  D7FE               	bra	u5987
  1351   0015C0  2F22               	decfsz	??_main& (0+255),f,b
  1352   0015C2  D7FC               	bra	u5987
  1353   0015C4  2F23               	decfsz	(??_main+1)& (0+255),f,b
  1354   0015C6  D7FA               	bra	u5987
  1355   0015C8  F000 F000          	nop2	
  1356   0015CC                     
  1357                           ;main.c: 52:     EXTEEPROM_WriteByte(0x51, 0x00, 0x08);
  1358   0015CC  0E00               	movlw	0
  1359   0015CE  0100               	movlb	0	; () banked
  1360   0015D0  6FE4               	movwf	EXTEEPROM_WriteByte@Byteadd& (0+255),b
  1361   0015D2  0E08               	movlw	8
  1362   0015D4  6FE5               	movwf	EXTEEPROM_WriteByte@data& (0+255),b
  1363   0015D6  0E51               	movlw	81
  1364   0015D8  EC38  F01A         	call	_EXTEEPROM_WriteByte
  1365   0015DC                     
  1366                           ;main.c: 53:     _delay((unsigned long)((500)*(16000000L/4000.0)));
  1367   0015DC  0E0B               	movlw	11
  1368   0015DE  0101               	movlb	1	; () banked
  1369   0015E0  6F23               	movwf	(??_main+1)& (0+255),b
  1370   0015E2  0E26               	movlw	38
  1371   0015E4  6F22               	movwf	??_main& (0+255),b
  1372   0015E6  0E5D               	movlw	93
  1373   0015E8                     u5997:
  1374   0015E8  2EE8               	decfsz	wreg,f,c
  1375   0015EA  D7FE               	bra	u5997
  1376   0015EC  2F22               	decfsz	??_main& (0+255),f,b
  1377   0015EE  D7FC               	bra	u5997
  1378   0015F0  2F23               	decfsz	(??_main+1)& (0+255),f,b
  1379   0015F2  D7FA               	bra	u5997
  1380   0015F4  F000 F000          	nop2	
  1381   0015F8                     
  1382                           ;main.c: 55:     EEPROMreading = EXTEEPROM_ReadByte(0x50, 0x00);
  1383   0015F8  0E00               	movlw	0
  1384   0015FA  0100               	movlb	0	; () banked
  1385   0015FC  6FE4               	movwf	EXTEEPROM_ReadByte@Byteadd& (0+255),b
  1386   0015FE  0E50               	movlw	80
  1387   001600  EC08  F01A         	call	_EXTEEPROM_ReadByte
  1388   001604  0100               	movlb	0	; () banked
  1389   001606  6F92               	movwf	_EEPROMreading& (0+255),b
  1390   001608                     
  1391                           ; BSR set to: 0
  1392                           ;main.c: 56:     _delay((unsigned long)((500)*(16000000L/4000.0)));
  1393   001608  0E0B               	movlw	11
  1394   00160A  0101               	movlb	1	; () banked
  1395   00160C  6F23               	movwf	(??_main+1)& (0+255),b
  1396   00160E  0E26               	movlw	38
  1397   001610  6F22               	movwf	??_main& (0+255),b
  1398   001612  0E5D               	movlw	93
  1399   001614                     u6007:
  1400   001614  2EE8               	decfsz	wreg,f,c
  1401   001616  D7FE               	bra	u6007
  1402   001618  2F22               	decfsz	??_main& (0+255),f,b
  1403   00161A  D7FC               	bra	u6007
  1404   00161C  2F23               	decfsz	(??_main+1)& (0+255),f,b
  1405   00161E  D7FA               	bra	u6007
  1406   001620  F000 F000          	nop2	
  1407   001624                     
  1408                           ;main.c: 58:     LCD4B_SET(&lcd);
  1409   001624  0ECC               	movlw	low _lcd
  1410   001626  0101               	movlb	1	; () banked
  1411   001628  6F18               	movwf	LCD4B_SET@lcd& (0+255),b
  1412   00162A  ECB3  F00B         	call	_LCD4B_SET	;wreg free
  1413   00162E                     l9013:
  1414                           
  1415                           ;main.c: 63:         timer = GetDataAndTime();
  1416   00162E  ECDA  F014         	call	_GetDataAndTime	;wreg free
  1417   001632  EE20  F084         	lfsr	2,_timer
  1418   001636  0E06               	movlw	6
  1419   001638                     u5911:
  1420   001638  CFEB FFDB          	movff	plusw0,plusw2
  1421   00163C  06E8               	decf	wreg,f,c
  1422   00163E  E2FC               	bc	u5911
  1423   001640                     
  1424                           ;main.c: 69:         TCA7temp = ReadTemp(0x4F);
  1425   001640  0E4F               	movlw	79
  1426   001642  ECF0  F019         	call	_ReadTemp
  1427   001646  0100               	movlb	0	; () banked
  1428   001648  6F93               	movwf	_TCA7temp& (0+255),b
  1429   00164A                     
  1430                           ; BSR set to: 0
  1431                           ;main.c: 71:         sprintf((char *)LCDtemp,"%u",TCA7temp);
  1432   00164A  0EA8               	movlw	low _LCDtemp
  1433   00164C  0101               	movlb	1	; () banked
  1434   00164E  6F00               	movwf	sprintf@s& (0+255),b
  1435   001650  0EA3               	movlw	low STR_3
  1436   001652  6F01               	movwf	sprintf@fmt& (0+255),b
  1437   001654  C093  F102         	movff	_TCA7temp,?_sprintf+2
  1438   001658  6B03               	clrf	(?_sprintf+3)& (0+255),b
  1439   00165A  EC50  F017         	call	_sprintf	;wreg free
  1440   00165E                     
  1441                           ;main.c: 73:         I2C_Write1ByteRegister(0x38,0x00,(uint8_t)TCA7temp);
  1442   00165E  0E00               	movlw	0
  1443   001660  0100               	movlb	0	; () banked
  1444   001662  6FE1               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  1445   001664  C093  F0E2         	movff	_TCA7temp,I2C_Write1ByteRegister@data
  1446   001668  0E38               	movlw	56
  1447   00166A  EC30  F014         	call	_I2C_Write1ByteRegister
  1448   00166E                     
  1449                           ;main.c: 75:         if (homelightauto == 1){
  1450   00166E  0100               	movlb	0	; () banked
  1451   001670  05CB               	decf	_homelightauto& (0+255),w,b
  1452   001672  A4D8               	btfss	status,2,c
  1453   001674  EF3E  F00B         	goto	u5921
  1454   001678  EF40  F00B         	goto	u5920
  1455   00167C                     u5921:
  1456   00167C  EF47  F00B         	goto	l9025
  1457   001680                     u5920:
  1458   001680                     
  1459                           ; BSR set to: 0
  1460                           ;main.c: 77:             lightread = ADC_GetConversion(LDR);
  1461   001680  0E00               	movlw	0
  1462   001682  ECD8  F017         	call	_ADC_GetConversion
  1463   001686  C0D8  F08B         	movff	?_ADC_GetConversion,_lightread
  1464   00168A  C0D9  F08C         	movff	?_ADC_GetConversion+1,_lightread+1
  1465   00168E                     l9025:
  1466                           
  1467                           ;main.c: 79:         _delay((unsigned long)((200)*(16000000L/4000.0)));
  1468   00168E  0E05               	movlw	5
  1469   001690  0101               	movlb	1	; () banked
  1470   001692  6F23               	movwf	(??_main+1)& (0+255),b
  1471   001694  0E0F               	movlw	15
  1472   001696  6F22               	movwf	??_main& (0+255),b
  1473   001698  0EF1               	movlw	241
  1474   00169A                     u6017:
  1475   00169A  2EE8               	decfsz	wreg,f,c
  1476   00169C  D7FE               	bra	u6017
  1477   00169E  2F22               	decfsz	??_main& (0+255),f,b
  1478   0016A0  D7FC               	bra	u6017
  1479   0016A2  2F23               	decfsz	(??_main+1)& (0+255),f,b
  1480   0016A4  D7FA               	bra	u6017
  1481   0016A6                     
  1482                           ;main.c: 83:         LCD4B_SENDCHAR(&lcd,0x01);
  1483   0016A6  0ECC               	movlw	low _lcd
  1484   0016A8  0101               	movlb	1	; () banked
  1485   0016AA  6F0E               	movwf	LCD4B_SENDCHAR@lcd& (0+255),b
  1486   0016AC  0E01               	movlw	1
  1487   0016AE  6F0F               	movwf	LCD4B_SENDCHAR@data& (0+255),b
  1488   0016B0  EC72  F00D         	call	_LCD4B_SENDCHAR	;wreg free
  1489   0016B4                     
  1490                           ;main.c: 84:         LCD4B_SENDSTRPOS(&lcd,(uint8_t *)"Date: ",1,1);
  1491   0016B4  0ECC               	movlw	low _lcd
  1492   0016B6  0101               	movlb	1	; () banked
  1493   0016B8  6F1E               	movwf	LCD4B_SENDSTRPOS@lcd& (0+255),b
  1494   0016BA  0E87               	movlw	low STR_4
  1495   0016BC  6F1F               	movwf	LCD4B_SENDSTRPOS@str& (0+255),b
  1496   0016BE  0E01               	movlw	1
  1497   0016C0  6F20               	movwf	LCD4B_SENDSTRPOS@row& (0+255),b
  1498   0016C2  0E01               	movlw	1
  1499   0016C4  6F21               	movwf	LCD4B_SENDSTRPOS@column& (0+255),b
  1500   0016C6  EC79  F015         	call	_LCD4B_SENDSTRPOS	;wreg free
  1501   0016CA                     
  1502                           ;main.c: 85:         LCD4B_SENDSTR(&lcd,PrintDateUART());
  1503   0016CA  0ECC               	movlw	low _lcd
  1504   0016CC  0101               	movlb	1	; () banked
  1505   0016CE  6F18               	movwf	LCD4B_SENDSTR@lcd& (0+255),b
  1506   0016D0  EC43  F016         	call	_PrintDateUART	;wreg free
  1507   0016D4  0101               	movlb	1	; () banked
  1508   0016D6  6F19               	movwf	LCD4B_SENDSTR@str& (0+255),b
  1509   0016D8  ECD5  F016         	call	_LCD4B_SENDSTR	;wreg free
  1510   0016DC                     
  1511                           ;main.c: 86:         LCD4B_SENDSTRPOS(&lcd,(uint8_t *)"Time: ",2,1);
  1512   0016DC  0ECC               	movlw	low _lcd
  1513   0016DE  0101               	movlb	1	; () banked
  1514   0016E0  6F1E               	movwf	LCD4B_SENDSTRPOS@lcd& (0+255),b
  1515   0016E2  0E95               	movlw	low STR_2
  1516   0016E4  6F1F               	movwf	LCD4B_SENDSTRPOS@str& (0+255),b
  1517   0016E6  0E02               	movlw	2
  1518   0016E8  6F20               	movwf	LCD4B_SENDSTRPOS@row& (0+255),b
  1519   0016EA  0E01               	movlw	1
  1520   0016EC  6F21               	movwf	LCD4B_SENDSTRPOS@column& (0+255),b
  1521   0016EE  EC79  F015         	call	_LCD4B_SENDSTRPOS	;wreg free
  1522   0016F2                     
  1523                           ;main.c: 87:         LCD4B_SENDSTR(&lcd,PrintTimeUART());
  1524   0016F2  0ECC               	movlw	low _lcd
  1525   0016F4  0101               	movlb	1	; () banked
  1526   0016F6  6F18               	movwf	LCD4B_SENDSTR@lcd& (0+255),b
  1527   0016F8  EC12  F016         	call	_PrintTimeUART	;wreg free
  1528   0016FC  0101               	movlb	1	; () banked
  1529   0016FE  6F19               	movwf	LCD4B_SENDSTR@str& (0+255),b
  1530   001700  ECD5  F016         	call	_LCD4B_SENDSTR	;wreg free
  1531   001704                     
  1532                           ;main.c: 88:         LCD4B_SENDSTRPOS(&lcd,(uint8_t *)"TEMP: ",3,1);
  1533   001704  0ECC               	movlw	low _lcd
  1534   001706  0101               	movlb	1	; () banked
  1535   001708  6F1E               	movwf	LCD4B_SENDSTRPOS@lcd& (0+255),b
  1536   00170A  0E80               	movlw	low STR_6
  1537   00170C  6F1F               	movwf	LCD4B_SENDSTRPOS@str& (0+255),b
  1538   00170E  0E03               	movlw	3
  1539   001710  6F20               	movwf	LCD4B_SENDSTRPOS@row& (0+255),b
  1540   001712  0E01               	movlw	1
  1541   001714  6F21               	movwf	LCD4B_SENDSTRPOS@column& (0+255),b
  1542   001716  EC79  F015         	call	_LCD4B_SENDSTRPOS	;wreg free
  1543   00171A                     
  1544                           ;main.c: 89:         LCD4B_SENDSTR(&lcd,LCDtemp);
  1545   00171A  0ECC               	movlw	low _lcd
  1546   00171C  0101               	movlb	1	; () banked
  1547   00171E  6F18               	movwf	LCD4B_SENDSTR@lcd& (0+255),b
  1548   001720  0EA8               	movlw	low _LCDtemp
  1549   001722  6F19               	movwf	LCD4B_SENDSTR@str& (0+255),b
  1550   001724  ECD5  F016         	call	_LCD4B_SENDSTR	;wreg free
  1551   001728                     
  1552                           ;main.c: 92:         if (timer.hour == 0x07){
  1553   001728  0E07               	movlw	7
  1554   00172A  0100               	movlb	0	; () banked
  1555   00172C  1986               	xorwf	(_timer+2)& (0+255),w,b
  1556   00172E  A4D8               	btfss	status,2,c
  1557   001730  EF9C  F00B         	goto	u5931
  1558   001734  EF9E  F00B         	goto	u5930
  1559   001738                     u5931:
  1560   001738  EFA2  F00B         	goto	l9045
  1561   00173C                     u5930:
  1562   00173C                     
  1563                           ; BSR set to: 0
  1564                           ;main.c: 93:             homelightauto = 1;
  1565   00173C  0E01               	movlw	1
  1566   00173E  6FCB               	movwf	_homelightauto& (0+255),b
  1567                           
  1568                           ;main.c: 94:             doorlightauto = 1;
  1569   001740  0E01               	movlw	1
  1570   001742  6FCA               	movwf	_doorlightauto& (0+255),b
  1571   001744                     l9045:
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;main.c: 96:         _delay((unsigned long)((739)*(16000000L/4000.0)));
  1575   001744  0E0F               	movlw	15
  1576   001746  0101               	movlb	1	; () banked
  1577   001748  6F23               	movwf	(??_main+1)& (0+255),b
  1578   00174A  0EFF               	movlw	255
  1579   00174C  6F22               	movwf	??_main& (0+255),b
  1580   00174E  0EEA               	movlw	234
  1581   001750                     u6027:
  1582   001750  2EE8               	decfsz	wreg,f,c
  1583   001752  D7FE               	bra	u6027
  1584   001754  2F22               	decfsz	??_main& (0+255),f,b
  1585   001756  D7FC               	bra	u6027
  1586   001758  2F23               	decfsz	(??_main+1)& (0+255),f,b
  1587   00175A  D7FA               	bra	u6027
  1588   00175C  0000               	nop	
  1589   00175E  EF17  F00B         	goto	l9013
  1590   001762  EF33  F000         	goto	start
  1591   001766                     __end_of_main:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _sprintf *****************
  1595 ;; Defined at:
  1596 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  s               1    0[BANK1 ] PTR unsigned char 
  1599 ;;		 -> LCDtemp(4), 
  1600 ;;  fmt             1    1[BANK1 ] PTR const unsigned char 
  1601 ;;		 -> STR_9(4), STR_8(3), STR_7(3), STR_3(3), 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  f              12    8[BANK1 ] struct _IO_FILE
  1604 ;;  ap              2    6[BANK1 ] PTR void [1]
  1605 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1606 ;;  ret             2    0        int 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  2    0[BANK1 ] int 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1616 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;Total ram usage:       20 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 14
  1623 ;; This function calls:
  1624 ;;		_vfprintf
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;;		_byte2str
  1628 ;;		_short2str
  1629 ;;		_int2str
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text1
  1634   002EA0                     __ptext1:
  1635                           	callstack 0
  1636   002EA0                     _sprintf:
  1637                           	callstack 16
  1638   002EA0  0E02               	movlw	low (?_sprintf+2)
  1639   002EA2  0101               	movlb	1	; () banked
  1640   002EA4  6F06               	movwf	sprintf@ap& (0+255),b
  1641   002EA6  0E01               	movlw	high (?_sprintf+2)
  1642   002EA8  6F07               	movwf	(sprintf@ap+1)& (0+255),b
  1643   002EAA  C100  F108         	movff	sprintf@s,sprintf@f
  1644   002EAE                     
  1645                           ; BSR set to: 1
  1646   002EAE  0E00               	movlw	0
  1647   002EB0  6F0C               	movwf	(sprintf@f+4)& (0+255),b
  1648   002EB2  0E00               	movlw	0
  1649   002EB4  6F0B               	movwf	(sprintf@f+3)& (0+255),b
  1650   002EB6                     
  1651                           ; BSR set to: 1
  1652   002EB6  0E00               	movlw	0
  1653   002EB8  6F13               	movwf	(sprintf@f+11)& (0+255),b
  1654   002EBA  0E00               	movlw	0
  1655   002EBC  6F12               	movwf	(sprintf@f+10)& (0+255),b
  1656   002EBE                     
  1657                           ; BSR set to: 1
  1658   002EBE  0E08               	movlw	low sprintf@f
  1659   002EC0  0100               	movlb	0	; () banked
  1660   002EC2  6FF6               	movwf	vfprintf@fp& (0+255),b
  1661   002EC4  0E01               	movlw	high sprintf@f
  1662   002EC6  6FF7               	movwf	(vfprintf@fp+1)& (0+255),b
  1663   002EC8  C101  F0F8         	movff	sprintf@fmt,vfprintf@fmt
  1664   002ECC  0E06               	movlw	low sprintf@ap
  1665   002ECE  6FF9               	movwf	vfprintf@ap& (0+255),b
  1666   002ED0  0E01               	movlw	high sprintf@ap
  1667   002ED2  6FFA               	movwf	(vfprintf@ap+1)& (0+255),b
  1668   002ED4  EC2A  F017         	call	_vfprintf	;wreg free
  1669   002ED8  0101               	movlb	1	; () banked
  1670   002EDA  5100               	movf	sprintf@s& (0+255),w,b
  1671   002EDC  250B               	addwf	(sprintf@f+3)& (0+255),w,b
  1672   002EDE  6ED9               	movwf	fsr2l,c
  1673   002EE0  6ADA               	clrf	fsr2h,c
  1674   002EE2  6ADF               	clrf	indf2,c
  1675   002EE4                     
  1676                           ; BSR set to: 1
  1677   002EE4  0012               	return		;funcret
  1678   002EE6                     __end_of_sprintf:
  1679                           	callstack 0
  1680                           
  1681 ;; *************** function _SYSTEM_Initialize *****************
  1682 ;; Defined at:
  1683 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 12
  1704 ;; This function calls:
  1705 ;;		_ADC_Initialize
  1706 ;;		_EUSART_Initialize
  1707 ;;		_EXT_INT_Initialize
  1708 ;;		_I2C_Initialize
  1709 ;;		_INTERRUPT_Initialize
  1710 ;;		_OSCILLATOR_Initialize
  1711 ;;		_PIN_MANAGER_Initialize
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text2
  1718   00332E                     __ptext2:
  1719                           	callstack 0
  1720   00332E                     _SYSTEM_Initialize:
  1721                           	callstack 18
  1722   00332E                     
  1723                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1724   00332E  EC67  F01A         	call	_INTERRUPT_Initialize	;wreg free
  1725   003332                     
  1726                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  1727   003332  EC43  F01A         	call	_I2C_Initialize	;wreg free
  1728   003336                     
  1729                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  1730   003336  EC32  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  1731   00333A                     
  1732                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  1733   00333A  EC80  F01A         	call	_OSCILLATOR_Initialize	;wreg free
  1734   00333E                     
  1735                           ;mcc_generated_files/mcc.c: 57:     EXT_INT_Initialize();
  1736   00333E  ECF8  F017         	call	_EXT_INT_Initialize	;wreg free
  1737   003342                     
  1738                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  1739   003342  EC84  F019         	call	_ADC_Initialize	;wreg free
  1740   003346                     
  1741                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  1742   003346  EC73  F017         	call	_EUSART_Initialize	;wreg free
  1743   00334A                     
  1744                           ;mcc_generated_files/mcc.c: 63:     (INTCONbits.GIEH = 1);
  1745   00334A  8EF2               	bsf	242,7,c	;volatile
  1746   00334C                     
  1747                           ;mcc_generated_files/mcc.c: 65:     (INTCONbits.GIEL = 1);
  1748   00334C  8CF2               	bsf	242,6,c	;volatile
  1749   00334E                     
  1750                           ;mcc_generated_files/mcc.c: 67:     (INTCONbits.PEIE = 1);
  1751   00334E  8CF2               	bsf	242,6,c	;volatile
  1752   003350  0012               	return		;funcret
  1753   003352                     __end_of_SYSTEM_Initialize:
  1754                           	callstack 0
  1755                           
  1756 ;; *************** function _PIN_MANAGER_Initialize *****************
  1757 ;; Defined at:
  1758 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;		None
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;		None
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;Total ram usage:        0 bytes
  1777 ;; Hardware stack levels used: 1
  1778 ;; Hardware stack levels required when called: 10
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_SYSTEM_Initialize
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text3
  1787   003064                     __ptext3:
  1788                           	callstack 0
  1789   003064                     _PIN_MANAGER_Initialize:
  1790                           	callstack 19
  1791   003064                     
  1792                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1793   003064  0E00               	movlw	0
  1794   003066  6E8D               	movwf	141,c	;volatile
  1795                           
  1796                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1797   003068  0E00               	movlw	0
  1798   00306A  6E8C               	movwf	140,c	;volatile
  1799                           
  1800                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1801   00306C  0E00               	movlw	0
  1802   00306E  6E89               	movwf	137,c	;volatile
  1803                           
  1804                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1805   003070  0E00               	movlw	0
  1806   003072  6E8A               	movwf	138,c	;volatile
  1807                           
  1808                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1809   003074  0E00               	movlw	0
  1810   003076  6E8B               	movwf	139,c	;volatile
  1811                           
  1812                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1813   003078  0E07               	movlw	7
  1814   00307A  6E96               	movwf	150,c	;volatile
  1815                           
  1816                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xE7;
  1817   00307C  0EE7               	movlw	231
  1818   00307E  6E92               	movwf	146,c	;volatile
  1819   003080                     
  1820                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1821   003080  6893               	setf	147,c	;volatile
  1822                           
  1823                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1824   003082  0EBF               	movlw	191
  1825   003084  6E94               	movwf	148,c	;volatile
  1826                           
  1827                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1828   003086  0EFE               	movlw	254
  1829   003088  6E95               	movwf	149,c	;volatile
  1830   00308A                     
  1831                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  1832   00308A  687E               	setf	126,c	;volatile
  1833                           
  1834                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x0A;
  1835   00308C  0E0A               	movlw	10
  1836   00308E  6E7F               	movwf	127,c	;volatile
  1837                           
  1838                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  1839   003090  0E00               	movlw	0
  1840   003092  6E7C               	movwf	124,c	;volatile
  1841   003094                     
  1842                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  1843   003094  8EF1               	bsf	241,7,c	;volatile
  1844   003096  0012               	return		;funcret
  1845   003098                     __end_of_PIN_MANAGER_Initialize:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _OSCILLATOR_Initialize *****************
  1849 ;; Defined at:
  1850 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;Total ram usage:        0 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 10
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_SYSTEM_Initialize
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text4
  1879   003500                     __ptext4:
  1880                           	callstack 0
  1881   003500                     _OSCILLATOR_Initialize:
  1882                           	callstack 19
  1883   003500                     
  1884                           ;mcc_generated_files/mcc.c: 73:     OSCCON = 0x30;
  1885   003500  0E30               	movlw	48
  1886   003502  6ED3               	movwf	211,c	;volatile
  1887                           
  1888                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  1889   003504  0E00               	movlw	0
  1890   003506  6E9B               	movwf	155,c	;volatile
  1891   003508  0012               	return		;funcret
  1892   00350A                     __end_of_OSCILLATOR_Initialize:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function _INTERRUPT_Initialize *****************
  1896 ;; Defined at:
  1897 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		None
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;Total ram usage:        0 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 10
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_SYSTEM_Initialize
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text5
  1926   0034CE                     __ptext5:
  1927                           	callstack 0
  1928   0034CE                     _INTERRUPT_Initialize:
  1929                           	callstack 19
  1930   0034CE                     
  1931                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  1932   0034CE  8ED0               	bsf	208,7,c	;volatile
  1933                           
  1934                           ;mcc_generated_files/interrupt_manager.c: 62:     INTCON3bits.INT1IP = 1;
  1935   0034D0  8CF0               	bsf	240,6,c	;volatile
  1936                           
  1937                           ;mcc_generated_files/interrupt_manager.c: 65:     INTCON3bits.INT2IP = 1;
  1938   0034D2  8EF0               	bsf	240,7,c	;volatile
  1939                           
  1940                           ;mcc_generated_files/interrupt_manager.c: 68:     IPR1bits.SSPIP = 1;
  1941   0034D4  869F               	bsf	159,3,c	;volatile
  1942                           
  1943                           ;mcc_generated_files/interrupt_manager.c: 71:     IPR2bits.BCLIP = 1;
  1944   0034D6  86A2               	bsf	162,3,c	;volatile
  1945                           
  1946                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.ADIP = 0;
  1947   0034D8  9C9F               	bcf	159,6,c	;volatile
  1948   0034DA  0012               	return		;funcret
  1949   0034DC                     __end_of_INTERRUPT_Initialize:
  1950                           	callstack 0
  1951                           
  1952 ;; *************** function _I2C_Initialize *****************
  1953 ;; Defined at:
  1954 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; Hardware stack levels required when called: 10
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_SYSTEM_Initialize
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text6
  1983   003486                     __ptext6:
  1984                           	callstack 0
  1985   003486                     _I2C_Initialize:
  1986                           	callstack 19
  1987   003486                     
  1988                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  1989   003486  0E00               	movlw	0
  1990   003488  6EC7               	movwf	199,c	;volatile
  1991                           
  1992                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  1993   00348A  0E08               	movlw	8
  1994   00348C  6EC6               	movwf	198,c	;volatile
  1995                           
  1996                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  1997   00348E  0E00               	movlw	0
  1998   003490  6EC5               	movwf	197,c	;volatile
  1999                           
  2000                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x27;
  2001   003492  0E27               	movlw	39
  2002   003494  6EC8               	movwf	200,c	;volatile
  2003   003496                     
  2004                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2005   003496  9AC6               	bcf	198,5,c	;volatile
  2006   003498  0012               	return		;funcret
  2007   00349A                     __end_of_I2C_Initialize:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _EXT_INT_Initialize *****************
  2011 ;; Defined at:
  2012 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; Hardware stack levels required when called: 11
  2033 ;; This function calls:
  2034 ;;		_INT0_SetInterruptHandler
  2035 ;;		_INT1_SetInterruptHandler
  2036 ;;		_INT2_SetInterruptHandler
  2037 ;; This function is called by:
  2038 ;;		_SYSTEM_Initialize
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text7
  2043   002FF0                     __ptext7:
  2044                           	callstack 0
  2045   002FF0                     _EXT_INT_Initialize:
  2046                           	callstack 18
  2047   002FF0                     
  2048                           ;mcc_generated_files/ext_int.c: 118:     (INTCONbits.INT0IF = 0);
  2049   002FF0  92F2               	bcf	242,1,c	;volatile
  2050                           
  2051                           ;mcc_generated_files/ext_int.c: 119:     (INTCON2bits.INTEDG0 = 1);
  2052   002FF2  8CF1               	bsf	241,6,c	;volatile
  2053   002FF4                     
  2054                           ;mcc_generated_files/ext_int.c: 121:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
  2055   002FF4  0E08               	movlw	low _INT0_DefaultInterruptHandler
  2056   002FF6  0100               	movlb	0	; () banked
  2057   002FF8  6FD8               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  2058   002FFA  0E36               	movlw	high _INT0_DefaultInterruptHandler
  2059   002FFC  6FD9               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2060   002FFE  EC8F  F01A         	call	_INT0_SetInterruptHandler	;wreg free
  2061   003002                     
  2062                           ;mcc_generated_files/ext_int.c: 122:     (INTCONbits.INT0IE = 1);
  2063   003002  88F2               	bsf	242,4,c	;volatile
  2064   003004                     
  2065                           ;mcc_generated_files/ext_int.c: 127:     (INTCON3bits.INT1IF = 0);
  2066   003004  90F0               	bcf	240,0,c	;volatile
  2067   003006                     
  2068                           ;mcc_generated_files/ext_int.c: 128:     (INTCON2bits.INTEDG1 = 1);
  2069   003006  8AF1               	bsf	241,5,c	;volatile
  2070                           
  2071                           ;mcc_generated_files/ext_int.c: 130:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  2072   003008  0E06               	movlw	low _INT1_DefaultInterruptHandler
  2073   00300A  0100               	movlb	0	; () banked
  2074   00300C  6FD8               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  2075   00300E  0E36               	movlw	high _INT1_DefaultInterruptHandler
  2076   003010  6FD9               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2077   003012  EC8A  F01A         	call	_INT1_SetInterruptHandler	;wreg free
  2078   003016                     
  2079                           ;mcc_generated_files/ext_int.c: 131:     (INTCON3bits.INT1IE = 1);
  2080   003016  86F0               	bsf	240,3,c	;volatile
  2081   003018                     
  2082                           ;mcc_generated_files/ext_int.c: 136:     (INTCON3bits.INT2IF = 0);
  2083   003018  92F0               	bcf	240,1,c	;volatile
  2084   00301A                     
  2085                           ;mcc_generated_files/ext_int.c: 137:     (INTCON2bits.INTEDG2 = 1);
  2086   00301A  88F1               	bsf	241,4,c	;volatile
  2087                           
  2088                           ;mcc_generated_files/ext_int.c: 139:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  2089   00301C  0E04               	movlw	low _INT2_DefaultInterruptHandler
  2090   00301E  0100               	movlb	0	; () banked
  2091   003020  6FD8               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  2092   003022  0E36               	movlw	high _INT2_DefaultInterruptHandler
  2093   003024  6FD9               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2094   003026  EC85  F01A         	call	_INT2_SetInterruptHandler	;wreg free
  2095   00302A                     
  2096                           ;mcc_generated_files/ext_int.c: 140:     (INTCON3bits.INT2IE = 1);
  2097   00302A  88F0               	bsf	240,4,c	;volatile
  2098   00302C  0012               	return		;funcret
  2099   00302E                     __end_of_EXT_INT_Initialize:
  2100                           	callstack 0
  2101                           
  2102 ;; *************** function _INT2_SetInterruptHandler *****************
  2103 ;; Defined at:
  2104 ;;		line 104 in file "mcc_generated_files/ext_int.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2107 ;;		 -> manual_Doorlight(1), INT2_DefaultInterruptHandler(1), 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2119 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;Total ram usage:        2 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 10
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_EXT_INT_Initialize
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text8
  2135   00350A                     __ptext8:
  2136                           	callstack 0
  2137   00350A                     _INT2_SetInterruptHandler:
  2138                           	callstack 18
  2139   00350A                     
  2140                           ;mcc_generated_files/ext_int.c: 105:     INT2_InterruptHandler = InterruptHandler;
  2141   00350A  C0D8  F038         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2142   00350E  C0D9  F039         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2143   003512  0012               	return		;funcret
  2144   003514                     __end_of_INT2_SetInterruptHandler:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _INT1_SetInterruptHandler *****************
  2148 ;; Defined at:
  2149 ;;		line 78 in file "mcc_generated_files/ext_int.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2152 ;;		 -> manual_homelight(1), INT1_DefaultInterruptHandler(1), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2164 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;Total ram usage:        2 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 10
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_EXT_INT_Initialize
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text9
  2180   003514                     __ptext9:
  2181                           	callstack 0
  2182   003514                     _INT1_SetInterruptHandler:
  2183                           	callstack 18
  2184   003514                     
  2185                           ;mcc_generated_files/ext_int.c: 79:     INT1_InterruptHandler = InterruptHandler;
  2186   003514  C0D8  F03A         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2187   003518  C0D9  F03B         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2188   00351C  0012               	return		;funcret
  2189   00351E                     __end_of_INT1_SetInterruptHandler:
  2190                           	callstack 0
  2191                           
  2192 ;; *************** function _INT0_SetInterruptHandler *****************
  2193 ;; Defined at:
  2194 ;;		line 52 in file "mcc_generated_files/ext_int.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2197 ;;		 -> manual_Override(1), INT0_DefaultInterruptHandler(1), 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2209 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;Total ram usage:        2 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 10
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_EXT_INT_Initialize
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text10
  2225   00351E                     __ptext10:
  2226                           	callstack 0
  2227   00351E                     _INT0_SetInterruptHandler:
  2228                           	callstack 18
  2229   00351E                     
  2230                           ;mcc_generated_files/ext_int.c: 53:     INT0_InterruptHandler = InterruptHandler;
  2231   00351E  C0D8  F03C         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2232   003522  C0D9  F03D         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2233   003526  0012               	return		;funcret
  2234   003528                     __end_of_INT0_SetInterruptHandler:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function _EUSART_Initialize *****************
  2238 ;; Defined at:
  2239 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;Total ram usage:        0 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 11
  2260 ;; This function calls:
  2261 ;;		_EUSART_SetErrorHandler
  2262 ;;		_EUSART_SetFramingErrorHandler
  2263 ;;		_EUSART_SetOverrunErrorHandler
  2264 ;; This function is called by:
  2265 ;;		_SYSTEM_Initialize
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text11
  2270   002EE6                     __ptext11:
  2271                           	callstack 0
  2272   002EE6                     _EUSART_Initialize:
  2273                           	callstack 18
  2274   002EE6                     
  2275                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  2276   002EE6  0E08               	movlw	8
  2277   002EE8  6EB8               	movwf	184,c	;volatile
  2278                           
  2279                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  2280   002EEA  0E90               	movlw	144
  2281   002EEC  6EAB               	movwf	171,c	;volatile
  2282                           
  2283                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  2284   002EEE  0E24               	movlw	36
  2285   002EF0  6EAC               	movwf	172,c	;volatile
  2286                           
  2287                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xA0;
  2288   002EF2  0EA0               	movlw	160
  2289   002EF4  6EAF               	movwf	175,c	;volatile
  2290                           
  2291                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  2292   002EF6  0E01               	movlw	1
  2293   002EF8  6EB0               	movwf	176,c	;volatile
  2294   002EFA                     
  2295                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2296   002EFA  0E00               	movlw	0
  2297   002EFC  0100               	movlb	0	; () banked
  2298   002EFE  6FD8               	movwf	EUSART_SetFramingErrorHandler@interruptHandler& (0+255),b
  2299   002F00  0E00               	movlw	0
  2300   002F02  6FD9               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  2301   002F04  EC99  F01A         	call	_EUSART_SetFramingErrorHandler	;wreg free
  2302   002F08                     
  2303                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2304   002F08  0E00               	movlw	0
  2305   002F0A  0100               	movlb	0	; () banked
  2306   002F0C  6FD8               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler& (0+255),b
  2307   002F0E  0E00               	movlw	0
  2308   002F10  6FD9               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  2309   002F12  EC94  F01A         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  2310   002F16                     
  2311                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2312   002F16  0E00               	movlw	0
  2313   002F18  0100               	movlb	0	; () banked
  2314   002F1A  6FD8               	movwf	EUSART_SetErrorHandler@interruptHandler& (0+255),b
  2315   002F1C  0E00               	movlw	0
  2316   002F1E  6FD9               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)& (0+255),b
  2317   002F20  EC9E  F01A         	call	_EUSART_SetErrorHandler	;wreg free
  2318   002F24                     
  2319                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  2320   002F24  0E00               	movlw	0
  2321   002F26  6E31               	movwf	_eusartRxLastError^0,c	;volatile
  2322   002F28  0012               	return		;funcret
  2323   002F2A                     __end_of_EUSART_Initialize:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2327 ;; Defined at:
  2328 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2331 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;Total ram usage:        2 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 10
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_EUSART_Initialize
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text12
  2358   003528                     __ptext12:
  2359                           	callstack 0
  2360   003528                     _EUSART_SetOverrunErrorHandler:
  2361                           	callstack 18
  2362   003528                     
  2363                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  2364   003528  C0D8  F146         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  2365   00352C  C0D9  F147         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  2366   003530  0012               	return		;funcret
  2367   003532                     __end_of_EUSART_SetOverrunErrorHandler:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2371 ;; Defined at:
  2372 ;;		line 157 in file "mcc_generated_files/eusart.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2375 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2387 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;Total ram usage:        2 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; Hardware stack levels required when called: 10
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_EUSART_Initialize
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text13
  2402   003532                     __ptext13:
  2403                           	callstack 0
  2404   003532                     _EUSART_SetFramingErrorHandler:
  2405                           	callstack 18
  2406   003532                     
  2407                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  2408   003532  C0D8  F0FE         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  2409   003536  C0D9  F0FF         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  2410   00353A  0012               	return		;funcret
  2411   00353C                     __end_of_EUSART_SetFramingErrorHandler:
  2412                           	callstack 0
  2413                           
  2414 ;; *************** function _EUSART_SetErrorHandler *****************
  2415 ;; Defined at:
  2416 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2419 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2431 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;Total ram usage:        2 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 10
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_EUSART_Initialize
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text14
  2446   00353C                     __ptext14:
  2447                           	callstack 0
  2448   00353C                     _EUSART_SetErrorHandler:
  2449                           	callstack 18
  2450   00353C                     
  2451                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  2452   00353C  C0D8  F144         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  2453   003540  C0D9  F145         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  2454   003544  0012               	return		;funcret
  2455   003546                     __end_of_EUSART_SetErrorHandler:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function _ADC_Initialize *****************
  2459 ;; Defined at:
  2460 ;;		line 62 in file "mcc_generated_files/adc.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 11
  2481 ;; This function calls:
  2482 ;;		_ADC_SetInterruptHandler
  2483 ;; This function is called by:
  2484 ;;		_SYSTEM_Initialize
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text15
  2489   003308                     __ptext15:
  2490                           	callstack 0
  2491   003308                     _ADC_Initialize:
  2492                           	callstack 18
  2493   003308                     
  2494                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  2495   003308  0E00               	movlw	0
  2496   00330A  6EC1               	movwf	193,c	;volatile
  2497                           
  2498                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x04;
  2499   00330C  0E04               	movlw	4
  2500   00330E  6EC0               	movwf	192,c	;volatile
  2501                           
  2502                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  2503   003310  0E00               	movlw	0
  2504   003312  6EC3               	movwf	195,c	;volatile
  2505                           
  2506                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  2507   003314  0E00               	movlw	0
  2508   003316  6EC4               	movwf	196,c	;volatile
  2509                           
  2510                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  2511   003318  0E01               	movlw	1
  2512   00331A  6EC2               	movwf	194,c	;volatile
  2513   00331C                     
  2514                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  2515   00331C  8C9D               	bsf	157,6,c	;volatile
  2516   00331E                     
  2517                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  2518   00331E  0E02               	movlw	low _ADC_DefaultInterruptHandler
  2519   003320  0100               	movlb	0	; () banked
  2520   003322  6FD8               	movwf	ADC_SetInterruptHandler@InterruptHandler& (0+255),b
  2521   003324  0E36               	movlw	high _ADC_DefaultInterruptHandler
  2522   003326  6FD9               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2523   003328  ECA3  F01A         	call	_ADC_SetInterruptHandler	;wreg free
  2524   00332C  0012               	return		;funcret
  2525   00332E                     __end_of_ADC_Initialize:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _ADC_SetInterruptHandler *****************
  2529 ;; Defined at:
  2530 ;;		line 151 in file "mcc_generated_files/adc.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2533 ;;		 -> lightSwitch(1), ADC_DefaultInterruptHandler(1), 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2545 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;Total ram usage:        2 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 10
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_ADC_Initialize
  2556 ;;		_main
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text16
  2561   003546                     __ptext16:
  2562                           	callstack 0
  2563   003546                     _ADC_SetInterruptHandler:
  2564                           	callstack 18
  2565   003546                     
  2566                           ;mcc_generated_files/adc.c: 152:     ADC_InterruptHandler = InterruptHandler;
  2567   003546  C0D8  F03E         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
  2568   00354A  C0D9  F03F         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
  2569   00354E  0012               	return		;funcret
  2570   003550                     __end_of_ADC_SetInterruptHandler:
  2571                           	callstack 0
  2572                           
  2573 ;; *************** function _ReadTemp *****************
  2574 ;; Defined at:
  2575 ;;		line 3 in file "AECUL/TC74/TC74.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  addr            1    wreg     unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  addr            1   12[BANK0 ] unsigned char 
  2580 ;;  temp            1   13[BANK0 ] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      unsigned char 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;Total ram usage:        2 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 14
  2597 ;; This function calls:
  2598 ;;		_I2C_Read1ByteRegister
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text17
  2605   0033E0                     __ptext17:
  2606                           	callstack 0
  2607   0033E0                     _ReadTemp:
  2608                           	callstack 16
  2609                           
  2610                           ;incstack = 0
  2611                           ;ReadTemp@addr stored from wreg
  2612   0033E0  0100               	movlb	0	; () banked
  2613   0033E2  6FE4               	movwf	ReadTemp@addr& (0+255),b
  2614   0033E4                     
  2615                           ;AECUL/TC74/TC74.c: 5:     temp = I2C_Read1ByteRegister(addr,0x00);
  2616   0033E4  0E00               	movlw	0
  2617   0033E6  0100               	movlb	0	; () banked
  2618   0033E8  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  2619   0033EA  51E4               	movf	ReadTemp@addr& (0+255),w,b
  2620   0033EC  ECB3  F013         	call	_I2C_Read1ByteRegister
  2621   0033F0  0100               	movlb	0	; () banked
  2622   0033F2  6FE5               	movwf	ReadTemp@temp& (0+255),b
  2623   0033F4                     
  2624                           ; BSR set to: 0
  2625                           ;AECUL/TC74/TC74.c: 6:     return temp;
  2626   0033F4  51E5               	movf	ReadTemp@temp& (0+255),w,b
  2627   0033F6                     
  2628                           ; BSR set to: 0
  2629   0033F6  0012               	return		;funcret
  2630   0033F8                     __end_of_ReadTemp:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function _PrintTimeUART *****************
  2634 ;; Defined at:
  2635 ;;		line 60 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      PTR unsigned char 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;Total ram usage:        2 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 16
  2656 ;; This function calls:
  2657 ;;		_EUSART_SendString
  2658 ;;		_TimeArray
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text18
  2665   002C24                     __ptext18:
  2666                           	callstack 0
  2667   002C24                     _PrintTimeUART:
  2668                           	callstack 14
  2669   002C24                     
  2670                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 61:     TimeArray();
  2671   002C24  EC4C  F018         	call	_TimeArray	;wreg free
  2672   002C28                     
  2673                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 63:     timestr[0] = ((_Time[2] >> 4) + '0
      +                          ');
  2674   002C28  3834               	swapf	(__Time+2)^0,w,c
  2675   002C2A  0B0F               	andlw	15
  2676   002C2C  0F30               	addlw	48
  2677   002C2E  0100               	movlb	0	; () banked
  2678   002C30  6F9E               	movwf	_timestr& (0+255),b
  2679   002C32                     
  2680                           ; BSR set to: 0
  2681                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 64:     timestr[1] = ((_Time[2] & 0x0F) + 
      +                          '0');
  2682   002C32  5034               	movf	(__Time+2)^0,w,c
  2683   002C34  0B0F               	andlw	15
  2684   002C36  0F30               	addlw	48
  2685   002C38  6F9F               	movwf	(_timestr+1)& (0+255),b
  2686   002C3A                     
  2687                           ; BSR set to: 0
  2688                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 65:     timestr[2] = ':';
  2689   002C3A  0E3A               	movlw	58
  2690   002C3C  6FA0               	movwf	(_timestr+2)& (0+255),b
  2691   002C3E                     
  2692                           ; BSR set to: 0
  2693                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 66:     timestr[3] = ((_Time[1] >> 4) + '0
      +                          ');
  2694   002C3E  3833               	swapf	(__Time+1)^0,w,c
  2695   002C40  0B0F               	andlw	15
  2696   002C42  0F30               	addlw	48
  2697   002C44  6FA1               	movwf	(_timestr+3)& (0+255),b
  2698   002C46                     
  2699                           ; BSR set to: 0
  2700                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 67:     timestr[4] = ((_Time[1] & 0x0F) + 
      +                          '0');
  2701   002C46  5033               	movf	(__Time+1)^0,w,c
  2702   002C48  0B0F               	andlw	15
  2703   002C4A  0F30               	addlw	48
  2704   002C4C  6FA2               	movwf	(_timestr+4)& (0+255),b
  2705   002C4E                     
  2706                           ; BSR set to: 0
  2707                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 68:     timestr[5] = ':';
  2708   002C4E  0E3A               	movlw	58
  2709   002C50  6FA3               	movwf	(_timestr+5)& (0+255),b
  2710   002C52                     
  2711                           ; BSR set to: 0
  2712                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 69:     timestr[6] = ((_Time[0] >> 4) + '0
      +                          ');
  2713   002C52  3832               	swapf	__Time^0,w,c
  2714   002C54  0B0F               	andlw	15
  2715   002C56  0F30               	addlw	48
  2716   002C58  6FA4               	movwf	(_timestr+6)& (0+255),b
  2717   002C5A                     
  2718                           ; BSR set to: 0
  2719                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 70:     timestr[7] = ((_Time[0] & 0x0F) + 
      +                          '0');
  2720   002C5A  5032               	movf	__Time^0,w,c
  2721   002C5C  0B0F               	andlw	15
  2722   002C5E  0F30               	addlw	48
  2723   002C60  6FA5               	movwf	(_timestr+7)& (0+255),b
  2724   002C62                     
  2725                           ; BSR set to: 0
  2726                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 71:     timestr[8] = '\r';
  2727   002C62  0E0D               	movlw	13
  2728   002C64  6FA6               	movwf	(_timestr+8)& (0+255),b
  2729   002C66                     
  2730                           ; BSR set to: 0
  2731                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 72:     EUSART_SendString((uint8_t*)"Time:
      +                           ");
  2732   002C66  0E95               	movlw	low STR_2
  2733   002C68  6FDC               	movwf	EUSART_SendString@str& (0+255),b
  2734   002C6A  51DC               	movf	EUSART_SendString@str& (0+255),w,b
  2735   002C6C  A4D8               	btfss	status,2,c
  2736   002C6E  0E10               	movlw	high __smallconst
  2737   002C70  6FDD               	movwf	(EUSART_SendString@str+1)& (0+255),b
  2738   002C72  EC74  F016         	call	_EUSART_SendString	;wreg free
  2739   002C76                     
  2740                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 73:     EUSART_SendString(timestr);
  2741   002C76  0E9E               	movlw	low _timestr
  2742   002C78  0100               	movlb	0	; () banked
  2743   002C7A  6FDC               	movwf	EUSART_SendString@str& (0+255),b
  2744   002C7C  6BDD               	clrf	(EUSART_SendString@str+1)& (0+255),b
  2745   002C7E  EC74  F016         	call	_EUSART_SendString	;wreg free
  2746   002C82                     
  2747                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 74:     return timestr;
  2748   002C82  0E9E               	movlw	_timestr& (0+255)
  2749   002C84  0012               	return		;funcret
  2750   002C86                     __end_of_PrintTimeUART:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _TimeArray *****************
  2754 ;; Defined at:
  2755 ;;		line 28 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      PTR unsigned char 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 15
  2776 ;; This function calls:
  2777 ;;		_GetDataAndTime
  2778 ;; This function is called by:
  2779 ;;		_PrintTimeUART
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text19
  2784   003098                     __ptext19:
  2785                           	callstack 0
  2786   003098                     _TimeArray:
  2787                           	callstack 14
  2788   003098                     
  2789                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 29:     if (dt.init_read != 1){
  2790   003098  B027               	btfsc	(_dt+6)^0,0,c
  2791   00309A  EF51  F018         	goto	u3961
  2792   00309E  EF53  F018         	goto	u3960
  2793   0030A2                     u3961:
  2794   0030A2  EF5C  F018         	goto	l6493
  2795   0030A6                     u3960:
  2796   0030A6                     
  2797                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 30:         dt = GetDataAndTime();
  2798   0030A6  ECDA  F014         	call	_GetDataAndTime	;wreg free
  2799   0030AA  EE20  F021         	lfsr	2,_dt
  2800   0030AE  0E06               	movlw	6
  2801   0030B0                     u3971:
  2802   0030B0  CFEB FFDB          	movff	plusw0,plusw2
  2803   0030B4  06E8               	decf	wreg,f,c
  2804   0030B6  E2FC               	bc	u3971
  2805   0030B8                     l6493:
  2806                           
  2807                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 32:     _Time[0] = dt.hour;
  2808   0030B8  C023  F032         	movff	_dt+2,__Time
  2809   0030BC                     
  2810                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 33:     _Time[1] = dt.minute;
  2811   0030BC  C022  F033         	movff	_dt+1,__Time+1
  2812   0030C0                     
  2813                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 34:     _Time[2] = dt.second;
  2814   0030C0  C021  F034         	movff	_dt,__Time+2
  2815   0030C4  0012               	return		;funcret
  2816   0030C6                     __end_of_TimeArray:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _PrintDateUART *****************
  2820 ;; Defined at:
  2821 ;;		line 45 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      PTR unsigned char 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;Total ram usage:        2 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 16
  2842 ;; This function calls:
  2843 ;;		_DateArray
  2844 ;;		_EUSART_SendString
  2845 ;; This function is called by:
  2846 ;;		_main
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text20
  2851   002C86                     __ptext20:
  2852                           	callstack 0
  2853   002C86                     _PrintDateUART:
  2854                           	callstack 14
  2855   002C86                     
  2856                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 46:     DateArray();
  2857   002C86  EC63  F018         	call	_DateArray	;wreg free
  2858   002C8A                     
  2859                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 47:     datestr[0] = ((_Date[2] >> 4) + '0
      +                          ');
  2860   002C8A  3837               	swapf	(__Date+2)^0,w,c
  2861   002C8C  0B0F               	andlw	15
  2862   002C8E  0F30               	addlw	48
  2863   002C90  0100               	movlb	0	; () banked
  2864   002C92  6F94               	movwf	_datestr& (0+255),b
  2865   002C94                     
  2866                           ; BSR set to: 0
  2867                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 48:     datestr[1] = ((_Date[2] & 0x0F) + 
      +                          '0');
  2868   002C94  5037               	movf	(__Date+2)^0,w,c
  2869   002C96  0B0F               	andlw	15
  2870   002C98  0F30               	addlw	48
  2871   002C9A  6F95               	movwf	(_datestr+1)& (0+255),b
  2872   002C9C                     
  2873                           ; BSR set to: 0
  2874                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 49:     datestr[2] = '/';
  2875   002C9C  0E2F               	movlw	47
  2876   002C9E  6F96               	movwf	(_datestr+2)& (0+255),b
  2877   002CA0                     
  2878                           ; BSR set to: 0
  2879                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 50:     datestr[3] = ((_Date[1] >> 4) + '0
      +                          ');
  2880   002CA0  3836               	swapf	(__Date+1)^0,w,c
  2881   002CA2  0B0F               	andlw	15
  2882   002CA4  0F30               	addlw	48
  2883   002CA6  6F97               	movwf	(_datestr+3)& (0+255),b
  2884   002CA8                     
  2885                           ; BSR set to: 0
  2886                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 51:     datestr[4] = ((_Date[1] & 0x0F) + 
      +                          '0');
  2887   002CA8  5036               	movf	(__Date+1)^0,w,c
  2888   002CAA  0B0F               	andlw	15
  2889   002CAC  0F30               	addlw	48
  2890   002CAE  6F98               	movwf	(_datestr+4)& (0+255),b
  2891   002CB0                     
  2892                           ; BSR set to: 0
  2893                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 52:     datestr[5] = '/';
  2894   002CB0  0E2F               	movlw	47
  2895   002CB2  6F99               	movwf	(_datestr+5)& (0+255),b
  2896   002CB4                     
  2897                           ; BSR set to: 0
  2898                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 53:     datestr[6] = ((_Date[0] >> 4) + '0
      +                          ');
  2899   002CB4  3835               	swapf	__Date^0,w,c
  2900   002CB6  0B0F               	andlw	15
  2901   002CB8  0F30               	addlw	48
  2902   002CBA  6F9A               	movwf	(_datestr+6)& (0+255),b
  2903   002CBC                     
  2904                           ; BSR set to: 0
  2905                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 54:     datestr[7] = ((_Date[0] & 0x0F) + 
      +                          '0');
  2906   002CBC  5035               	movf	__Date^0,w,c
  2907   002CBE  0B0F               	andlw	15
  2908   002CC0  0F30               	addlw	48
  2909   002CC2  6F9B               	movwf	(_datestr+7)& (0+255),b
  2910   002CC4                     
  2911                           ; BSR set to: 0
  2912                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 55:     datestr[8] = '\r';
  2913   002CC4  0E0D               	movlw	13
  2914   002CC6  6F9C               	movwf	(_datestr+8)& (0+255),b
  2915   002CC8                     
  2916                           ; BSR set to: 0
  2917                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 56:     EUSART_SendString((uint8_t*)"DATE:
      +                           ");
  2918   002CC8  0E8E               	movlw	low STR_1
  2919   002CCA  6FDC               	movwf	EUSART_SendString@str& (0+255),b
  2920   002CCC  51DC               	movf	EUSART_SendString@str& (0+255),w,b
  2921   002CCE  A4D8               	btfss	status,2,c
  2922   002CD0  0E10               	movlw	high __smallconst
  2923   002CD2  6FDD               	movwf	(EUSART_SendString@str+1)& (0+255),b
  2924   002CD4  EC74  F016         	call	_EUSART_SendString	;wreg free
  2925   002CD8                     
  2926                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 57:     EUSART_SendString(datestr);
  2927   002CD8  0E94               	movlw	low _datestr
  2928   002CDA  0100               	movlb	0	; () banked
  2929   002CDC  6FDC               	movwf	EUSART_SendString@str& (0+255),b
  2930   002CDE  6BDD               	clrf	(EUSART_SendString@str+1)& (0+255),b
  2931   002CE0  EC74  F016         	call	_EUSART_SendString	;wreg free
  2932   002CE4                     
  2933                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 58:     return datestr;
  2934   002CE4  0E94               	movlw	_datestr& (0+255)
  2935   002CE6  0012               	return		;funcret
  2936   002CE8                     __end_of_PrintDateUART:
  2937                           	callstack 0
  2938                           
  2939 ;; *************** function _EUSART_SendString *****************
  2940 ;; Defined at:
  2941 ;;		line 38 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  str             2    4[BANK0 ] PTR unsigned char 
  2944 ;;		 -> STR_2(7), timestr(10), STR_1(7), datestr(10), 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  len             2    6[BANK0 ] unsigned short 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2956 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;Total ram usage:        4 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 11
  2963 ;; This function calls:
  2964 ;;		_EUSART_Write
  2965 ;;		_strlen
  2966 ;; This function is called by:
  2967 ;;		_PrintDateUART
  2968 ;;		_PrintTimeUART
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text21
  2973   002CE8                     __ptext21:
  2974                           	callstack 0
  2975   002CE8                     _EUSART_SendString:
  2976                           	callstack 18
  2977   002CE8                     
  2978                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 39:     uint16_t len = strlen((char *)str)
      +                          ;
  2979   002CE8  C0DC  F0D8         	movff	EUSART_SendString@str,strlen@s
  2980   002CEC  C0DD  F0D9         	movff	EUSART_SendString@str+1,strlen@s+1
  2981   002CF0  EC00  F017         	call	_strlen	;wreg free
  2982   002CF4  C0D8  F0DE         	movff	?_strlen,EUSART_SendString@len
  2983   002CF8  C0D9  F0DF         	movff	?_strlen+1,EUSART_SendString@len+1
  2984                           
  2985                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 40:     while(len--){
  2986   002CFC  EF96  F016         	goto	l6507
  2987   002D00                     l6503:
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 41:         EUSART_Write(*str++);
  2991   002D00  C0DC  FFF6         	movff	EUSART_SendString@str,tblptrl
  2992   002D04  C0DD  FFF7         	movff	EUSART_SendString@str+1,tblptrh
  2993   002D08  0E00               	movlw	low (__smallconst shr (0+16))
  2994   002D0A  6EF8               	movwf	tblptru,c
  2995   002D0C  0E0F               	movlw	(high __ramtop+-1)
  2996   002D0E  64F7               	cpfsgt	tblptrh,c
  2997   002D10  D003               	bra	u3987
  2998   002D12  0008               	tblrd		*
  2999   002D14  50F5               	movf	tablat,w,c
  3000   002D16  D005               	bra	u3980
  3001   002D18                     u3987:
  3002   002D18  CFF6 FFE9          	movff	tblptrl,fsr0l
  3003   002D1C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3004   002D20  50EF               	movf	indf0,w,c
  3005   002D22                     u3980:
  3006   002D22  ECFC  F019         	call	_EUSART_Write
  3007   002D26  0100               	movlb	0	; () banked
  3008   002D28  4BDC               	infsnz	EUSART_SendString@str& (0+255),f,b
  3009   002D2A  2BDD               	incf	(EUSART_SendString@str+1)& (0+255),f,b
  3010   002D2C                     l6507:
  3011                           
  3012                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 40:     while(len--){
  3013   002D2C  0100               	movlb	0	; () banked
  3014   002D2E  07DE               	decf	EUSART_SendString@len& (0+255),f,b
  3015   002D30  A0D8               	btfss	status,0,c
  3016   002D32  07DF               	decf	(EUSART_SendString@len+1)& (0+255),f,b
  3017   002D34  29DE               	incf	EUSART_SendString@len& (0+255),w,b
  3018   002D36  E106               	bnz	u3991
  3019   002D38  29DF               	incf	(EUSART_SendString@len+1)& (0+255),w,b
  3020   002D3A  A4D8               	btfss	status,2,c
  3021   002D3C  EFA2  F016         	goto	u3991
  3022   002D40  EFA4  F016         	goto	u3990
  3023   002D44                     u3991:
  3024   002D44  EF80  F016         	goto	l6503
  3025   002D48                     u3990:
  3026   002D48                     
  3027                           ; BSR set to: 0
  3028   002D48  0012               	return		;funcret
  3029   002D4A                     __end_of_EUSART_SendString:
  3030                           	callstack 0
  3031                           
  3032 ;; *************** function _EUSART_Write *****************
  3033 ;; Defined at:
  3034 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  txData          1    wreg     unsigned char 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  txData          1    0[BANK0 ] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;Total ram usage:        1 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; Hardware stack levels required when called: 10
  3055 ;; This function calls:
  3056 ;;		Nothing
  3057 ;; This function is called by:
  3058 ;;		_EUSART_SendString
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text22
  3063   0033F8                     __ptext22:
  3064                           	callstack 0
  3065   0033F8                     _EUSART_Write:
  3066                           	callstack 18
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;incstack = 0
  3070                           ;EUSART_Write@txData stored from wreg
  3071   0033F8  0100               	movlb	0	; () banked
  3072   0033FA  6FD8               	movwf	EUSART_Write@txData& (0+255),b
  3073   0033FC                     l360:
  3074                           
  3075                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
  3076   0033FC  A89E               	btfss	158,4,c	;volatile
  3077   0033FE  EF03  F01A         	goto	u3791
  3078   003402  EF05  F01A         	goto	u3790
  3079   003406                     u3791:
  3080   003406  EFFE  F019         	goto	l360
  3081   00340A                     u3790:
  3082   00340A                     
  3083                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3084   00340A  C0D8  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  3085   00340E  0012               	return		;funcret
  3086   003410                     __end_of_EUSART_Write:
  3087                           	callstack 0
  3088                           
  3089 ;; *************** function _DateArray *****************
  3090 ;; Defined at:
  3091 ;;		line 18 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      PTR unsigned char 
  3098 ;; Registers used:
  3099 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;Total ram usage:        0 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 15
  3112 ;; This function calls:
  3113 ;;		_GetDataAndTime
  3114 ;; This function is called by:
  3115 ;;		_PrintDateUART
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text23
  3120   0030C6                     __ptext23:
  3121                           	callstack 0
  3122   0030C6                     _DateArray:
  3123                           	callstack 14
  3124   0030C6                     
  3125                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 19:     if (dt.init_read != 1){
  3126   0030C6  B027               	btfsc	(_dt+6)^0,0,c
  3127   0030C8  EF68  F018         	goto	u3941
  3128   0030CC  EF6A  F018         	goto	u3940
  3129   0030D0                     u3941:
  3130   0030D0  EF73  F018         	goto	l6481
  3131   0030D4                     u3940:
  3132   0030D4                     
  3133                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 20:         dt = GetDataAndTime();
  3134   0030D4  ECDA  F014         	call	_GetDataAndTime	;wreg free
  3135   0030D8  EE20  F021         	lfsr	2,_dt
  3136   0030DC  0E06               	movlw	6
  3137   0030DE                     u3951:
  3138   0030DE  CFEB FFDB          	movff	plusw0,plusw2
  3139   0030E2  06E8               	decf	wreg,f,c
  3140   0030E4  E2FC               	bc	u3951
  3141   0030E6                     l6481:
  3142                           
  3143                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 22:     _Date[0] = dt.year;
  3144   0030E6  C026  F035         	movff	_dt+5,__Date
  3145   0030EA                     
  3146                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 23:     _Date[1] = dt.month;
  3147   0030EA  C025  F036         	movff	_dt+4,__Date+1
  3148   0030EE                     
  3149                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 24:     _Date[2] = dt.day;
  3150   0030EE  C024  F037         	movff	_dt+3,__Date+2
  3151   0030F2  0012               	return		;funcret
  3152   0030F4                     __end_of_DateArray:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _GetDataAndTime *****************
  3156 ;; Defined at:
  3157 ;;		line 7 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  7   12[BANK0 ] struct .
  3164 ;; Registers used:
  3165 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3171 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;Total ram usage:        7 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 14
  3178 ;; This function calls:
  3179 ;;		_I2C_Read1ByteRegister
  3180 ;; This function is called by:
  3181 ;;		_DateArray
  3182 ;;		_TimeArray
  3183 ;;		_main
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text24
  3188   0029B4                     __ptext24:
  3189                           	callstack 0
  3190   0029B4                     _GetDataAndTime:
  3191                           	callstack 14
  3192   0029B4                     
  3193                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 8:     dt.second = I2C_Read1ByteRegister(0
      +                          x68, 0x00);
  3194   0029B4  0E00               	movlw	0
  3195   0029B6  0100               	movlb	0	; () banked
  3196   0029B8  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3197   0029BA  0E68               	movlw	104
  3198   0029BC  ECB3  F013         	call	_I2C_Read1ByteRegister
  3199   0029C0  6E21               	movwf	_dt^0,c
  3200                           
  3201                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 9:     dt.minute = I2C_Read1ByteRegister(0
      +                          x68, 0x01);
  3202   0029C2  0E01               	movlw	1
  3203   0029C4  0100               	movlb	0	; () banked
  3204   0029C6  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3205   0029C8  0E68               	movlw	104
  3206   0029CA  ECB3  F013         	call	_I2C_Read1ByteRegister
  3207   0029CE  6E22               	movwf	(_dt+1)^0,c
  3208                           
  3209                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 10:     dt.hour = I2C_Read1ByteRegister(0x
      +                          68, 0x02);
  3210   0029D0  0E02               	movlw	2
  3211   0029D2  0100               	movlb	0	; () banked
  3212   0029D4  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3213   0029D6  0E68               	movlw	104
  3214   0029D8  ECB3  F013         	call	_I2C_Read1ByteRegister
  3215   0029DC  6E23               	movwf	(_dt+2)^0,c
  3216                           
  3217                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 11:     dt.day = I2C_Read1ByteRegister(0x6
      +                          8, 0x04);
  3218   0029DE  0E04               	movlw	4
  3219   0029E0  0100               	movlb	0	; () banked
  3220   0029E2  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3221   0029E4  0E68               	movlw	104
  3222   0029E6  ECB3  F013         	call	_I2C_Read1ByteRegister
  3223   0029EA  6E24               	movwf	(_dt+3)^0,c
  3224                           
  3225                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 12:     dt.month = I2C_Read1ByteRegister(0
      +                          x68, 0x05);
  3226   0029EC  0E05               	movlw	5
  3227   0029EE  0100               	movlb	0	; () banked
  3228   0029F0  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3229   0029F2  0E68               	movlw	104
  3230   0029F4  ECB3  F013         	call	_I2C_Read1ByteRegister
  3231   0029F8  6E25               	movwf	(_dt+4)^0,c
  3232                           
  3233                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 13:     dt.year = I2C_Read1ByteRegister(0x
      +                          68, 0x06);
  3234   0029FA  0E06               	movlw	6
  3235   0029FC  0100               	movlb	0	; () banked
  3236   0029FE  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3237   002A00  0E68               	movlw	104
  3238   002A02  ECB3  F013         	call	_I2C_Read1ByteRegister
  3239   002A06  6E26               	movwf	(_dt+5)^0,c
  3240   002A08                     
  3241                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 14:     dt.init_read = 1;
  3242   002A08  8027               	bsf	(_dt+6)^0,0,c
  3243   002A0A                     
  3244                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 16:     return dt;
  3245   002A0A  EE20  F021         	lfsr	2,_dt
  3246   002A0E  EE00  F0E4         	lfsr	0,?_GetDataAndTime
  3247   002A12  0E06               	movlw	6
  3248   002A14                     u3761:
  3249   002A14  CFDB FFEB          	movff	plusw2,plusw0
  3250   002A18  06E8               	decf	wreg,f,c
  3251   002A1A  E2FC               	bc	u3761
  3252   002A1C  0012               	return		;funcret
  3253   002A1E                     __end_of_GetDataAndTime:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function _LCD4B_SET *****************
  3257 ;; Defined at:
  3258 ;;		line 86 in file "AECUL/LCD_LM016L/LCD.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  lcd             1   24[BANK1 ] PTR const struct .
  3261 ;;		 -> lcd(12), 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  pinptr          1   29[BANK1 ] struct .
  3264 ;;  i               2   27[BANK1 ] int 
  3265 ;;  pinptr          1   30[BANK1 ] struct .
  3266 ;;  ret             1    0        unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      unsigned char 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3276 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;Total ram usage:        7 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 18
  3283 ;; This function calls:
  3284 ;;		_LCD4B_SENDCMD
  3285 ;;		_PINSTART
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text25
  3292   001766                     __ptext25:
  3293                           	callstack 0
  3294   001766                     _LCD4B_SET:
  3295                           	callstack 12
  3296   001766                     
  3297                           ;AECUL/LCD_LM016L/LCD.c: 88:     if (lcd == ((void*)0)){
  3298   001766  0101               	movlb	1	; () banked
  3299   001768  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3300   00176A  A4D8               	btfss	status,2,c
  3301   00176C  EFBA  F00B         	goto	u5841
  3302   001770  EFBC  F00B         	goto	u5840
  3303   001774                     u5841:
  3304   001774  EFBE  F00B         	goto	l1107
  3305   001778                     u5840:
  3306   001778                     
  3307                           ; BSR set to: 1
  3308                           ;AECUL/LCD_LM016L/LCD.c: 90:     }
  3309   001778  EF9F  F00C         	goto	l1115
  3310   00177C                     l1107:
  3311                           
  3312                           ; BSR set to: 1
  3313                           ;AECUL/LCD_LM016L/LCD.c: 92:         PinConfig_t pinptr = {.pin = lcd->REpin, .port=lcd-
      +                          >REport,
  3314   00177C  C091  F11E         	movff	LCD4B_SET@F3672,LCD4B_SET@pinptr
  3315   001780                     
  3316                           ; BSR set to: 1
  3317   001780  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3318   001782  6ED9               	movwf	fsr2l,c
  3319   001784  6ADA               	clrf	fsr2h,c
  3320   001786  0E01               	movlw	1
  3321   001788  26D9               	addwf	fsr2l,f,c
  3322   00178A  50DF               	movf	indf2,w,c
  3323   00178C  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3324   00178E  511E               	movf	LCD4B_SET@pinptr& (0+255),w,b
  3325   001790  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3326   001792  0BF8               	andlw	-8
  3327   001794  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3328   001796  6F1E               	movwf	LCD4B_SET@pinptr& (0+255),b
  3329   001798  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3330   00179A  6ED9               	movwf	fsr2l,c
  3331   00179C  6ADA               	clrf	fsr2h,c
  3332   00179E  50DF               	movf	indf2,w,c
  3333   0017A0  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3334   0017A2  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3335   0017A4  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3336   0017A6  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3337   0017A8  511E               	movf	LCD4B_SET@pinptr& (0+255),w,b
  3338   0017AA  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3339   0017AC  0BC7               	andlw	-57
  3340   0017AE  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3341   0017B0  6F1E               	movwf	LCD4B_SET@pinptr& (0+255),b
  3342   0017B2                     
  3343                           ; BSR set to: 1
  3344   0017B2  9D1E               	bcf	LCD4B_SET@pinptr& (0+255),6,b
  3345   0017B4                     
  3346                           ; BSR set to: 1
  3347   0017B4  9F1E               	bcf	LCD4B_SET@pinptr& (0+255),7,b
  3348   0017B6                     
  3349                           ; BSR set to: 1
  3350   0017B6  0E1E               	movlw	low LCD4B_SET@pinptr
  3351   0017B8  6F0A               	movwf	PINSTART@pinconfig& (0+255),b
  3352   0017BA  0E01               	movlw	high LCD4B_SET@pinptr
  3353   0017BC  6F0B               	movwf	(PINSTART@pinconfig+1)& (0+255),b
  3354   0017BE  EC44  F00E         	call	_PINSTART	;wreg free
  3355   0017C2                     
  3356                           ;AECUL/LCD_LM016L/LCD.c: 95:         pinptr.pin = lcd->ENpin;
  3357   0017C2  0101               	movlb	1	; () banked
  3358   0017C4  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3359   0017C6  6ED9               	movwf	fsr2l,c
  3360   0017C8  6ADA               	clrf	fsr2h,c
  3361   0017CA  0E02               	movlw	2
  3362   0017CC  26D9               	addwf	fsr2l,f,c
  3363   0017CE  50DF               	movf	indf2,w,c
  3364   0017D0  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3365   0017D2  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3366   0017D4  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3367   0017D6  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3368   0017D8  511E               	movf	LCD4B_SET@pinptr& (0+255),w,b
  3369   0017DA  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3370   0017DC  0BC7               	andlw	-57
  3371   0017DE  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3372   0017E0  6F1E               	movwf	LCD4B_SET@pinptr& (0+255),b
  3373   0017E2                     
  3374                           ; BSR set to: 1
  3375                           ;AECUL/LCD_LM016L/LCD.c: 96:         pinptr.port = lcd->ENport;
  3376   0017E2  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3377   0017E4  6ED9               	movwf	fsr2l,c
  3378   0017E6  6ADA               	clrf	fsr2h,c
  3379   0017E8  0E03               	movlw	3
  3380   0017EA  26D9               	addwf	fsr2l,f,c
  3381   0017EC  50DF               	movf	indf2,w,c
  3382   0017EE  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3383   0017F0  511E               	movf	LCD4B_SET@pinptr& (0+255),w,b
  3384   0017F2  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3385   0017F4  0BF8               	andlw	-8
  3386   0017F6  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3387   0017F8  6F1E               	movwf	LCD4B_SET@pinptr& (0+255),b
  3388   0017FA                     
  3389                           ; BSR set to: 1
  3390   0017FA  0E1E               	movlw	low LCD4B_SET@pinptr
  3391   0017FC  6F0A               	movwf	PINSTART@pinconfig& (0+255),b
  3392   0017FE  0E01               	movlw	high LCD4B_SET@pinptr
  3393   001800  6F0B               	movwf	(PINSTART@pinconfig+1)& (0+255),b
  3394   001802  EC44  F00E         	call	_PINSTART	;wreg free
  3395   001806                     
  3396                           ;AECUL/LCD_LM016L/LCD.c: 98:         for (int i = 0; i < 4; i++){
  3397   001806  0E00               	movlw	0
  3398   001808  0101               	movlb	1	; () banked
  3399   00180A  6F1C               	movwf	(LCD4B_SET@i+1)& (0+255),b
  3400   00180C  0E00               	movlw	0
  3401   00180E  6F1B               	movwf	LCD4B_SET@i& (0+255),b
  3402   001810                     l1111:
  3403                           
  3404                           ; BSR set to: 1
  3405                           ;AECUL/LCD_LM016L/LCD.c: 99:             PinConfig_t pinptr = {.pin = lcd->datapins[i], 
      +                          .port=lcd->dataport[i],
  3406   001810  C090  F11D         	movff	LCD4B_SET@F3675,LCD4B_SET@pinptr_2461
  3407   001814                     
  3408                           ; BSR set to: 1
  3409   001814  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3410   001816  251B               	addwf	LCD4B_SET@i& (0+255),w,b
  3411   001818  6ED9               	movwf	fsr2l,c
  3412   00181A  6ADA               	clrf	fsr2h,c
  3413   00181C  0E08               	movlw	8
  3414   00181E  26D9               	addwf	fsr2l,f,c
  3415   001820  50DF               	movf	indf2,w,c
  3416   001822  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3417   001824  511D               	movf	LCD4B_SET@pinptr_2461& (0+255),w,b
  3418   001826  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3419   001828  0BF8               	andlw	-8
  3420   00182A  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3421   00182C  6F1D               	movwf	LCD4B_SET@pinptr_2461& (0+255),b
  3422   00182E  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3423   001830  251B               	addwf	LCD4B_SET@i& (0+255),w,b
  3424   001832  6ED9               	movwf	fsr2l,c
  3425   001834  6ADA               	clrf	fsr2h,c
  3426   001836  0E04               	movlw	4
  3427   001838  26D9               	addwf	fsr2l,f,c
  3428   00183A  50DF               	movf	indf2,w,c
  3429   00183C  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3430   00183E  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3431   001840  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3432   001842  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3433   001844  511D               	movf	LCD4B_SET@pinptr_2461& (0+255),w,b
  3434   001846  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3435   001848  0BC7               	andlw	-57
  3436   00184A  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3437   00184C  6F1D               	movwf	LCD4B_SET@pinptr_2461& (0+255),b
  3438   00184E                     
  3439                           ; BSR set to: 1
  3440   00184E  9D1D               	bcf	LCD4B_SET@pinptr_2461& (0+255),6,b
  3441   001850                     
  3442                           ; BSR set to: 1
  3443   001850  9F1D               	bcf	LCD4B_SET@pinptr_2461& (0+255),7,b
  3444   001852                     
  3445                           ; BSR set to: 1
  3446   001852  0E1D               	movlw	low LCD4B_SET@pinptr_2461
  3447   001854  6F0A               	movwf	PINSTART@pinconfig& (0+255),b
  3448   001856  0E01               	movlw	high LCD4B_SET@pinptr_2461
  3449   001858  6F0B               	movwf	(PINSTART@pinconfig+1)& (0+255),b
  3450   00185A  EC44  F00E         	call	_PINSTART	;wreg free
  3451   00185E                     
  3452                           ;AECUL/LCD_LM016L/LCD.c: 102:         }
  3453   00185E  0101               	movlb	1	; () banked
  3454   001860  4B1B               	infsnz	LCD4B_SET@i& (0+255),f,b
  3455   001862  2B1C               	incf	(LCD4B_SET@i+1)& (0+255),f,b
  3456   001864                     
  3457                           ; BSR set to: 1
  3458   001864  BF1C               	btfsc	(LCD4B_SET@i+1)& (0+255),7,b
  3459   001866  EF3E  F00C         	goto	u5851
  3460   00186A  511C               	movf	(LCD4B_SET@i+1)& (0+255),w,b
  3461   00186C  E109               	bnz	u5850
  3462   00186E  0E04               	movlw	4
  3463   001870  5D1B               	subwf	LCD4B_SET@i& (0+255),w,b
  3464   001872  A0D8               	btfss	status,0,c
  3465   001874  EF3E  F00C         	goto	u5851
  3466   001878  EF40  F00C         	goto	u5850
  3467   00187C                     u5851:
  3468   00187C  EF08  F00C         	goto	l1111
  3469   001880                     u5850:
  3470   001880                     
  3471                           ; BSR set to: 1
  3472                           ;AECUL/LCD_LM016L/LCD.c: 104:         _delay((unsigned long)((20)*(16000000L/4000.0)));
  3473   001880  0E68               	movlw	104
  3474   001882  0101               	movlb	1	; () banked
  3475   001884  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3476   001886  0EE4               	movlw	228
  3477   001888                     u6037:
  3478   001888  2EE8               	decfsz	wreg,f,c
  3479   00188A  D7FE               	bra	u6037
  3480   00188C  2F19               	decfsz	??_LCD4B_SET& (0+255),f,b
  3481   00188E  D7FC               	bra	u6037
  3482   001890  0000               	nop	
  3483   001892  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3484   001896  0E38               	movlw	56
  3485   001898  0101               	movlb	1	; () banked
  3486   00189A  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3487   00189C  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3488   0018A0                     
  3489                           ;AECUL/LCD_LM016L/LCD.c: 106:         _delay((unsigned long)((5)*(16000000L/4000.0)));
  3490   0018A0  0E1A               	movlw	26
  3491   0018A2  0101               	movlb	1	; () banked
  3492   0018A4  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3493   0018A6  0EF8               	movlw	248
  3494   0018A8                     u6047:
  3495   0018A8  2EE8               	decfsz	wreg,f,c
  3496   0018AA  D7FE               	bra	u6047
  3497   0018AC  2F19               	decfsz	??_LCD4B_SET& (0+255),f,b
  3498   0018AE  D7FC               	bra	u6047
  3499   0018B0  0000               	nop	
  3500   0018B2  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3501   0018B6  0E38               	movlw	56
  3502   0018B8  0101               	movlb	1	; () banked
  3503   0018BA  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3504   0018BC  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3505   0018C0                     
  3506                           ;AECUL/LCD_LM016L/LCD.c: 108:         _delay((unsigned long)((150)*(16000000L/4000.0)));
  3507   0018C0  0E04               	movlw	4
  3508   0018C2  0101               	movlb	1	; () banked
  3509   0018C4  6F1A               	movwf	(??_LCD4B_SET+1)& (0+255),b
  3510   0018C6  0E0C               	movlw	12
  3511   0018C8  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3512   0018CA  0E33               	movlw	51
  3513   0018CC                     u6057:
  3514   0018CC  2EE8               	decfsz	wreg,f,c
  3515   0018CE  D7FE               	bra	u6057
  3516   0018D0  2F19               	decfsz	??_LCD4B_SET& (0+255),f,b
  3517   0018D2  D7FC               	bra	u6057
  3518   0018D4  2F1A               	decfsz	(??_LCD4B_SET+1)& (0+255),f,b
  3519   0018D6  D7FA               	bra	u6057
  3520   0018D8  F000 F000          	nop2	
  3521   0018DC  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3522   0018E0  0E38               	movlw	56
  3523   0018E2  0101               	movlb	1	; () banked
  3524   0018E4  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3525   0018E6  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3526   0018EA  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3527   0018EE  0E01               	movlw	1
  3528   0018F0  0101               	movlb	1	; () banked
  3529   0018F2  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3530   0018F4  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3531   0018F8  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3532   0018FC  0E02               	movlw	2
  3533   0018FE  0101               	movlb	1	; () banked
  3534   001900  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3535   001902  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3536   001906  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3537   00190A  0E06               	movlw	6
  3538   00190C  0101               	movlb	1	; () banked
  3539   00190E  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3540   001910  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3541   001914  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3542   001918  0E0C               	movlw	12
  3543   00191A  0101               	movlb	1	; () banked
  3544   00191C  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3545   00191E  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3546   001922  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3547   001926  0E28               	movlw	40
  3548   001928  0101               	movlb	1	; () banked
  3549   00192A  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3550   00192C  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3551   001930  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3552   001934  0E80               	movlw	128
  3553   001936  0101               	movlb	1	; () banked
  3554   001938  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3555   00193A  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3556   00193E                     l1115:
  3557   00193E  0012               	return		;funcret
  3558   001940                     __end_of_LCD4B_SET:
  3559                           	callstack 0
  3560                           
  3561 ;; *************** function _PINSTART *****************
  3562 ;; Defined at:
  3563 ;;		line 40 in file "AECUL/LCD_LM016L/LCD.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  pinconfig       2   10[BANK1 ] PTR const struct .
  3566 ;;		 -> LCD4B_SET@pinptr_2461(1), LCD4B_SET@pinptr(1), 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  ret             1   17[BANK1 ] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      unsigned char 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3578 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;Total ram usage:        8 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 16
  3585 ;; This function calls:
  3586 ;;		_PINWRITE
  3587 ;;		_printf
  3588 ;; This function is called by:
  3589 ;;		_LCD4B_SET
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text26
  3594   001C88                     __ptext26:
  3595                           	callstack 0
  3596   001C88                     _PINSTART:
  3597                           	callstack 13
  3598   001C88                     
  3599                           ;AECUL/LCD_LM016L/LCD.c: 42:     if((pinconfig->pin > (8-1)) || (pinconfig == ((void*)0)
      +                          )){
  3600   001C88  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3601   001C8C  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3602   001C90  30DF               	rrcf	223,w,c
  3603   001C92  32E8               	rrcf	wreg,f,c
  3604   001C94  32E8               	rrcf	wreg,f,c
  3605   001C96  0B07               	andlw	7
  3606   001C98  0101               	movlb	1	; () banked
  3607   001C9A  6F0C               	movwf	??_PINSTART& (0+255),b
  3608   001C9C  0E08               	movlw	8
  3609   001C9E  610C               	cpfslt	??_PINSTART& (0+255),b
  3610   001CA0  EF54  F00E         	goto	u5781
  3611   001CA4  EF56  F00E         	goto	u5780
  3612   001CA8                     u5781:
  3613   001CA8  EF5F  F00E         	goto	l8821
  3614   001CAC                     u5780:
  3615   001CAC                     
  3616                           ; BSR set to: 1
  3617   001CAC  510A               	movf	PINSTART@pinconfig& (0+255),w,b
  3618   001CAE  110B               	iorwf	(PINSTART@pinconfig+1)& (0+255),w,b
  3619   001CB0  A4D8               	btfss	status,2,c
  3620   001CB2  EF5D  F00E         	goto	u5791
  3621   001CB6  EF5F  F00E         	goto	u5790
  3622   001CBA                     u5791:
  3623   001CBA  EFC3  F00E         	goto	l8833
  3624   001CBE                     u5790:
  3625   001CBE                     l8821:
  3626                           
  3627                           ; BSR set to: 1
  3628                           ;AECUL/LCD_LM016L/LCD.c: 43:         ret = 0x00;
  3629   001CBE  0E00               	movlw	0
  3630   001CC0  6F11               	movwf	PINSTART@ret& (0+255),b
  3631   001CC2                     
  3632                           ; BSR set to: 1
  3633                           ;AECUL/LCD_LM016L/LCD.c: 44:         printf("User Entered invalid PIN Location or NULL P
      +                          OINTER\n");
  3634   001CC2  0E21               	movlw	low STR_10
  3635   001CC4  0100               	movlb	0	; () banked
  3636   001CC6  6FFC               	movwf	printf@fmt& (0+255),b
  3637   001CC8  ECA9  F019         	call	_printf	;wreg free
  3638                           
  3639                           ;AECUL/LCD_LM016L/LCD.c: 45:     }
  3640   001CCC  EFF4  F00E         	goto	l8837
  3641   001CD0                     l8825:
  3642                           
  3643                           ; BSR set to: 1
  3644                           ;AECUL/LCD_LM016L/LCD.c: 49:                 (*TRIS_Reg[pinconfig->port] &= ~(((uint8_t)
      +                          1) << pinconfig->pin));
  3645   001CD0  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3646   001CD4  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3647   001CD8  30DF               	rrcf	223,w,c
  3648   001CDA  32E8               	rrcf	wreg,f,c
  3649   001CDC  32E8               	rrcf	wreg,f,c
  3650   001CDE  0B07               	andlw	7
  3651   001CE0  6F0C               	movwf	??_PINSTART& (0+255),b
  3652   001CE2  0E01               	movlw	1
  3653   001CE4  6F0D               	movwf	(??_PINSTART+1)& (0+255),b
  3654   001CE6  2B0C               	incf	??_PINSTART& (0+255),f,b
  3655   001CE8  EF78  F00E         	goto	u5804
  3656   001CEC                     u5805:
  3657   001CEC  90D8               	bcf	status,0,c
  3658   001CEE  370D               	rlcf	(??_PINSTART+1)& (0+255),f,b
  3659   001CF0                     u5804:
  3660   001CF0  2F0C               	decfsz	??_PINSTART& (0+255),f,b
  3661   001CF2  EF76  F00E         	goto	u5805
  3662   001CF6  0101               	movlb	1	; () banked
  3663   001CF8  510D               	movf	(??_PINSTART+1)& (0+255),w,b
  3664   001CFA  0AFF               	xorlw	255
  3665   001CFC  6F0E               	movwf	(??_PINSTART+2)& (0+255),b
  3666   001CFE  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3667   001D02  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3668   001D06  50DF               	movf	223,w,c
  3669   001D08  0B07               	andlw	7
  3670   001D0A  0D02               	mullw	2
  3671   001D0C  50F3               	movf	243,w,c
  3672   001D0E  0FC0               	addlw	low _TRIS_Reg
  3673   001D10  6ED9               	movwf	fsr2l,c
  3674   001D12  6ADA               	clrf	fsr2h,c
  3675   001D14  CFDE F10F          	movff	postinc2,??_PINSTART+3
  3676   001D18  CFDD F110          	movff	postdec2,??_PINSTART+4
  3677   001D1C  C10F  FFD9         	movff	??_PINSTART+3,fsr2l
  3678   001D20  C110  FFDA         	movff	??_PINSTART+4,fsr2h
  3679   001D24  510E               	movf	(??_PINSTART+2)& (0+255),w,b
  3680   001D26  16DF               	andwf	indf2,f,c
  3681                           
  3682                           ;AECUL/LCD_LM016L/LCD.c: 50:                 break;
  3683   001D28  EFE4  F00E         	goto	l8835
  3684   001D2C                     l8827:
  3685                           
  3686                           ; BSR set to: 1
  3687                           ;AECUL/LCD_LM016L/LCD.c: 52:                 (*TRIS_Reg[pinconfig->port] |= (((uint8_t)1
      +                          ) << pinconfig->pin));
  3688   001D2C  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3689   001D30  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3690   001D34  30DF               	rrcf	223,w,c
  3691   001D36  32E8               	rrcf	wreg,f,c
  3692   001D38  32E8               	rrcf	wreg,f,c
  3693   001D3A  0B07               	andlw	7
  3694   001D3C  6F0C               	movwf	??_PINSTART& (0+255),b
  3695   001D3E  0E01               	movlw	1
  3696   001D40  6F0D               	movwf	(??_PINSTART+1)& (0+255),b
  3697   001D42  2B0C               	incf	??_PINSTART& (0+255),f,b
  3698   001D44  EFA6  F00E         	goto	u5814
  3699   001D48                     u5815:
  3700   001D48  90D8               	bcf	status,0,c
  3701   001D4A  370D               	rlcf	(??_PINSTART+1)& (0+255),f,b
  3702   001D4C                     u5814:
  3703   001D4C  2F0C               	decfsz	??_PINSTART& (0+255),f,b
  3704   001D4E  EFA4  F00E         	goto	u5815
  3705   001D52  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3706   001D56  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3707   001D5A  50DF               	movf	223,w,c
  3708   001D5C  0B07               	andlw	7
  3709   001D5E  0D02               	mullw	2
  3710   001D60  50F3               	movf	243,w,c
  3711   001D62  0FC0               	addlw	low _TRIS_Reg
  3712   001D64  6ED9               	movwf	fsr2l,c
  3713   001D66  6ADA               	clrf	fsr2h,c
  3714   001D68  CFDE F10E          	movff	postinc2,??_PINSTART+2
  3715   001D6C  CFDD F10F          	movff	postdec2,??_PINSTART+3
  3716   001D70  C10E  FFD9         	movff	??_PINSTART+2,fsr2l
  3717   001D74  C10F  FFDA         	movff	??_PINSTART+3,fsr2h
  3718   001D78  0101               	movlb	1	; () banked
  3719   001D7A  510D               	movf	(??_PINSTART+1)& (0+255),w,b
  3720   001D7C  12DF               	iorwf	indf2,f,c
  3721                           
  3722                           ;AECUL/LCD_LM016L/LCD.c: 53:                 break;
  3723   001D7E  EFE4  F00E         	goto	l8835
  3724   001D82                     l8829:
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;AECUL/LCD_LM016L/LCD.c: 56:                 break;
  3728   001D82  EFE4  F00E         	goto	l8835
  3729   001D86                     l8833:
  3730                           
  3731                           ; BSR set to: 1
  3732   001D86  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3733   001D8A  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3734   001D8E  BCDF               	btfsc	indf2,6,c
  3735   001D90  EFCC  F00E         	goto	u5821
  3736   001D94  EFCF  F00E         	goto	u5820
  3737   001D98                     u5821:
  3738   001D98  0E01               	movlw	1
  3739   001D9A  EFD0  F00E         	goto	u5830
  3740   001D9E                     u5820:
  3741   001D9E  0E00               	movlw	0
  3742   001DA0                     u5830:
  3743   001DA0  6F0C               	movwf	??_PINSTART& (0+255),b
  3744   001DA2  6B0D               	clrf	(??_PINSTART+1)& (0+255),b
  3745                           
  3746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3747                           ; Switch size 1, requested type "simple"
  3748                           ; Number of cases is 1, Range of values is 0 to 0
  3749                           ; switch strategies available:
  3750                           ; Name         Instructions Cycles
  3751                           ; simple_byte            4     3 (average)
  3752                           ;	Chosen strategy is simple_byte
  3753   001DA4  510D               	movf	(??_PINSTART+1)& (0+255),w,b
  3754   001DA6  0A00               	xorlw	0	; case 0
  3755   001DA8  B4D8               	btfsc	status,2,c
  3756   001DAA  EFD9  F00E         	goto	l9375
  3757   001DAE  EFC1  F00E         	goto	l8829
  3758   001DB2                     l9375:
  3759                           
  3760                           ; BSR set to: 1
  3761                           ; Switch size 1, requested type "simple"
  3762                           ; Number of cases is 2, Range of values is 0 to 1
  3763                           ; switch strategies available:
  3764                           ; Name         Instructions Cycles
  3765                           ; simple_byte            7     4 (average)
  3766                           ;	Chosen strategy is simple_byte
  3767   001DB2  510C               	movf	??_PINSTART& (0+255),w,b
  3768   001DB4  0A00               	xorlw	0	; case 0
  3769   001DB6  B4D8               	btfsc	status,2,c
  3770   001DB8  EF68  F00E         	goto	l8825
  3771   001DBC  0A01               	xorlw	1	; case 1
  3772   001DBE  B4D8               	btfsc	status,2,c
  3773   001DC0  EF96  F00E         	goto	l8827
  3774   001DC4  EFC1  F00E         	goto	l8829
  3775   001DC8                     l8835:
  3776                           
  3777                           ; BSR set to: 1
  3778                           ;AECUL/LCD_LM016L/LCD.c: 58:         ret = PINWRITE(pinconfig, pinconfig->logic);
  3779   001DC8  C10A  F102         	movff	PINSTART@pinconfig,PINWRITE@pinconfig
  3780   001DCC  C10B  F103         	movff	PINSTART@pinconfig+1,PINWRITE@pinconfig+1
  3781   001DD0  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3782   001DD4  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3783   001DD8  0E00               	movlw	0
  3784   001DDA  BEDF               	btfsc	indf2,7,c
  3785   001DDC  0E01               	movlw	1
  3786   001DDE  6F04               	movwf	PINWRITE@log& (0+255),b
  3787   001DE0  ECF7  F00E         	call	_PINWRITE	;wreg free
  3788   001DE4  0101               	movlb	1	; () banked
  3789   001DE6  6F11               	movwf	PINSTART@ret& (0+255),b
  3790   001DE8                     l8837:
  3791                           
  3792                           ;AECUL/LCD_LM016L/LCD.c: 60:     return ret;
  3793   001DE8  0101               	movlb	1	; () banked
  3794   001DEA  5111               	movf	PINSTART@ret& (0+255),w,b
  3795   001DEC                     
  3796                           ; BSR set to: 1
  3797   001DEC  0012               	return		;funcret
  3798   001DEE                     __end_of_PINSTART:
  3799                           	callstack 0
  3800                           
  3801 ;; *************** function _LCD4B_SENDSTRPOS *****************
  3802 ;; Defined at:
  3803 ;;		line 206 in file "AECUL/LCD_LM016L/LCD.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  lcd             1   30[BANK1 ] PTR const struct .
  3806 ;;		 -> lcd(12), 
  3807 ;;  str             1   31[BANK1 ] PTR unsigned char 
  3808 ;;		 -> STR_6(7), STR_5(7), STR_4(7), 
  3809 ;;  row             1   32[BANK1 ] unsigned char 
  3810 ;;  column          1   33[BANK1 ] unsigned char 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  ret             1    0        unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      unsigned char 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3822 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;Total ram usage:        4 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 19
  3829 ;; This function calls:
  3830 ;;		_LCD4B_SENDCHAR
  3831 ;;		_setcursor4bit
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text27
  3838   002AF2                     __ptext27:
  3839                           	callstack 0
  3840   002AF2                     _LCD4B_SENDSTRPOS:
  3841                           	callstack 11
  3842   002AF2                     
  3843                           ;AECUL/LCD_LM016L/LCD.c: 208:     if (lcd == ((void*)0)){
  3844   002AF2  0101               	movlb	1	; () banked
  3845   002AF4  511E               	movf	LCD4B_SENDSTRPOS@lcd& (0+255),w,b
  3846   002AF6  A4D8               	btfss	status,2,c
  3847   002AF8  EF80  F015         	goto	u5861
  3848   002AFC  EF82  F015         	goto	u5860
  3849   002B00                     u5861:
  3850   002B00  EF84  F015         	goto	l8949
  3851   002B04                     u5860:
  3852   002B04                     
  3853                           ; BSR set to: 1
  3854                           ;AECUL/LCD_LM016L/LCD.c: 210:     }
  3855   002B04  EFAB  F015         	goto	l1160
  3856   002B08                     l8949:
  3857                           
  3858                           ; BSR set to: 1
  3859   002B08  C11E  F118         	movff	LCD4B_SENDSTRPOS@lcd,setcursor4bit@lcd
  3860   002B0C  C120  F119         	movff	LCD4B_SENDSTRPOS@row,setcursor4bit@row
  3861   002B10  C121  F11A         	movff	LCD4B_SENDSTRPOS@column,setcursor4bit@col
  3862   002B14  ECE4  F011         	call	_setcursor4bit	;wreg free
  3863                           
  3864                           ;AECUL/LCD_LM016L/LCD.c: 213:         while(*str){
  3865   002B18  EF9C  F015         	goto	l8955
  3866   002B1C                     l8951:
  3867   002B1C  C11E  F10E         	movff	LCD4B_SENDSTRPOS@lcd,LCD4B_SENDCHAR@lcd
  3868   002B20  C11F  FFF6         	movff	LCD4B_SENDSTRPOS@str,tblptrl
  3869   002B24                     	if	1	;There is more than 1 active tblptr byte
  3870   002B24  0E10               	movlw	high __smallconst
  3871   002B26  6EF7               	movwf	tblptrh,c
  3872   002B28                     	endif
  3873   002B28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3874   002B28  6AF8               	clrf	tblptru,c
  3875   002B2A                     	endif
  3876   002B2A                     	if	0	;tblptru may be non-zero
  3877   002B2A                     	endif
  3878   002B2A  0008               	tblrd		*
  3879   002B2C  CFF5 F10F          	movff	tablat,LCD4B_SENDCHAR@data
  3880   002B30  EC72  F00D         	call	_LCD4B_SENDCHAR	;wreg free
  3881   002B34  0101               	movlb	1	; () banked
  3882   002B36  2B1F               	incf	LCD4B_SENDSTRPOS@str& (0+255),f,b
  3883   002B38                     l8955:
  3884                           
  3885                           ;AECUL/LCD_LM016L/LCD.c: 213:         while(*str){
  3886   002B38  C11F  FFF6         	movff	LCD4B_SENDSTRPOS@str,tblptrl
  3887   002B3C                     	if	1	;There is more than 1 active tblptr byte
  3888   002B3C  0E10               	movlw	high __smallconst
  3889   002B3E  6EF7               	movwf	tblptrh,c
  3890   002B40                     	endif
  3891   002B40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3892   002B40  6AF8               	clrf	tblptru,c
  3893   002B42                     	endif
  3894   002B42                     	if	0	;tblptru may be non-zero
  3895   002B42                     	endif
  3896   002B42  0008               	tblrd		*
  3897   002B44  50F5               	movf	tablat,w,c
  3898   002B46  0900               	iorlw	0
  3899   002B48  A4D8               	btfss	status,2,c
  3900   002B4A  EFA9  F015         	goto	u5871
  3901   002B4E  EFAB  F015         	goto	u5870
  3902   002B52                     u5871:
  3903   002B52  EF8E  F015         	goto	l8951
  3904   002B56                     u5870:
  3905   002B56                     l1160:
  3906   002B56  0012               	return		;funcret
  3907   002B58                     __end_of_LCD4B_SENDSTRPOS:
  3908                           	callstack 0
  3909                           
  3910 ;; *************** function _setcursor4bit *****************
  3911 ;; Defined at:
  3912 ;;		line 257 in file "AECUL/LCD_LM016L/LCD.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  lcd             1   24[BANK1 ] PTR const struct .
  3915 ;;		 -> lcd(12), 
  3916 ;;  row             1   25[BANK1 ] unsigned char 
  3917 ;;  col             1   26[BANK1 ] unsigned char 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  ret             1   29[BANK1 ] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      unsigned char 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3929 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;Total ram usage:        6 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 18
  3936 ;; This function calls:
  3937 ;;		_LCD4B_SENDCMD
  3938 ;; This function is called by:
  3939 ;;		_LCD4B_SENDSTRPOS
  3940 ;;		_LCD4B_SENDCHARPOS
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text28
  3945   0023C8                     __ptext28:
  3946                           	callstack 0
  3947   0023C8                     _setcursor4bit:
  3948                           	callstack 11
  3949   0023C8                     
  3950                           ;AECUL/LCD_LM016L/LCD.c: 259:     col--;
  3951   0023C8  0101               	movlb	1	; () banked
  3952   0023CA  071A               	decf	setcursor4bit@col& (0+255),f,b
  3953                           
  3954                           ;AECUL/LCD_LM016L/LCD.c: 260:     switch(row){
  3955   0023CC  EF18  F012         	goto	l8863
  3956   0023D0                     l8851:
  3957                           
  3958                           ; BSR set to: 1
  3959   0023D0  C118  F10E         	movff	setcursor4bit@lcd,LCD4B_SENDCMD@lcd
  3960   0023D4  511A               	movf	setcursor4bit@col& (0+255),w,b
  3961   0023D6  0F80               	addlw	128
  3962   0023D8  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3963   0023DA  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3964   0023DE  0101               	movlb	1	; () banked
  3965   0023E0  6F1D               	movwf	setcursor4bit@ret& (0+255),b
  3966   0023E2  EF35  F012         	goto	l8865
  3967   0023E6                     l8853:
  3968                           
  3969                           ; BSR set to: 1
  3970   0023E6  C118  F10E         	movff	setcursor4bit@lcd,LCD4B_SENDCMD@lcd
  3971   0023EA  511A               	movf	setcursor4bit@col& (0+255),w,b
  3972   0023EC  0FC0               	addlw	192
  3973   0023EE  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3974   0023F0  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3975   0023F4  0101               	movlb	1	; () banked
  3976   0023F6  6F1D               	movwf	setcursor4bit@ret& (0+255),b
  3977   0023F8  EF35  F012         	goto	l8865
  3978   0023FC                     l8855:
  3979                           
  3980                           ; BSR set to: 1
  3981   0023FC  C118  F10E         	movff	setcursor4bit@lcd,LCD4B_SENDCMD@lcd
  3982   002400  511A               	movf	setcursor4bit@col& (0+255),w,b
  3983   002402  0F94               	addlw	148
  3984   002404  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3985   002406  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3986   00240A  0101               	movlb	1	; () banked
  3987   00240C  6F1D               	movwf	setcursor4bit@ret& (0+255),b
  3988   00240E  EF35  F012         	goto	l8865
  3989   002412                     l8857:
  3990                           
  3991                           ; BSR set to: 1
  3992   002412  C118  F10E         	movff	setcursor4bit@lcd,LCD4B_SENDCMD@lcd
  3993   002416  511A               	movf	setcursor4bit@col& (0+255),w,b
  3994   002418  0FD4               	addlw	212
  3995   00241A  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3996   00241C  ECA0  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3997   002420  0101               	movlb	1	; () banked
  3998   002422  6F1D               	movwf	setcursor4bit@ret& (0+255),b
  3999   002424  EF35  F012         	goto	l8865
  4000   002428                     l8859:
  4001                           
  4002                           ; BSR set to: 1
  4003   002428  0E00               	movlw	0
  4004   00242A  6F1D               	movwf	setcursor4bit@ret& (0+255),b
  4005   00242C  EF35  F012         	goto	l8865
  4006   002430                     l8863:
  4007                           
  4008                           ; BSR set to: 1
  4009   002430  5119               	movf	setcursor4bit@row& (0+255),w,b
  4010   002432  6F1B               	movwf	??_setcursor4bit& (0+255),b
  4011   002434  6B1C               	clrf	(??_setcursor4bit+1)& (0+255),b
  4012                           
  4013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4014                           ; Switch size 1, requested type "simple"
  4015                           ; Number of cases is 1, Range of values is 0 to 0
  4016                           ; switch strategies available:
  4017                           ; Name         Instructions Cycles
  4018                           ; simple_byte            4     3 (average)
  4019                           ;	Chosen strategy is simple_byte
  4020   002436  511C               	movf	(??_setcursor4bit+1)& (0+255),w,b
  4021   002438  0A00               	xorlw	0	; case 0
  4022   00243A  B4D8               	btfsc	status,2,c
  4023   00243C  EF22  F012         	goto	l9377
  4024   002440  EF14  F012         	goto	l8859
  4025   002444                     l9377:
  4026                           
  4027                           ; BSR set to: 1
  4028                           ; Switch size 1, requested type "simple"
  4029                           ; Number of cases is 4, Range of values is 1 to 4
  4030                           ; switch strategies available:
  4031                           ; Name         Instructions Cycles
  4032                           ; simple_byte           13     7 (average)
  4033                           ;	Chosen strategy is simple_byte
  4034   002444  511B               	movf	??_setcursor4bit& (0+255),w,b
  4035   002446  0A01               	xorlw	1	; case 1
  4036   002448  B4D8               	btfsc	status,2,c
  4037   00244A  EFE8  F011         	goto	l8851
  4038   00244E  0A03               	xorlw	3	; case 2
  4039   002450  B4D8               	btfsc	status,2,c
  4040   002452  EFF3  F011         	goto	l8853
  4041   002456  0A01               	xorlw	1	; case 3
  4042   002458  B4D8               	btfsc	status,2,c
  4043   00245A  EFFE  F011         	goto	l8855
  4044   00245E  0A07               	xorlw	7	; case 4
  4045   002460  B4D8               	btfsc	status,2,c
  4046   002462  EF09  F012         	goto	l8857
  4047   002466  EF14  F012         	goto	l8859
  4048   00246A                     l8865:
  4049                           
  4050                           ; BSR set to: 1
  4051                           ;AECUL/LCD_LM016L/LCD.c: 267:     return ret;
  4052   00246A  511D               	movf	setcursor4bit@ret& (0+255),w,b
  4053   00246C                     
  4054                           ; BSR set to: 1
  4055   00246C  0012               	return		;funcret
  4056   00246E                     __end_of_setcursor4bit:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _LCD4B_SENDCMD *****************
  4060 ;; Defined at:
  4061 ;;		line 121 in file "AECUL/LCD_LM016L/LCD.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  lcd             1   14[BANK1 ] PTR const struct .
  4064 ;;		 -> lcd(12), 
  4065 ;;  cmd             1   15[BANK1 ] unsigned char 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  i               2   21[BANK1 ] int 
  4068 ;;  i               2   19[BANK1 ] int 
  4069 ;;  pinptr          1   23[BANK1 ] struct .
  4070 ;;  ret             1   18[BANK1 ] unsigned char 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      unsigned char 
  4073 ;; Registers used:
  4074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4080 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;Total ram usage:       10 bytes
  4085 ;; Hardware stack levels used: 1
  4086 ;; Hardware stack levels required when called: 17
  4087 ;; This function calls:
  4088 ;;		_PINWRITE
  4089 ;;		_sendenable
  4090 ;; This function is called by:
  4091 ;;		_LCD4B_SET
  4092 ;;		_setcursor4bit
  4093 ;;		_LCD4B_SENDCUSTOMCHAR
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text29
  4098   001940                     __ptext29:
  4099                           	callstack 0
  4100   001940                     _LCD4B_SENDCMD:
  4101                           	callstack 12
  4102   001940                     
  4103                           ;AECUL/LCD_LM016L/LCD.c: 123:     if (lcd == ((void*)0)){
  4104   001940  0101               	movlb	1	; () banked
  4105   001942  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4106   001944  A4D8               	btfss	status,2,c
  4107   001946  EFA7  F00C         	goto	u5681
  4108   00194A  EFA9  F00C         	goto	u5680
  4109   00194E                     u5681:
  4110   00194E  EFAD  F00C         	goto	l1118
  4111   001952                     u5680:
  4112   001952                     
  4113                           ; BSR set to: 1
  4114                           ;AECUL/LCD_LM016L/LCD.c: 124:         ret= 0x00;
  4115   001952  0E00               	movlw	0
  4116   001954  6F12               	movwf	LCD4B_SENDCMD@ret& (0+255),b
  4117                           
  4118                           ;AECUL/LCD_LM016L/LCD.c: 125:     }
  4119   001956  EF70  F00D         	goto	l8763
  4120   00195A                     l1118:
  4121                           
  4122                           ; BSR set to: 1
  4123                           ;AECUL/LCD_LM016L/LCD.c: 127:         PinConfig_t pinptr = {.pin = lcd->REpin, .port=lcd
      +                          ->REport,
  4124   00195A  C08F  F117         	movff	LCD4B_SENDCMD@F3681,LCD4B_SENDCMD@pinptr
  4125   00195E                     
  4126                           ; BSR set to: 1
  4127   00195E  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4128   001960  6ED9               	movwf	fsr2l,c
  4129   001962  6ADA               	clrf	fsr2h,c
  4130   001964  0E01               	movlw	1
  4131   001966  26D9               	addwf	fsr2l,f,c
  4132   001968  50DF               	movf	indf2,w,c
  4133   00196A  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4134   00196C  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4135   00196E  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4136   001970  0BF8               	andlw	-8
  4137   001972  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4138   001974  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4139   001976  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4140   001978  6ED9               	movwf	fsr2l,c
  4141   00197A  6ADA               	clrf	fsr2h,c
  4142   00197C  50DF               	movf	indf2,w,c
  4143   00197E  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4144   001980  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4145   001982  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4146   001984  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4147   001986  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4148   001988  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4149   00198A  0BC7               	andlw	-57
  4150   00198C  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4151   00198E  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4152   001990                     
  4153                           ; BSR set to: 1
  4154   001990  9D17               	bcf	LCD4B_SENDCMD@pinptr& (0+255),6,b
  4155   001992                     
  4156                           ; BSR set to: 1
  4157   001992  9F17               	bcf	LCD4B_SENDCMD@pinptr& (0+255),7,b
  4158   001994                     
  4159                           ; BSR set to: 1
  4160   001994  0E17               	movlw	low LCD4B_SENDCMD@pinptr
  4161   001996  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4162   001998  0E01               	movlw	high LCD4B_SENDCMD@pinptr
  4163   00199A  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4164   00199C  0E00               	movlw	0
  4165   00199E  6F04               	movwf	PINWRITE@log& (0+255),b
  4166   0019A0  ECF7  F00E         	call	_PINWRITE	;wreg free
  4167   0019A4                     
  4168                           ;AECUL/LCD_LM016L/LCD.c: 130:         for (int i = 0; i < 4; i++){
  4169   0019A4  0E00               	movlw	0
  4170   0019A6  0101               	movlb	1	; () banked
  4171   0019A8  6F14               	movwf	(LCD4B_SENDCMD@i+1)& (0+255),b
  4172   0019AA  0E00               	movlw	0
  4173   0019AC  6F13               	movwf	LCD4B_SENDCMD@i& (0+255),b
  4174   0019AE                     l8737:
  4175                           
  4176                           ; BSR set to: 1
  4177                           ;AECUL/LCD_LM016L/LCD.c: 131:             pinptr.pin = lcd->datapins[i];
  4178   0019AE  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4179   0019B0  2513               	addwf	LCD4B_SENDCMD@i& (0+255),w,b
  4180   0019B2  6ED9               	movwf	fsr2l,c
  4181   0019B4  6ADA               	clrf	fsr2h,c
  4182   0019B6  0E04               	movlw	4
  4183   0019B8  26D9               	addwf	fsr2l,f,c
  4184   0019BA  50DF               	movf	indf2,w,c
  4185   0019BC  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4186   0019BE  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4187   0019C0  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4188   0019C2  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4189   0019C4  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4190   0019C6  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4191   0019C8  0BC7               	andlw	-57
  4192   0019CA  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4193   0019CC  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4194                           
  4195                           ;AECUL/LCD_LM016L/LCD.c: 132:             pinptr.port = lcd->dataport[i];
  4196   0019CE  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4197   0019D0  2513               	addwf	LCD4B_SENDCMD@i& (0+255),w,b
  4198   0019D2  6ED9               	movwf	fsr2l,c
  4199   0019D4  6ADA               	clrf	fsr2h,c
  4200   0019D6  0E08               	movlw	8
  4201   0019D8  26D9               	addwf	fsr2l,f,c
  4202   0019DA  50DF               	movf	indf2,w,c
  4203   0019DC  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4204   0019DE  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4205   0019E0  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4206   0019E2  0BF8               	andlw	-8
  4207   0019E4  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4208   0019E6  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4209   0019E8                     
  4210                           ; BSR set to: 1
  4211   0019E8  0E17               	movlw	low LCD4B_SENDCMD@pinptr
  4212   0019EA  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4213   0019EC  0E01               	movlw	high LCD4B_SENDCMD@pinptr
  4214   0019EE  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4215   0019F0  C113  F110         	movff	LCD4B_SENDCMD@i,??_LCD4B_SENDCMD
  4216   0019F4  0E04               	movlw	4
  4217   0019F6  2710               	addwf	??_LCD4B_SENDCMD& (0+255),f,b
  4218   0019F8  C10F  F111         	movff	LCD4B_SENDCMD@cmd,??_LCD4B_SENDCMD+1
  4219   0019FC  2B10               	incf	??_LCD4B_SENDCMD& (0+255),f,b
  4220   0019FE  EF03  F00D         	goto	u5694
  4221   001A02                     u5695:
  4222   001A02  90D8               	bcf	status,0,c
  4223   001A04  3311               	rrcf	(??_LCD4B_SENDCMD+1)& (0+255),f,b
  4224   001A06                     u5694:
  4225   001A06  2F10               	decfsz	??_LCD4B_SENDCMD& (0+255),f,b
  4226   001A08  EF01  F00D         	goto	u5695
  4227   001A0C  0101               	movlb	1	; () banked
  4228   001A0E  5111               	movf	(??_LCD4B_SENDCMD+1)& (0+255),w,b
  4229   001A10  0B01               	andlw	1
  4230   001A12  6F04               	movwf	PINWRITE@log& (0+255),b
  4231   001A14  ECF7  F00E         	call	_PINWRITE	;wreg free
  4232   001A18                     
  4233                           ;AECUL/LCD_LM016L/LCD.c: 134:         }
  4234   001A18  0101               	movlb	1	; () banked
  4235   001A1A  4B13               	infsnz	LCD4B_SENDCMD@i& (0+255),f,b
  4236   001A1C  2B14               	incf	(LCD4B_SENDCMD@i+1)& (0+255),f,b
  4237   001A1E                     
  4238                           ; BSR set to: 1
  4239   001A1E  BF14               	btfsc	(LCD4B_SENDCMD@i+1)& (0+255),7,b
  4240   001A20  EF1B  F00D         	goto	u5701
  4241   001A24  5114               	movf	(LCD4B_SENDCMD@i+1)& (0+255),w,b
  4242   001A26  E109               	bnz	u5700
  4243   001A28  0E04               	movlw	4
  4244   001A2A  5D13               	subwf	LCD4B_SENDCMD@i& (0+255),w,b
  4245   001A2C  A0D8               	btfss	status,0,c
  4246   001A2E  EF1B  F00D         	goto	u5701
  4247   001A32  EF1D  F00D         	goto	u5700
  4248   001A36                     u5701:
  4249   001A36  EFD7  F00C         	goto	l8737
  4250   001A3A                     u5700:
  4251   001A3A                     
  4252                           ; BSR set to: 1
  4253   001A3A  C10E  F10A         	movff	LCD4B_SENDCMD@lcd,sendenable@lcd
  4254   001A3E  EC6A  F014         	call	_sendenable	;wreg free
  4255   001A42                     
  4256                           ;AECUL/LCD_LM016L/LCD.c: 136:         for (int i = 0; i < 4; i++){
  4257   001A42  0E00               	movlw	0
  4258   001A44  0101               	movlb	1	; () banked
  4259   001A46  6F16               	movwf	(LCD4B_SENDCMD@i_2487+1)& (0+255),b
  4260   001A48  0E00               	movlw	0
  4261   001A4A  6F15               	movwf	LCD4B_SENDCMD@i_2487& (0+255),b
  4262   001A4C                     l8753:
  4263                           
  4264                           ; BSR set to: 1
  4265                           ;AECUL/LCD_LM016L/LCD.c: 137:             pinptr.pin = lcd->datapins[i];
  4266   001A4C  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4267   001A4E  2515               	addwf	LCD4B_SENDCMD@i_2487& (0+255),w,b
  4268   001A50  6ED9               	movwf	fsr2l,c
  4269   001A52  6ADA               	clrf	fsr2h,c
  4270   001A54  0E04               	movlw	4
  4271   001A56  26D9               	addwf	fsr2l,f,c
  4272   001A58  50DF               	movf	indf2,w,c
  4273   001A5A  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4274   001A5C  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4275   001A5E  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4276   001A60  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4277   001A62  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4278   001A64  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4279   001A66  0BC7               	andlw	-57
  4280   001A68  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4281   001A6A  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4282                           
  4283                           ;AECUL/LCD_LM016L/LCD.c: 138:             pinptr.port = lcd->dataport[i];
  4284   001A6C  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4285   001A6E  2515               	addwf	LCD4B_SENDCMD@i_2487& (0+255),w,b
  4286   001A70  6ED9               	movwf	fsr2l,c
  4287   001A72  6ADA               	clrf	fsr2h,c
  4288   001A74  0E08               	movlw	8
  4289   001A76  26D9               	addwf	fsr2l,f,c
  4290   001A78  50DF               	movf	indf2,w,c
  4291   001A7A  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4292   001A7C  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4293   001A7E  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4294   001A80  0BF8               	andlw	-8
  4295   001A82  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4296   001A84  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4297   001A86                     
  4298                           ; BSR set to: 1
  4299   001A86  0E17               	movlw	low LCD4B_SENDCMD@pinptr
  4300   001A88  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4301   001A8A  0E01               	movlw	high LCD4B_SENDCMD@pinptr
  4302   001A8C  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4303   001A8E  C115  F110         	movff	LCD4B_SENDCMD@i_2487,??_LCD4B_SENDCMD
  4304   001A92  C10F  F111         	movff	LCD4B_SENDCMD@cmd,??_LCD4B_SENDCMD+1
  4305   001A96  2B10               	incf	??_LCD4B_SENDCMD& (0+255),f,b
  4306   001A98  EF50  F00D         	goto	u5714
  4307   001A9C                     u5715:
  4308   001A9C  90D8               	bcf	status,0,c
  4309   001A9E  3311               	rrcf	(??_LCD4B_SENDCMD+1)& (0+255),f,b
  4310   001AA0                     u5714:
  4311   001AA0  2F10               	decfsz	??_LCD4B_SENDCMD& (0+255),f,b
  4312   001AA2  EF4E  F00D         	goto	u5715
  4313   001AA6  0101               	movlb	1	; () banked
  4314   001AA8  5111               	movf	(??_LCD4B_SENDCMD+1)& (0+255),w,b
  4315   001AAA  0B01               	andlw	1
  4316   001AAC  6F04               	movwf	PINWRITE@log& (0+255),b
  4317   001AAE  ECF7  F00E         	call	_PINWRITE	;wreg free
  4318   001AB2                     
  4319                           ;AECUL/LCD_LM016L/LCD.c: 140:         }
  4320   001AB2  0101               	movlb	1	; () banked
  4321   001AB4  4B15               	infsnz	LCD4B_SENDCMD@i_2487& (0+255),f,b
  4322   001AB6  2B16               	incf	(LCD4B_SENDCMD@i_2487+1)& (0+255),f,b
  4323   001AB8                     
  4324                           ; BSR set to: 1
  4325   001AB8  BF16               	btfsc	(LCD4B_SENDCMD@i_2487+1)& (0+255),7,b
  4326   001ABA  EF68  F00D         	goto	u5721
  4327   001ABE  5116               	movf	(LCD4B_SENDCMD@i_2487+1)& (0+255),w,b
  4328   001AC0  E109               	bnz	u5720
  4329   001AC2  0E04               	movlw	4
  4330   001AC4  5D15               	subwf	LCD4B_SENDCMD@i_2487& (0+255),w,b
  4331   001AC6  A0D8               	btfss	status,0,c
  4332   001AC8  EF68  F00D         	goto	u5721
  4333   001ACC  EF6A  F00D         	goto	u5720
  4334   001AD0                     u5721:
  4335   001AD0  EF26  F00D         	goto	l8753
  4336   001AD4                     u5720:
  4337   001AD4                     
  4338                           ; BSR set to: 1
  4339                           ;AECUL/LCD_LM016L/LCD.c: 141:         ret = sendenable(lcd);
  4340   001AD4  C10E  F10A         	movff	LCD4B_SENDCMD@lcd,sendenable@lcd
  4341   001AD8  EC6A  F014         	call	_sendenable	;wreg free
  4342   001ADC  0101               	movlb	1	; () banked
  4343   001ADE  6F12               	movwf	LCD4B_SENDCMD@ret& (0+255),b
  4344   001AE0                     l8763:
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;AECUL/LCD_LM016L/LCD.c: 143:     return ret;
  4348   001AE0  5112               	movf	LCD4B_SENDCMD@ret& (0+255),w,b
  4349   001AE2                     
  4350                           ; BSR set to: 1
  4351   001AE2  0012               	return		;funcret
  4352   001AE4                     __end_of_LCD4B_SENDCMD:
  4353                           	callstack 0
  4354                           
  4355 ;; *************** function _LCD4B_SENDSTR *****************
  4356 ;; Defined at:
  4357 ;;		line 189 in file "AECUL/LCD_LM016L/LCD.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  lcd             1   24[BANK1 ] PTR const struct .
  4360 ;;		 -> lcd(12), 
  4361 ;;  str             1   25[BANK1 ] PTR unsigned char 
  4362 ;;		 -> LCDtemp(4), timestr(10), datestr(10), 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  length          1   27[BANK1 ] unsigned char 
  4365 ;;  str_old         1   26[BANK1 ] PTR unsigned char 
  4366 ;;		 -> LCDtemp(4), timestr(10), datestr(10), 
  4367 ;;  ret             1    0        unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      unsigned char 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4377 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;Total ram usage:        4 bytes
  4382 ;; Hardware stack levels used: 1
  4383 ;; Hardware stack levels required when called: 18
  4384 ;; This function calls:
  4385 ;;		_LCD4B_SENDCHAR
  4386 ;;		_strlen
  4387 ;; This function is called by:
  4388 ;;		_main
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text30
  4393   002DAA                     __ptext30:
  4394                           	callstack 0
  4395   002DAA                     _LCD4B_SENDSTR:
  4396                           	callstack 12
  4397   002DAA                     
  4398                           ;AECUL/LCD_LM016L/LCD.c: 191:     uint8_t *str_old = str;
  4399   002DAA  C119  F11A         	movff	LCD4B_SENDSTR@str,LCD4B_SENDSTR@str_old
  4400   002DAE                     
  4401                           ;AECUL/LCD_LM016L/LCD.c: 192:     uint8_t length = (uint8_t)strlen((const char *)str);
  4402   002DAE  C119  F0D8         	movff	LCD4B_SENDSTR@str,strlen@s
  4403   002DB2  0100               	movlb	0	; () banked
  4404   002DB4  6BD9               	clrf	(strlen@s+1)& (0+255),b
  4405   002DB6  EC00  F017         	call	_strlen	;wreg free
  4406   002DBA  0100               	movlb	0	; () banked
  4407   002DBC  51D8               	movf	?_strlen& (0+255),w,b
  4408   002DBE  0101               	movlb	1	; () banked
  4409   002DC0  6F1B               	movwf	LCD4B_SENDSTR@length& (0+255),b
  4410   002DC2                     
  4411                           ; BSR set to: 1
  4412                           ;AECUL/LCD_LM016L/LCD.c: 193:     if (lcd == ((void*)0)){
  4413   002DC2  5118               	movf	LCD4B_SENDSTR@lcd& (0+255),w,b
  4414   002DC4  A4D8               	btfss	status,2,c
  4415   002DC6  EFE7  F016         	goto	u5881
  4416   002DCA  EFE9  F016         	goto	u5880
  4417   002DCE                     u5881:
  4418   002DCE  EFF6  F016         	goto	l8971
  4419   002DD2                     u5880:
  4420   002DD2                     
  4421                           ; BSR set to: 1
  4422                           ;AECUL/LCD_LM016L/LCD.c: 195:     }
  4423   002DD2  EFFF  F016         	goto	l1152
  4424   002DD6                     l8967:
  4425                           
  4426                           ; BSR set to: 1
  4427   002DD6  C118  F10E         	movff	LCD4B_SENDSTR@lcd,LCD4B_SENDCHAR@lcd
  4428   002DDA  5119               	movf	LCD4B_SENDSTR@str& (0+255),w,b
  4429   002DDC  6ED9               	movwf	fsr2l,c
  4430   002DDE  6ADA               	clrf	fsr2h,c
  4431   002DE0  50DF               	movf	indf2,w,c
  4432   002DE2  6F0F               	movwf	LCD4B_SENDCHAR@data& (0+255),b
  4433   002DE4  EC72  F00D         	call	_LCD4B_SENDCHAR	;wreg free
  4434   002DE8  0101               	movlb	1	; () banked
  4435   002DEA  2B19               	incf	LCD4B_SENDSTR@str& (0+255),f,b
  4436   002DEC                     l8971:
  4437                           
  4438                           ; BSR set to: 1
  4439                           ;AECUL/LCD_LM016L/LCD.c: 197:         while(length--){
  4440   002DEC  071B               	decf	LCD4B_SENDSTR@length& (0+255),f,b
  4441   002DEE  291B               	incf	LCD4B_SENDSTR@length& (0+255),w,b
  4442   002DF0  A4D8               	btfss	status,2,c
  4443   002DF2  EFFD  F016         	goto	u5891
  4444   002DF6  EFFF  F016         	goto	u5890
  4445   002DFA                     u5891:
  4446   002DFA  EFEB  F016         	goto	l8967
  4447   002DFE                     u5890:
  4448   002DFE                     l1152:
  4449                           
  4450                           ; BSR set to: 1
  4451   002DFE  0012               	return		;funcret
  4452   002E00                     __end_of_LCD4B_SENDSTR:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function _strlen *****************
  4456 ;; Defined at:
  4457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4460 ;;		 -> LCDtemp(4), STR_2(7), timestr(10), STR_1(7), 
  4461 ;;		 -> datestr(10), 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  4464 ;;		 -> LCDtemp(4), STR_2(7), timestr(10), STR_1(7), 
  4465 ;;		 -> datestr(10), 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    0[BANK0 ] unsigned int 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;Total ram usage:        4 bytes
  4480 ;; Hardware stack levels used: 1
  4481 ;; Hardware stack levels required when called: 10
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_EUSART_SendString
  4486 ;;		_LCD4B_SENDSTR
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text31
  4491   002E00                     __ptext31:
  4492                           	callstack 0
  4493   002E00                     _strlen:
  4494                           	callstack 18
  4495   002E00  C0D8  F0DA         	movff	strlen@s,strlen@a
  4496   002E04  C0D9  F0DB         	movff	strlen@s+1,strlen@a+1
  4497   002E08  EF09  F017         	goto	l6261
  4498   002E0C                     l6259:
  4499   002E0C  0100               	movlb	0	; () banked
  4500   002E0E  4BD8               	infsnz	strlen@s& (0+255),f,b
  4501   002E10  2BD9               	incf	(strlen@s+1)& (0+255),f,b
  4502   002E12                     l6261:
  4503   002E12  C0D8  FFF6         	movff	strlen@s,tblptrl
  4504   002E16  C0D9  FFF7         	movff	strlen@s+1,tblptrh
  4505   002E1A  0E00               	movlw	low (__smallconst shr (0+16))
  4506   002E1C  6EF8               	movwf	tblptru,c
  4507   002E1E  0E0F               	movlw	(high __ramtop+-1)
  4508   002E20  64F7               	cpfsgt	tblptrh,c
  4509   002E22  D003               	bra	u3777
  4510   002E24  0008               	tblrd		*
  4511   002E26  50F5               	movf	tablat,w,c
  4512   002E28  D005               	bra	u3770
  4513   002E2A                     u3777:
  4514   002E2A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4515   002E2E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4516   002E32  50EF               	movf	indf0,w,c
  4517   002E34                     u3770:
  4518   002E34  0900               	iorlw	0
  4519   002E36  A4D8               	btfss	status,2,c
  4520   002E38  EF20  F017         	goto	u3781
  4521   002E3C  EF22  F017         	goto	u3780
  4522   002E40                     u3781:
  4523   002E40  EF06  F017         	goto	l6259
  4524   002E44                     u3780:
  4525   002E44  0100               	movlb	0	; () banked
  4526   002E46  51DA               	movf	strlen@a& (0+255),w,b
  4527   002E48  5DD8               	subwf	strlen@s& (0+255),w,b
  4528   002E4A  6FD8               	movwf	?_strlen& (0+255),b
  4529   002E4C  51DB               	movf	(strlen@a+1)& (0+255),w,b
  4530   002E4E  59D9               	subwfb	(strlen@s+1)& (0+255),w,b
  4531   002E50  6FD9               	movwf	(?_strlen+1)& (0+255),b
  4532   002E52                     
  4533                           ; BSR set to: 0
  4534   002E52  0012               	return		;funcret
  4535   002E54                     __end_of_strlen:
  4536                           	callstack 0
  4537                           
  4538 ;; *************** function _LCD4B_SENDCHAR *****************
  4539 ;; Defined at:
  4540 ;;		line 146 in file "AECUL/LCD_LM016L/LCD.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  lcd             1   14[BANK1 ] PTR const struct .
  4543 ;;		 -> lcd(12), 
  4544 ;;  data            1   15[BANK1 ] unsigned char 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  i               2   21[BANK1 ] int 
  4547 ;;  i               2   19[BANK1 ] int 
  4548 ;;  pinptr          1   23[BANK1 ] struct .
  4549 ;;  ret             1   18[BANK1 ] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      unsigned char 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4559 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;Total ram usage:       10 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 17
  4566 ;; This function calls:
  4567 ;;		_PINWRITE
  4568 ;;		_sendenable
  4569 ;; This function is called by:
  4570 ;;		_main
  4571 ;;		_LCD4B_SENDSTR
  4572 ;;		_LCD4B_SENDSTRPOS
  4573 ;;		_LCD4B_SENDCUSTOMCHAR
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text32
  4578   001AE4                     __ptext32:
  4579                           	callstack 0
  4580   001AE4                     _LCD4B_SENDCHAR:
  4581                           	callstack 12
  4582   001AE4                     
  4583                           ;AECUL/LCD_LM016L/LCD.c: 148:     if (lcd == ((void*)0)){
  4584   001AE4  0101               	movlb	1	; () banked
  4585   001AE6  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4586   001AE8  A4D8               	btfss	status,2,c
  4587   001AEA  EF79  F00D         	goto	u5731
  4588   001AEE  EF7B  F00D         	goto	u5730
  4589   001AF2                     u5731:
  4590   001AF2  EF7F  F00D         	goto	l1129
  4591   001AF6                     u5730:
  4592   001AF6                     
  4593                           ; BSR set to: 1
  4594                           ;AECUL/LCD_LM016L/LCD.c: 149:         ret= 0x00;
  4595   001AF6  0E00               	movlw	0
  4596   001AF8  6F12               	movwf	LCD4B_SENDCHAR@ret& (0+255),b
  4597                           
  4598                           ;AECUL/LCD_LM016L/LCD.c: 150:     }
  4599   001AFA  EF42  F00E         	goto	l8811
  4600   001AFE                     l1129:
  4601                           
  4602                           ; BSR set to: 1
  4603                           ;AECUL/LCD_LM016L/LCD.c: 152:         PinConfig_t pinptr = {.pin = lcd->REpin, .port=lcd
      +                          ->REport,
  4604   001AFE  C08E  F117         	movff	LCD4B_SENDCHAR@F3689,LCD4B_SENDCHAR@pinptr
  4605   001B02                     
  4606                           ; BSR set to: 1
  4607   001B02  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4608   001B04  6ED9               	movwf	fsr2l,c
  4609   001B06  6ADA               	clrf	fsr2h,c
  4610   001B08  0E01               	movlw	1
  4611   001B0A  26D9               	addwf	fsr2l,f,c
  4612   001B0C  50DF               	movf	indf2,w,c
  4613   001B0E  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4614   001B10  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4615   001B12  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4616   001B14  0BF8               	andlw	-8
  4617   001B16  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4618   001B18  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4619   001B1A  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4620   001B1C  6ED9               	movwf	fsr2l,c
  4621   001B1E  6ADA               	clrf	fsr2h,c
  4622   001B20  50DF               	movf	indf2,w,c
  4623   001B22  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4624   001B24  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4625   001B26  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4626   001B28  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4627   001B2A  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4628   001B2C  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4629   001B2E  0BC7               	andlw	-57
  4630   001B30  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4631   001B32  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4632   001B34                     
  4633                           ; BSR set to: 1
  4634   001B34  9D17               	bcf	LCD4B_SENDCHAR@pinptr& (0+255),6,b
  4635   001B36                     
  4636                           ; BSR set to: 1
  4637   001B36  9F17               	bcf	LCD4B_SENDCHAR@pinptr& (0+255),7,b
  4638   001B38                     
  4639                           ; BSR set to: 1
  4640   001B38  0E17               	movlw	low LCD4B_SENDCHAR@pinptr
  4641   001B3A  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4642   001B3C  0E01               	movlw	high LCD4B_SENDCHAR@pinptr
  4643   001B3E  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4644   001B40  0E01               	movlw	1
  4645   001B42  6F04               	movwf	PINWRITE@log& (0+255),b
  4646   001B44  ECF7  F00E         	call	_PINWRITE	;wreg free
  4647   001B48                     
  4648                           ;AECUL/LCD_LM016L/LCD.c: 155:         for (int i = 0; i < 4; i++){
  4649   001B48  0E00               	movlw	0
  4650   001B4A  0101               	movlb	1	; () banked
  4651   001B4C  6F14               	movwf	(LCD4B_SENDCHAR@i+1)& (0+255),b
  4652   001B4E  0E00               	movlw	0
  4653   001B50  6F13               	movwf	LCD4B_SENDCHAR@i& (0+255),b
  4654   001B52                     l8785:
  4655                           
  4656                           ; BSR set to: 1
  4657                           ;AECUL/LCD_LM016L/LCD.c: 156:             pinptr.pin = lcd->datapins[i];
  4658   001B52  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4659   001B54  2513               	addwf	LCD4B_SENDCHAR@i& (0+255),w,b
  4660   001B56  6ED9               	movwf	fsr2l,c
  4661   001B58  6ADA               	clrf	fsr2h,c
  4662   001B5A  0E04               	movlw	4
  4663   001B5C  26D9               	addwf	fsr2l,f,c
  4664   001B5E  50DF               	movf	indf2,w,c
  4665   001B60  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4666   001B62  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4667   001B64  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4668   001B66  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4669   001B68  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4670   001B6A  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4671   001B6C  0BC7               	andlw	-57
  4672   001B6E  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4673   001B70  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4674                           
  4675                           ;AECUL/LCD_LM016L/LCD.c: 157:             pinptr.port = lcd->dataport[i];
  4676   001B72  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4677   001B74  2513               	addwf	LCD4B_SENDCHAR@i& (0+255),w,b
  4678   001B76  6ED9               	movwf	fsr2l,c
  4679   001B78  6ADA               	clrf	fsr2h,c
  4680   001B7A  0E08               	movlw	8
  4681   001B7C  26D9               	addwf	fsr2l,f,c
  4682   001B7E  50DF               	movf	indf2,w,c
  4683   001B80  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4684   001B82  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4685   001B84  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4686   001B86  0BF8               	andlw	-8
  4687   001B88  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4688   001B8A  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4689   001B8C                     
  4690                           ; BSR set to: 1
  4691   001B8C  0E17               	movlw	low LCD4B_SENDCHAR@pinptr
  4692   001B8E  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4693   001B90  0E01               	movlw	high LCD4B_SENDCHAR@pinptr
  4694   001B92  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4695   001B94  C113  F110         	movff	LCD4B_SENDCHAR@i,??_LCD4B_SENDCHAR
  4696   001B98  0E04               	movlw	4
  4697   001B9A  2710               	addwf	??_LCD4B_SENDCHAR& (0+255),f,b
  4698   001B9C  C10F  F111         	movff	LCD4B_SENDCHAR@data,??_LCD4B_SENDCHAR+1
  4699   001BA0  2B10               	incf	??_LCD4B_SENDCHAR& (0+255),f,b
  4700   001BA2  EFD5  F00D         	goto	u5744
  4701   001BA6                     u5745:
  4702   001BA6  90D8               	bcf	status,0,c
  4703   001BA8  3311               	rrcf	(??_LCD4B_SENDCHAR+1)& (0+255),f,b
  4704   001BAA                     u5744:
  4705   001BAA  2F10               	decfsz	??_LCD4B_SENDCHAR& (0+255),f,b
  4706   001BAC  EFD3  F00D         	goto	u5745
  4707   001BB0  0101               	movlb	1	; () banked
  4708   001BB2  5111               	movf	(??_LCD4B_SENDCHAR+1)& (0+255),w,b
  4709   001BB4  0B01               	andlw	1
  4710   001BB6  6F04               	movwf	PINWRITE@log& (0+255),b
  4711   001BB8  ECF7  F00E         	call	_PINWRITE	;wreg free
  4712   001BBC                     
  4713                           ;AECUL/LCD_LM016L/LCD.c: 159:         }
  4714   001BBC  0101               	movlb	1	; () banked
  4715   001BBE  4B13               	infsnz	LCD4B_SENDCHAR@i& (0+255),f,b
  4716   001BC0  2B14               	incf	(LCD4B_SENDCHAR@i+1)& (0+255),f,b
  4717   001BC2                     
  4718                           ; BSR set to: 1
  4719   001BC2  BF14               	btfsc	(LCD4B_SENDCHAR@i+1)& (0+255),7,b
  4720   001BC4  EFED  F00D         	goto	u5751
  4721   001BC8  5114               	movf	(LCD4B_SENDCHAR@i+1)& (0+255),w,b
  4722   001BCA  E109               	bnz	u5750
  4723   001BCC  0E04               	movlw	4
  4724   001BCE  5D13               	subwf	LCD4B_SENDCHAR@i& (0+255),w,b
  4725   001BD0  A0D8               	btfss	status,0,c
  4726   001BD2  EFED  F00D         	goto	u5751
  4727   001BD6  EFEF  F00D         	goto	u5750
  4728   001BDA                     u5751:
  4729   001BDA  EFA9  F00D         	goto	l8785
  4730   001BDE                     u5750:
  4731   001BDE                     
  4732                           ; BSR set to: 1
  4733   001BDE  C10E  F10A         	movff	LCD4B_SENDCHAR@lcd,sendenable@lcd
  4734   001BE2  EC6A  F014         	call	_sendenable	;wreg free
  4735   001BE6                     
  4736                           ;AECUL/LCD_LM016L/LCD.c: 161:         for (int i = 0; i < 4; i++){
  4737   001BE6  0E00               	movlw	0
  4738   001BE8  0101               	movlb	1	; () banked
  4739   001BEA  6F16               	movwf	(LCD4B_SENDCHAR@i_2509+1)& (0+255),b
  4740   001BEC  0E00               	movlw	0
  4741   001BEE  6F15               	movwf	LCD4B_SENDCHAR@i_2509& (0+255),b
  4742   001BF0                     l8801:
  4743                           
  4744                           ; BSR set to: 1
  4745                           ;AECUL/LCD_LM016L/LCD.c: 162:             pinptr.pin = lcd->datapins[i];
  4746   001BF0  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4747   001BF2  2515               	addwf	LCD4B_SENDCHAR@i_2509& (0+255),w,b
  4748   001BF4  6ED9               	movwf	fsr2l,c
  4749   001BF6  6ADA               	clrf	fsr2h,c
  4750   001BF8  0E04               	movlw	4
  4751   001BFA  26D9               	addwf	fsr2l,f,c
  4752   001BFC  50DF               	movf	indf2,w,c
  4753   001BFE  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4754   001C00  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4755   001C02  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4756   001C04  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4757   001C06  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4758   001C08  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4759   001C0A  0BC7               	andlw	-57
  4760   001C0C  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4761   001C0E  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4762                           
  4763                           ;AECUL/LCD_LM016L/LCD.c: 163:             pinptr.port = lcd->dataport[i];
  4764   001C10  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4765   001C12  2515               	addwf	LCD4B_SENDCHAR@i_2509& (0+255),w,b
  4766   001C14  6ED9               	movwf	fsr2l,c
  4767   001C16  6ADA               	clrf	fsr2h,c
  4768   001C18  0E08               	movlw	8
  4769   001C1A  26D9               	addwf	fsr2l,f,c
  4770   001C1C  50DF               	movf	indf2,w,c
  4771   001C1E  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4772   001C20  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4773   001C22  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4774   001C24  0BF8               	andlw	-8
  4775   001C26  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4776   001C28  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4777   001C2A                     
  4778                           ; BSR set to: 1
  4779   001C2A  0E17               	movlw	low LCD4B_SENDCHAR@pinptr
  4780   001C2C  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4781   001C2E  0E01               	movlw	high LCD4B_SENDCHAR@pinptr
  4782   001C30  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4783   001C32  C115  F110         	movff	LCD4B_SENDCHAR@i_2509,??_LCD4B_SENDCHAR
  4784   001C36  C10F  F111         	movff	LCD4B_SENDCHAR@data,??_LCD4B_SENDCHAR+1
  4785   001C3A  2B10               	incf	??_LCD4B_SENDCHAR& (0+255),f,b
  4786   001C3C  EF22  F00E         	goto	u5764
  4787   001C40                     u5765:
  4788   001C40  90D8               	bcf	status,0,c
  4789   001C42  3311               	rrcf	(??_LCD4B_SENDCHAR+1)& (0+255),f,b
  4790   001C44                     u5764:
  4791   001C44  2F10               	decfsz	??_LCD4B_SENDCHAR& (0+255),f,b
  4792   001C46  EF20  F00E         	goto	u5765
  4793   001C4A  0101               	movlb	1	; () banked
  4794   001C4C  5111               	movf	(??_LCD4B_SENDCHAR+1)& (0+255),w,b
  4795   001C4E  0B01               	andlw	1
  4796   001C50  6F04               	movwf	PINWRITE@log& (0+255),b
  4797   001C52  ECF7  F00E         	call	_PINWRITE	;wreg free
  4798   001C56                     
  4799                           ;AECUL/LCD_LM016L/LCD.c: 165:         }
  4800   001C56  0101               	movlb	1	; () banked
  4801   001C58  4B15               	infsnz	LCD4B_SENDCHAR@i_2509& (0+255),f,b
  4802   001C5A  2B16               	incf	(LCD4B_SENDCHAR@i_2509+1)& (0+255),f,b
  4803   001C5C                     
  4804                           ; BSR set to: 1
  4805   001C5C  BF16               	btfsc	(LCD4B_SENDCHAR@i_2509+1)& (0+255),7,b
  4806   001C5E  EF3A  F00E         	goto	u5771
  4807   001C62  5116               	movf	(LCD4B_SENDCHAR@i_2509+1)& (0+255),w,b
  4808   001C64  E109               	bnz	u5770
  4809   001C66  0E04               	movlw	4
  4810   001C68  5D15               	subwf	LCD4B_SENDCHAR@i_2509& (0+255),w,b
  4811   001C6A  A0D8               	btfss	status,0,c
  4812   001C6C  EF3A  F00E         	goto	u5771
  4813   001C70  EF3C  F00E         	goto	u5770
  4814   001C74                     u5771:
  4815   001C74  EFF8  F00D         	goto	l8801
  4816   001C78                     u5770:
  4817   001C78                     
  4818                           ; BSR set to: 1
  4819                           ;AECUL/LCD_LM016L/LCD.c: 166:         ret = sendenable(lcd);
  4820   001C78  C10E  F10A         	movff	LCD4B_SENDCHAR@lcd,sendenable@lcd
  4821   001C7C  EC6A  F014         	call	_sendenable	;wreg free
  4822   001C80  0101               	movlb	1	; () banked
  4823   001C82  6F12               	movwf	LCD4B_SENDCHAR@ret& (0+255),b
  4824   001C84                     l8811:
  4825                           
  4826                           ; BSR set to: 1
  4827                           ;AECUL/LCD_LM016L/LCD.c: 168:     return ret;
  4828   001C84  5112               	movf	LCD4B_SENDCHAR@ret& (0+255),w,b
  4829   001C86                     
  4830                           ; BSR set to: 1
  4831   001C86  0012               	return		;funcret
  4832   001C88                     __end_of_LCD4B_SENDCHAR:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function _sendenable *****************
  4836 ;; Defined at:
  4837 ;;		line 247 in file "AECUL/LCD_LM016L/LCD.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  lcd             1   10[BANK1 ] PTR const struct .
  4840 ;;		 -> lcd(12), 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  pinEN           1   13[BANK1 ] struct .
  4843 ;;  ret             1   12[BANK1 ] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      unsigned char 
  4846 ;; Registers used:
  4847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4853 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;Total ram usage:        4 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 16
  4860 ;; This function calls:
  4861 ;;		_PINWRITE
  4862 ;; This function is called by:
  4863 ;;		_LCD4B_SENDCMD
  4864 ;;		_LCD4B_SENDCHAR
  4865 ;;		_LCD4B_SENDCHARPOS
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text33
  4870   0028D4                     __ptext33:
  4871                           	callstack 0
  4872   0028D4                     _sendenable:
  4873                           	callstack 12
  4874   0028D4                     
  4875                           ;AECUL/LCD_LM016L/LCD.c: 249:     PinConfig_t pinEN = {.pin = lcd->ENpin, .port=lcd->ENp
      +                          ort,
  4876   0028D4  C08D  F10D         	movff	sendenable@F3731,sendenable@pinEN
  4877   0028D8  0101               	movlb	1	; () banked
  4878   0028DA  510A               	movf	sendenable@lcd& (0+255),w,b
  4879   0028DC  6ED9               	movwf	fsr2l,c
  4880   0028DE  6ADA               	clrf	fsr2h,c
  4881   0028E0  0E03               	movlw	3
  4882   0028E2  26D9               	addwf	fsr2l,f,c
  4883   0028E4  50DF               	movf	indf2,w,c
  4884   0028E6  6F0B               	movwf	??_sendenable& (0+255),b
  4885   0028E8  510D               	movf	sendenable@pinEN& (0+255),w,b
  4886   0028EA  190B               	xorwf	??_sendenable& (0+255),w,b
  4887   0028EC  0BF8               	andlw	-8
  4888   0028EE  190B               	xorwf	??_sendenable& (0+255),w,b
  4889   0028F0  6F0D               	movwf	sendenable@pinEN& (0+255),b
  4890   0028F2                     
  4891                           ; BSR set to: 1
  4892   0028F2  510A               	movf	sendenable@lcd& (0+255),w,b
  4893   0028F4  6ED9               	movwf	fsr2l,c
  4894   0028F6  6ADA               	clrf	fsr2h,c
  4895   0028F8  0E02               	movlw	2
  4896   0028FA  26D9               	addwf	fsr2l,f,c
  4897   0028FC  50DF               	movf	indf2,w,c
  4898   0028FE  6F0B               	movwf	??_sendenable& (0+255),b
  4899   002900  470B               	rlncf	??_sendenable& (0+255),f,b
  4900   002902  470B               	rlncf	??_sendenable& (0+255),f,b
  4901   002904  470B               	rlncf	??_sendenable& (0+255),f,b
  4902   002906  510D               	movf	sendenable@pinEN& (0+255),w,b
  4903   002908  190B               	xorwf	??_sendenable& (0+255),w,b
  4904   00290A  0BC7               	andlw	-57
  4905   00290C  190B               	xorwf	??_sendenable& (0+255),w,b
  4906   00290E  6F0D               	movwf	sendenable@pinEN& (0+255),b
  4907   002910                     
  4908                           ; BSR set to: 1
  4909   002910  9D0D               	bcf	sendenable@pinEN& (0+255),6,b
  4910   002912                     
  4911                           ; BSR set to: 1
  4912   002912  9F0D               	bcf	sendenable@pinEN& (0+255),7,b
  4913   002914                     
  4914                           ; BSR set to: 1
  4915   002914  0E0D               	movlw	low sendenable@pinEN
  4916   002916  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4917   002918  0E01               	movlw	high sendenable@pinEN
  4918   00291A  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4919   00291C  0E01               	movlw	1
  4920   00291E  6F04               	movwf	PINWRITE@log& (0+255),b
  4921   002920  ECF7  F00E         	call	_PINWRITE	;wreg free
  4922   002924                     
  4923                           ;AECUL/LCD_LM016L/LCD.c: 252:     _delay((unsigned long)((10)*(16000000L/4000000.0)));
  4924   002924  0E0D               	movlw	13
  4925   002926                     u6067:
  4926   002926  2EE8               	decfsz	wreg,f,c
  4927   002928  D7FE               	bra	u6067
  4928   00292A  0000               	nop	
  4929   00292C                     
  4930                           ;AECUL/LCD_LM016L/LCD.c: 253:     ret = PINWRITE(&pinEN,0);
  4931   00292C  0E0D               	movlw	low sendenable@pinEN
  4932   00292E  0101               	movlb	1	; () banked
  4933   002930  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4934   002932  0E01               	movlw	high sendenable@pinEN
  4935   002934  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4936   002936  0E00               	movlw	0
  4937   002938  6F04               	movwf	PINWRITE@log& (0+255),b
  4938   00293A  ECF7  F00E         	call	_PINWRITE	;wreg free
  4939   00293E  0101               	movlb	1	; () banked
  4940   002940  6F0C               	movwf	sendenable@ret& (0+255),b
  4941   002942                     
  4942                           ; BSR set to: 1
  4943                           ;AECUL/LCD_LM016L/LCD.c: 254:     return ret;
  4944   002942  510C               	movf	sendenable@ret& (0+255),w,b
  4945   002944                     
  4946                           ; BSR set to: 1
  4947   002944  0012               	return		;funcret
  4948   002946                     __end_of_sendenable:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function _PINWRITE *****************
  4952 ;; Defined at:
  4953 ;;		line 63 in file "AECUL/LCD_LM016L/LCD.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  pinconfig       2    2[BANK1 ] PTR const struct .
  4956 ;;		 -> sendenable@pinEN(1), send4bit@pinobj(1), LCD4B_SENDCHARPOS@pinptr(1), LCD4B_SENDCHAR@pinptr(1), 
  4957 ;;		 -> LCD4B_SENDCMD@pinptr(1), LCD4B_SET@pinptr_2461(1), LCD4B_SET@pinptr(1), 
  4958 ;;  log             1    4[BANK1 ] unsigned char 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  ret             1   37[BANK0 ] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      unsigned char 
  4963 ;; Registers used:
  4964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4970 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;Total ram usage:        9 bytes
  4975 ;; Hardware stack levels used: 1
  4976 ;; Hardware stack levels required when called: 15
  4977 ;; This function calls:
  4978 ;;		_printf
  4979 ;; This function is called by:
  4980 ;;		_PINSTART
  4981 ;;		_LCD4B_SENDCMD
  4982 ;;		_LCD4B_SENDCHAR
  4983 ;;		_sendenable
  4984 ;;		_LCD4B_SENDCHARPOS
  4985 ;;		_send4bit
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text34
  4990   001DEE                     __ptext34:
  4991                           	callstack 0
  4992   001DEE                     _PINWRITE:
  4993                           	callstack 13
  4994   001DEE                     
  4995                           ;AECUL/LCD_LM016L/LCD.c: 64:     uint8_t ret = 0x01;
  4996   001DEE  0E01               	movlw	1
  4997   001DF0  0100               	movlb	0	; () banked
  4998   001DF2  6FFD               	movwf	PINWRITE@ret& (0+255),b
  4999   001DF4                     
  5000                           ; BSR set to: 0
  5001                           ;AECUL/LCD_LM016L/LCD.c: 65:     if((pinconfig->logic > 1) || (pinconfig == ((void*)0)))
      +                          {
  5002   001DF4  C102  FFD9         	movff	PINWRITE@pinconfig,fsr2l
  5003   001DF8  C103  FFDA         	movff	PINWRITE@pinconfig+1,fsr2h
  5004   001DFC  0101               	movlb	1	; () banked
  5005   001DFE  BEDF               	btfsc	indf2,7,c
  5006   001E00  EF04  F00F         	goto	u5631
  5007   001E04  EF08  F00F         	goto	u5630
  5008   001E08                     u5631:
  5009   001E08  6B05               	clrf	??_PINWRITE& (0+255),b
  5010   001E0A  2B05               	incf	??_PINWRITE& (0+255),f,b
  5011   001E0C  EF0A  F00F         	goto	u5638
  5012   001E10                     u5630:
  5013   001E10  0101               	movlb	1	; () banked
  5014   001E12  6B05               	clrf	??_PINWRITE& (0+255),b
  5015   001E14                     u5638:
  5016   001E14  0E02               	movlw	2
  5017   001E16  6105               	cpfslt	??_PINWRITE& (0+255),b
  5018   001E18  EF10  F00F         	goto	u5641
  5019   001E1C  EF12  F00F         	goto	u5640
  5020   001E20                     u5641:
  5021   001E20  EF1B  F00F         	goto	l8675
  5022   001E24                     u5640:
  5023   001E24                     
  5024                           ; BSR set to: 1
  5025   001E24  5102               	movf	PINWRITE@pinconfig& (0+255),w,b
  5026   001E26  1103               	iorwf	(PINWRITE@pinconfig+1)& (0+255),w,b
  5027   001E28  A4D8               	btfss	status,2,c
  5028   001E2A  EF19  F00F         	goto	u5651
  5029   001E2E  EF1B  F00F         	goto	u5650
  5030   001E32                     u5651:
  5031   001E32  EF82  F00F         	goto	l8687
  5032   001E36                     u5650:
  5033   001E36                     l8675:
  5034                           
  5035                           ; BSR set to: 1
  5036                           ;AECUL/LCD_LM016L/LCD.c: 66:         ret = 0x00;
  5037   001E36  0E00               	movlw	0
  5038   001E38  0100               	movlb	0	; () banked
  5039   001E3A  6FFD               	movwf	PINWRITE@ret& (0+255),b
  5040   001E3C                     
  5041                           ; BSR set to: 0
  5042                           ;AECUL/LCD_LM016L/LCD.c: 67:         printf("User Entered invalid Logic or NULL POINTER\
      +                          n");
  5043   001E3C  0E54               	movlw	low STR_11
  5044   001E3E  6FFC               	movwf	printf@fmt& (0+255),b
  5045   001E40  ECA9  F019         	call	_printf	;wreg free
  5046                           
  5047                           ;AECUL/LCD_LM016L/LCD.c: 68:     }
  5048   001E44  EF97  F00F         	goto	l8689
  5049   001E48                     l8679:
  5050                           
  5051                           ; BSR set to: 1
  5052                           ;AECUL/LCD_LM016L/LCD.c: 72:                 (*LAT_Reg[pinconfig->port] &= ~(((uint8_t)1
      +                          ) << pinconfig->pin));
  5053   001E48  C102  FFD9         	movff	PINWRITE@pinconfig,fsr2l
  5054   001E4C  C103  FFDA         	movff	PINWRITE@pinconfig+1,fsr2h
  5055   001E50  30DF               	rrcf	223,w,c
  5056   001E52  32E8               	rrcf	wreg,f,c
  5057   001E54  32E8               	rrcf	wreg,f,c
  5058   001E56  0B07               	andlw	7
  5059   001E58  6F05               	movwf	??_PINWRITE& (0+255),b
  5060   001E5A  0E01               	movlw	1
  5061   001E5C  6F06               	movwf	(??_PINWRITE+1)& (0+255),b
  5062   001E5E  2B05               	incf	??_PINWRITE& (0+255),f,b
  5063   001E60  EF34  F00F         	goto	u5664
  5064   001E64                     u5665:
  5065   001E64  90D8               	bcf	status,0,c
  5066   001E66  3706               	rlcf	(??_PINWRITE+1)& (0+255),f,b
  5067   001E68                     u5664:
  5068   001E68  2F05               	decfsz	??_PINWRITE& (0+255),f,b
  5069   001E6A  EF32  F00F         	goto	u5665
  5070   001E6E  0101               	movlb	1	; () banked
  5071   001E70  5106               	movf	(??_PINWRITE+1)& (0+255),w,b
  5072   001E72  0AFF               	xorlw	255
  5073   001E74  6F07               	movwf	(??_PINWRITE+2)& (0+255),b
  5074   001E76  C102  FFD9         	movff	PINWRITE@pinconfig,fsr2l
  5075   001E7A  C103  FFDA         	movff	PINWRITE@pinconfig+1,fsr2h
  5076   001E7E  50DF               	movf	223,w,c
  5077   001E80  0B07               	andlw	7
  5078   001E82  0D02               	mullw	2
  5079   001E84  50F3               	movf	243,w,c
  5080   001E86  0FB6               	addlw	low _LAT_Reg
  5081   001E88  6ED9               	movwf	fsr2l,c
  5082   001E8A  6ADA               	clrf	fsr2h,c
  5083   001E8C  CFDE F108          	movff	postinc2,??_PINWRITE+3
  5084   001E90  CFDD F109          	movff	postdec2,??_PINWRITE+4
  5085   001E94  C108  FFD9         	movff	??_PINWRITE+3,fsr2l
  5086   001E98  C109  FFDA         	movff	??_PINWRITE+4,fsr2h
  5087   001E9C  5107               	movf	(??_PINWRITE+2)& (0+255),w,b
  5088   001E9E  16DF               	andwf	indf2,f,c
  5089                           
  5090                           ;AECUL/LCD_LM016L/LCD.c: 73:                 break;
  5091   001EA0  EF97  F00F         	goto	l8689
  5092   001EA4                     l8681:
  5093                           
  5094                           ; BSR set to: 1
  5095                           ;AECUL/LCD_LM016L/LCD.c: 75:                 (*LAT_Reg[pinconfig->port] |= (((uint8_t)1)
      +                           << pinconfig->pin));
  5096   001EA4  C102  FFD9         	movff	PINWRITE@pinconfig,fsr2l
  5097   001EA8  C103  FFDA         	movff	PINWRITE@pinconfig+1,fsr2h
  5098   001EAC  30DF               	rrcf	223,w,c
  5099   001EAE  32E8               	rrcf	wreg,f,c
  5100   001EB0  32E8               	rrcf	wreg,f,c
  5101   001EB2  0B07               	andlw	7
  5102   001EB4  6F05               	movwf	??_PINWRITE& (0+255),b
  5103   001EB6  0E01               	movlw	1
  5104   001EB8  6F06               	movwf	(??_PINWRITE+1)& (0+255),b
  5105   001EBA  2B05               	incf	??_PINWRITE& (0+255),f,b
  5106   001EBC  EF62  F00F         	goto	u5674
  5107   001EC0                     u5675:
  5108   001EC0  90D8               	bcf	status,0,c
  5109   001EC2  3706               	rlcf	(??_PINWRITE+1)& (0+255),f,b
  5110   001EC4                     u5674:
  5111   001EC4  2F05               	decfsz	??_PINWRITE& (0+255),f,b
  5112   001EC6  EF60  F00F         	goto	u5675
  5113   001ECA  C102  FFD9         	movff	PINWRITE@pinconfig,fsr2l
  5114   001ECE  C103  FFDA         	movff	PINWRITE@pinconfig+1,fsr2h
  5115   001ED2  50DF               	movf	223,w,c
  5116   001ED4  0B07               	andlw	7
  5117   001ED6  0D02               	mullw	2
  5118   001ED8  50F3               	movf	243,w,c
  5119   001EDA  0FB6               	addlw	low _LAT_Reg
  5120   001EDC  6ED9               	movwf	fsr2l,c
  5121   001EDE  6ADA               	clrf	fsr2h,c
  5122   001EE0  CFDE F107          	movff	postinc2,??_PINWRITE+2
  5123   001EE4  CFDD F108          	movff	postdec2,??_PINWRITE+3
  5124   001EE8  C107  FFD9         	movff	??_PINWRITE+2,fsr2l
  5125   001EEC  C108  FFDA         	movff	??_PINWRITE+3,fsr2h
  5126   001EF0  0101               	movlb	1	; () banked
  5127   001EF2  5106               	movf	(??_PINWRITE+1)& (0+255),w,b
  5128   001EF4  12DF               	iorwf	indf2,f,c
  5129                           
  5130                           ;AECUL/LCD_LM016L/LCD.c: 76:                 break;
  5131   001EF6  EF97  F00F         	goto	l8689
  5132   001EFA                     l8683:
  5133                           
  5134                           ; BSR set to: 1
  5135                           ;AECUL/LCD_LM016L/LCD.c: 78:                 ret = 0x00;
  5136   001EFA  0E00               	movlw	0
  5137   001EFC  0100               	movlb	0	; () banked
  5138   001EFE  6FFD               	movwf	PINWRITE@ret& (0+255),b
  5139                           
  5140                           ;AECUL/LCD_LM016L/LCD.c: 79:                 break;
  5141   001F00  EF97  F00F         	goto	l8689
  5142   001F04                     l8687:
  5143                           
  5144                           ; BSR set to: 1
  5145   001F04  5104               	movf	PINWRITE@log& (0+255),w,b
  5146   001F06  6F05               	movwf	??_PINWRITE& (0+255),b
  5147   001F08  6B06               	clrf	(??_PINWRITE+1)& (0+255),b
  5148                           
  5149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5150                           ; Switch size 1, requested type "simple"
  5151                           ; Number of cases is 1, Range of values is 0 to 0
  5152                           ; switch strategies available:
  5153                           ; Name         Instructions Cycles
  5154                           ; simple_byte            4     3 (average)
  5155                           ;	Chosen strategy is simple_byte
  5156   001F0A  5106               	movf	(??_PINWRITE+1)& (0+255),w,b
  5157   001F0C  0A00               	xorlw	0	; case 0
  5158   001F0E  B4D8               	btfsc	status,2,c
  5159   001F10  EF8C  F00F         	goto	l9379
  5160   001F14  EF7D  F00F         	goto	l8683
  5161   001F18                     l9379:
  5162                           
  5163                           ; BSR set to: 1
  5164                           ; Switch size 1, requested type "simple"
  5165                           ; Number of cases is 2, Range of values is 0 to 1
  5166                           ; switch strategies available:
  5167                           ; Name         Instructions Cycles
  5168                           ; simple_byte            7     4 (average)
  5169                           ;	Chosen strategy is simple_byte
  5170   001F18  5105               	movf	??_PINWRITE& (0+255),w,b
  5171   001F1A  0A00               	xorlw	0	; case 0
  5172   001F1C  B4D8               	btfsc	status,2,c
  5173   001F1E  EF24  F00F         	goto	l8679
  5174   001F22  0A01               	xorlw	1	; case 1
  5175   001F24  B4D8               	btfsc	status,2,c
  5176   001F26  EF52  F00F         	goto	l8681
  5177   001F2A  EF7D  F00F         	goto	l8683
  5178   001F2E                     l8689:
  5179                           
  5180                           ;AECUL/LCD_LM016L/LCD.c: 82:     return ret;
  5181   001F2E  0100               	movlb	0	; () banked
  5182   001F30  51FD               	movf	PINWRITE@ret& (0+255),w,b
  5183   001F32                     
  5184                           ; BSR set to: 0
  5185   001F32  0012               	return		;funcret
  5186   001F34                     __end_of_PINWRITE:
  5187                           	callstack 0
  5188                           
  5189 ;; *************** function _printf *****************
  5190 ;; Defined at:
  5191 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\printf.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  fmt             1   36[BANK0 ] PTR const unsigned char 
  5194 ;;		 -> STR_11(44), STR_10(51), 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  ap              2    0[BANK1 ] PTR void [1]
  5197 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5198 ;;  ret             2    0        int 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  2   36[BANK0 ] int 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5208 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;Total ram usage:        3 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 14
  5215 ;; This function calls:
  5216 ;;		_vfprintf
  5217 ;; This function is called by:
  5218 ;;		_PINSTART
  5219 ;;		_PINWRITE
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text35
  5224   003352                     __ptext35:
  5225                           	callstack 0
  5226   003352                     _printf:
  5227                           	callstack 14
  5228   003352  0EFD               	movlw	low (?_printf+1)
  5229   003354  0101               	movlb	1	; () banked
  5230   003356  6F00               	movwf	printf@ap& (0+255),b
  5231   003358  6B01               	clrf	(printf@ap+1)& (0+255),b
  5232   00335A                     
  5233                           ; BSR set to: 1
  5234   00335A  0E00               	movlw	0
  5235   00335C  0100               	movlb	0	; () banked
  5236   00335E  6FF6               	movwf	vfprintf@fp& (0+255),b
  5237   003360  0E00               	movlw	0
  5238   003362  6FF7               	movwf	(vfprintf@fp+1)& (0+255),b
  5239   003364  C0FC  F0F8         	movff	printf@fmt,vfprintf@fmt
  5240   003368  0E00               	movlw	low printf@ap
  5241   00336A  6FF9               	movwf	vfprintf@ap& (0+255),b
  5242   00336C  0E01               	movlw	high printf@ap
  5243   00336E  6FFA               	movwf	(vfprintf@ap+1)& (0+255),b
  5244   003370  EC2A  F017         	call	_vfprintf	;wreg free
  5245   003374  0012               	return		;funcret
  5246   003376                     __end_of_printf:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _vfprintf *****************
  5250 ;; Defined at:
  5251 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  fp              2   30[BANK0 ] PTR struct _IO_FILE
  5254 ;;		 -> sprintf@f(12), NULL(0), 
  5255 ;;  fmt             1   32[BANK0 ] PTR const unsigned char 
  5256 ;;		 -> STR_11(44), STR_10(51), STR_9(4), STR_8(3), 
  5257 ;;		 -> STR_7(3), STR_3(3), 
  5258 ;;  ap              2   33[BANK0 ] PTR PTR void 
  5259 ;;		 -> printf@ap(2), sprintf@ap(2), 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  cfmt            1   35[BANK0 ] PTR unsigned char 
  5262 ;;		 -> STR_11(44), STR_10(51), STR_9(4), STR_8(3), 
  5263 ;;		 -> STR_7(3), STR_3(3), 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  2   30[BANK0 ] int 
  5266 ;; Registers used:
  5267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5273 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;Total ram usage:        6 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; Hardware stack levels required when called: 13
  5280 ;; This function calls:
  5281 ;;		_vfpfcnvrt
  5282 ;; This function is called by:
  5283 ;;		_sprintf
  5284 ;;		_printf
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text36
  5289   002E54                     __ptext36:
  5290                           	callstack 0
  5291   002E54                     _vfprintf:
  5292                           	callstack 16
  5293   002E54                     
  5294                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5295   002E54  C0F8  F0FB         	movff	vfprintf@fmt,vfprintf@cfmt
  5296                           
  5297                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5298   002E58  EF3B  F017         	goto	l8657
  5299   002E5C                     l8655:
  5300                           
  5301                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5302   002E5C  C0F6  F0E6         	movff	vfprintf@fp,vfpfcnvrt@fp
  5303   002E60  C0F7  F0E7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5304   002E64  0EFB               	movlw	low vfprintf@cfmt
  5305   002E66  0100               	movlb	0	; () banked
  5306   002E68  6FE8               	movwf	vfpfcnvrt@fmt& (0+255),b
  5307   002E6A  C0F9  F0E9         	movff	vfprintf@ap,vfpfcnvrt@ap
  5308   002E6E  C0FA  F0EA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5309   002E72  EC54  F008         	call	_vfpfcnvrt	;wreg free
  5310   002E76                     l8657:
  5311                           
  5312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5313   002E76  C0FB  FFF6         	movff	vfprintf@cfmt,tblptrl
  5314   002E7A                     	if	1	;There is more than 1 active tblptr byte
  5315   002E7A  0E10               	movlw	high __smallconst
  5316   002E7C  6EF7               	movwf	tblptrh,c
  5317   002E7E                     	endif
  5318   002E7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5319   002E7E  6AF8               	clrf	tblptru,c
  5320   002E80                     	endif
  5321   002E80                     	if	0	;tblptru may be non-zero
  5322   002E80                     	endif
  5323   002E80  0008               	tblrd		*
  5324   002E82  50F5               	movf	tablat,w,c
  5325   002E84  0900               	iorlw	0
  5326   002E86  A4D8               	btfss	status,2,c
  5327   002E88  EF48  F017         	goto	u5621
  5328   002E8C  EF4A  F017         	goto	u5620
  5329   002E90                     u5621:
  5330   002E90  EF2E  F017         	goto	l8655
  5331   002E94                     u5620:
  5332   002E94                     
  5333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5334   002E94  0E00               	movlw	0
  5335   002E96  0100               	movlb	0	; () banked
  5336   002E98  6FF7               	movwf	(?_vfprintf+1)& (0+255),b
  5337   002E9A  0E00               	movlw	0
  5338   002E9C  6FF6               	movwf	?_vfprintf& (0+255),b
  5339   002E9E                     
  5340                           ; BSR set to: 0
  5341   002E9E  0012               	return		;funcret
  5342   002EA0                     __end_of_vfprintf:
  5343                           	callstack 0
  5344                           
  5345 ;; *************** function _vfpfcnvrt *****************
  5346 ;; Defined at:
  5347 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
  5350 ;;		 -> sprintf@f(12), NULL(0), 
  5351 ;;  fmt             1   16[BANK0 ] PTR PTR unsigned char 
  5352 ;;		 -> vfprintf@cfmt(1), 
  5353 ;;  ap              2   17[BANK0 ] PTR PTR void 
  5354 ;;		 -> printf@ap(2), sprintf@ap(2), 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  convarg         4   25[BANK0 ] struct .
  5357 ;;  c               1   29[BANK0 ] unsigned char 
  5358 ;;  cp              1   24[BANK0 ] PTR unsigned char 
  5359 ;;		 -> STR_11(44), STR_10(51), STR_9(4), STR_8(3), 
  5360 ;;		 -> STR_7(3), STR_3(3), 
  5361 ;;  done            1   23[BANK0 ] _Bool 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      void 
  5364 ;; Registers used:
  5365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5371 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5372 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5373 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5374 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5375 ;;Total ram usage:       16 bytes
  5376 ;; Hardware stack levels used: 1
  5377 ;; Hardware stack levels required when called: 12
  5378 ;; This function calls:
  5379 ;;		___aldiv
  5380 ;;		___almod
  5381 ;;		___lldiv
  5382 ;;		___llmod
  5383 ;;		_abs
  5384 ;;		_fputc
  5385 ;; This function is called by:
  5386 ;;		_vfprintf
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text37
  5391   0010A8                     __ptext37:
  5392                           	callstack 0
  5393   0010A8                     _vfpfcnvrt:
  5394                           	callstack 16
  5395   0010A8                     
  5396                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5397   0010A8  0100               	movlb	0	; () banked
  5398   0010AA  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5399   0010AC  6ED9               	movwf	fsr2l,c
  5400   0010AE  6ADA               	clrf	fsr2h,c
  5401   0010B0  CFDF FFF6          	movff	indf2,tblptrl
  5402   0010B4                     	if	1	;There is more than 1 active tblptr byte
  5403   0010B4  0E10               	movlw	high __smallconst
  5404   0010B6  6EF7               	movwf	tblptrh,c
  5405   0010B8                     	endif
  5406   0010B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5407   0010B8  6AF8               	clrf	tblptru,c
  5408   0010BA                     	endif
  5409   0010BA                     	if	0	;tblptru may be non-zero
  5410   0010BA                     	endif
  5411   0010BA  0008               	tblrd		*
  5412   0010BC  50F5               	movf	tablat,w,c
  5413   0010BE  0A25               	xorlw	37
  5414   0010C0  A4D8               	btfss	status,2,c
  5415   0010C2  EF65  F008         	goto	u5481
  5416   0010C6  EF67  F008         	goto	u5480
  5417   0010CA                     u5481:
  5418   0010CA  EF9D  F00A         	goto	l8623
  5419   0010CE                     u5480:
  5420   0010CE                     
  5421                           ; BSR set to: 0
  5422                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5423   0010CE  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5424   0010D0  6ED9               	movwf	fsr2l,c
  5425   0010D2  6ADA               	clrf	fsr2h,c
  5426   0010D4  2ADF               	incf	indf2,f,c
  5427   0010D6                     
  5428                           ; BSR set to: 0
  5429                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5430   0010D6  0E00               	movlw	0
  5431   0010D8  6E29               	movwf	(_width+1)^0,c
  5432   0010DA  0E00               	movlw	0
  5433   0010DC  6E28               	movwf	_width^0,c
  5434   0010DE  C028  F02E         	movff	_width,_flags
  5435   0010E2                     
  5436                           ; BSR set to: 0
  5437                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5438   0010E2  682A               	setf	_prec^0,c
  5439   0010E4  682B               	setf	(_prec+1)^0,c
  5440   0010E6                     
  5441                           ; BSR set to: 0
  5442                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5443   0010E6  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5444   0010E8  6ED9               	movwf	fsr2l,c
  5445   0010EA  6ADA               	clrf	fsr2h,c
  5446   0010EC  50DF               	movf	indf2,w,c
  5447   0010EE  6FF0               	movwf	vfpfcnvrt@cp& (0+255),b
  5448   0010F0                     
  5449                           ; BSR set to: 0
  5450                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  5451   0010F0  C0F0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5452   0010F4                     	if	1	;There is more than 1 active tblptr byte
  5453   0010F4  0E10               	movlw	high __smallconst
  5454   0010F6  6EF7               	movwf	tblptrh,c
  5455   0010F8                     	endif
  5456   0010F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5457   0010F8  6AF8               	clrf	tblptru,c
  5458   0010FA                     	endif
  5459   0010FA                     	if	0	;tblptru may be non-zero
  5460   0010FA                     	endif
  5461   0010FA  0008               	tblrd		*
  5462   0010FC  CFF5 F0F5          	movff	tablat,vfpfcnvrt@c
  5463                           
  5464                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  5465   001100  EF8D  F008         	goto	l8547
  5466   001104                     l8539:
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  5470   001104  2BF0               	incf	vfpfcnvrt@cp& (0+255),f,b
  5471                           
  5472                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1316:     break;
  5473   001106  EFAA  F008         	goto	l8549
  5474   00110A                     l8541:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  5478   00110A  0E69               	movlw	105
  5479   00110C  6FF5               	movwf	vfpfcnvrt@c& (0+255),b
  5480                           
  5481                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1351:     break;
  5482   00110E  EFAA  F008         	goto	l8549
  5483   001112                     l8543:
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  5487   001112  0E00               	movlw	0
  5488   001114  6FF5               	movwf	vfpfcnvrt@c& (0+255),b
  5489                           
  5490                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1354:     break;
  5491   001116  EFAA  F008         	goto	l8549
  5492   00111A                     l8547:
  5493                           
  5494                           ; BSR set to: 0
  5495   00111A  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  5496   00111C  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  5497   00111E  6BEC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5498                           
  5499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5500                           ; Switch size 1, requested type "simple"
  5501                           ; Number of cases is 1, Range of values is 0 to 0
  5502                           ; switch strategies available:
  5503                           ; Name         Instructions Cycles
  5504                           ; simple_byte            4     3 (average)
  5505                           ;	Chosen strategy is simple_byte
  5506   001120  51EC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5507   001122  0A00               	xorlw	0	; case 0
  5508   001124  B4D8               	btfsc	status,2,c
  5509   001126  EF97  F008         	goto	l9381
  5510   00112A  EF89  F008         	goto	l8543
  5511   00112E                     l9381:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ; Switch size 1, requested type "simple"
  5515                           ; Number of cases is 4, Range of values is 100 to 117
  5516                           ; switch strategies available:
  5517                           ; Name         Instructions Cycles
  5518                           ; simple_byte           13     7 (average)
  5519                           ;	Chosen strategy is simple_byte
  5520   00112E  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  5521   001130  0A64               	xorlw	100	; case 100
  5522   001132  B4D8               	btfsc	status,2,c
  5523   001134  EF85  F008         	goto	l8541
  5524   001138  0A0D               	xorlw	13	; case 105
  5525   00113A  B4D8               	btfsc	status,2,c
  5526   00113C  EF85  F008         	goto	l8541
  5527   001140  0A05               	xorlw	5	; case 108
  5528   001142  B4D8               	btfsc	status,2,c
  5529   001144  EF82  F008         	goto	l8539
  5530   001148  0A19               	xorlw	25	; case 117
  5531   00114A  B4D8               	btfsc	status,2,c
  5532   00114C  EF85  F008         	goto	l8541
  5533   001150  EF89  F008         	goto	l8543
  5534   001154                     l8549:
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5538   001154  C0F0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5539   001158                     	if	1	;There is more than 1 active tblptr byte
  5540   001158  0E10               	movlw	high __smallconst
  5541   00115A  6EF7               	movwf	tblptrh,c
  5542   00115C                     	endif
  5543   00115C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5544   00115C  6AF8               	clrf	tblptru,c
  5545   00115E                     	endif
  5546   00115E                     	if	0	;tblptru may be non-zero
  5547   00115E                     	endif
  5548   00115E  0008               	tblrd		*
  5549   001160  50F5               	movf	tablat,w,c
  5550   001162  0A64               	xorlw	100
  5551   001164  B4D8               	btfsc	status,2,c
  5552   001166  EFB7  F008         	goto	u5491
  5553   00116A  EFB9  F008         	goto	u5490
  5554   00116E                     u5491:
  5555   00116E  EFFF  F008         	goto	l8559
  5556   001172                     u5490:
  5557   001172                     
  5558                           ; BSR set to: 0
  5559   001172  C0F0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5560   001176                     	if	1	;There is more than 1 active tblptr byte
  5561   001176  0E10               	movlw	high __smallconst
  5562   001178  6EF7               	movwf	tblptrh,c
  5563   00117A                     	endif
  5564   00117A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5565   00117A  6AF8               	clrf	tblptru,c
  5566   00117C                     	endif
  5567   00117C                     	if	0	;tblptru may be non-zero
  5568   00117C                     	endif
  5569   00117C  0008               	tblrd		*
  5570   00117E  50F5               	movf	tablat,w,c
  5571   001180  0A69               	xorlw	105
  5572   001182  A4D8               	btfss	status,2,c
  5573   001184  EFC6  F008         	goto	u5501
  5574   001188  EFC8  F008         	goto	u5500
  5575   00118C                     u5501:
  5576   00118C  EFAF  F009         	goto	l8587
  5577   001190                     u5500:
  5578   001190  EFFF  F008         	goto	l8559
  5579   001194                     l8553:
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5583   001194  C0E9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5584   001198  C0EA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5585   00119C  CFDF F0EB          	movff	indf2,??_vfpfcnvrt
  5586   0011A0  0E02               	movlw	2
  5587   0011A2  26DE               	addwf	postinc2,f,c
  5588   0011A4  CFDF F0EC          	movff	indf2,??_vfpfcnvrt+1
  5589   0011A8  0E00               	movlw	0
  5590   0011AA  22DD               	addwfc	postdec2,f,c
  5591   0011AC  C0EB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5592   0011B0  C0EC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5593   0011B4  CFDE F0F1          	movff	postinc2,vfpfcnvrt@convarg
  5594   0011B8  CFDD F0F2          	movff	postdec2,vfpfcnvrt@convarg+1
  5595   0011BC  0E00               	movlw	0
  5596   0011BE  BFF2               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  5597   0011C0  0EFF               	movlw	-1
  5598   0011C2  6FF3               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  5599   0011C4  6FF4               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  5600                           
  5601                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1366:      break;
  5602   0011C6  EF14  F009         	goto	l8561
  5603   0011CA                     l8555:
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  5607   0011CA  C0E9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5608   0011CE  C0EA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5609   0011D2  CFDF F0EB          	movff	indf2,??_vfpfcnvrt
  5610   0011D6  0E04               	movlw	4
  5611   0011D8  26DE               	addwf	postinc2,f,c
  5612   0011DA  CFDF F0EC          	movff	indf2,??_vfpfcnvrt+1
  5613   0011DE  0E00               	movlw	0
  5614   0011E0  22DD               	addwfc	postdec2,f,c
  5615   0011E2  C0EB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5616   0011E6  C0EC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5617   0011EA  CFDE F0F1          	movff	postinc2,vfpfcnvrt@convarg
  5618   0011EE  CFDE F0F2          	movff	postinc2,vfpfcnvrt@convarg+1
  5619   0011F2  CFDE F0F3          	movff	postinc2,vfpfcnvrt@convarg+2
  5620   0011F6  CFDE F0F4          	movff	postinc2,vfpfcnvrt@convarg+3
  5621                           
  5622                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1380:      break;
  5623   0011FA  EF14  F009         	goto	l8561
  5624   0011FE                     l8559:
  5625                           
  5626                           ; BSR set to: 0
  5627   0011FE  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  5628   001200  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  5629   001202  6BEC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5630                           
  5631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5632                           ; Switch size 1, requested type "simple"
  5633                           ; Number of cases is 1, Range of values is 0 to 0
  5634                           ; switch strategies available:
  5635                           ; Name         Instructions Cycles
  5636                           ; simple_byte            4     3 (average)
  5637                           ;	Chosen strategy is simple_byte
  5638   001204  51EC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5639   001206  0A00               	xorlw	0	; case 0
  5640   001208  B4D8               	btfsc	status,2,c
  5641   00120A  EF09  F009         	goto	l9383
  5642   00120E  EF14  F009         	goto	l8561
  5643   001212                     l9383:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ; Switch size 1, requested type "simple"
  5647                           ; Number of cases is 2, Range of values is 105 to 108
  5648                           ; switch strategies available:
  5649                           ; Name         Instructions Cycles
  5650                           ; simple_byte            7     4 (average)
  5651                           ;	Chosen strategy is simple_byte
  5652   001212  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  5653   001214  0A69               	xorlw	105	; case 105
  5654   001216  B4D8               	btfsc	status,2,c
  5655   001218  EFCA  F008         	goto	l8553
  5656   00121C  0A05               	xorlw	5	; case 108
  5657   00121E  B4D8               	btfsc	status,2,c
  5658   001220  EFE5  F008         	goto	l8555
  5659   001224  EF14  F009         	goto	l8561
  5660   001228                     l8561:
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  5664   001228  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5665   00122A  6ED9               	movwf	fsr2l,c
  5666   00122C  6ADA               	clrf	fsr2h,c
  5667   00122E  29F0               	incf	vfpfcnvrt@cp& (0+255),w,b
  5668   001230  6EDF               	movwf	indf2,c
  5669   001232                     
  5670                           ; BSR set to: 0
  5671                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  5672   001232  0E20               	movlw	32
  5673   001234  6FF5               	movwf	vfpfcnvrt@c& (0+255),b
  5674   001236                     
  5675                           ; BSR set to: 0
  5676                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  5677   001236  BFF4               	btfsc	(vfpfcnvrt@convarg+3)& (0+255),7,b
  5678   001238  EF20  F009         	goto	u5511
  5679   00123C  EF23  F009         	goto	u5510
  5680   001240                     u5511:
  5681   001240  0E01               	movlw	1
  5682   001242  EF24  F009         	goto	u5520
  5683   001246                     u5510:
  5684   001246  0E00               	movlw	0
  5685   001248                     u5520:
  5686   001248  6FEF               	movwf	vfpfcnvrt@done& (0+255),b
  5687   00124A                     l8567:
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  5691   00124A  07F5               	decf	vfpfcnvrt@c& (0+255),f,b
  5692   00124C  0E24               	movlw	low _dbuf
  5693   00124E  25F5               	addwf	vfpfcnvrt@c& (0+255),w,b
  5694   001250  6ED9               	movwf	fsr2l,c
  5695   001252  6ADA               	clrf	fsr2h,c
  5696   001254  0E01               	movlw	high _dbuf
  5697   001256  22DA               	addwfc	fsr2h,f,c
  5698   001258  C0F1  F0D8         	movff	vfpfcnvrt@convarg,___almod@dividend
  5699   00125C  C0F2  F0D9         	movff	vfpfcnvrt@convarg+1,___almod@dividend+1
  5700   001260  C0F3  F0DA         	movff	vfpfcnvrt@convarg+2,___almod@dividend+2
  5701   001264  C0F4  F0DB         	movff	vfpfcnvrt@convarg+3,___almod@dividend+3
  5702   001268  0E0A               	movlw	10
  5703   00126A  6FDC               	movwf	___almod@divisor& (0+255),b
  5704   00126C  0E00               	movlw	0
  5705   00126E  6FDD               	movwf	(___almod@divisor+1)& (0+255),b
  5706   001270  0E00               	movlw	0
  5707   001272  6FDE               	movwf	(___almod@divisor+2)& (0+255),b
  5708   001274  0E00               	movlw	0
  5709   001276  6FDF               	movwf	(___almod@divisor+3)& (0+255),b
  5710   001278  ECAD  F010         	call	___almod	;wreg free
  5711   00127C  C0D8  F0E2         	movff	?___almod,abs@a
  5712   001280  C0D9  F0E3         	movff	?___almod+1,abs@a+1
  5713   001284  EC17  F018         	call	_abs	;wreg free
  5714   001288  0100               	movlb	0	; () banked
  5715   00128A  51E2               	movf	?_abs& (0+255),w,b
  5716   00128C  0F30               	addlw	48
  5717   00128E  6EDF               	movwf	indf2,c
  5718   001290                     
  5719                           ; BSR set to: 0
  5720                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  5721   001290  C0F1  F0D8         	movff	vfpfcnvrt@convarg,___aldiv@dividend
  5722   001294  C0F2  F0D9         	movff	vfpfcnvrt@convarg+1,___aldiv@dividend+1
  5723   001298  C0F3  F0DA         	movff	vfpfcnvrt@convarg+2,___aldiv@dividend+2
  5724   00129C  C0F4  F0DB         	movff	vfpfcnvrt@convarg+3,___aldiv@dividend+3
  5725   0012A0  0E0A               	movlw	10
  5726   0012A2  6FDC               	movwf	___aldiv@divisor& (0+255),b
  5727   0012A4  0E00               	movlw	0
  5728   0012A6  6FDD               	movwf	(___aldiv@divisor+1)& (0+255),b
  5729   0012A8  0E00               	movlw	0
  5730   0012AA  6FDE               	movwf	(___aldiv@divisor+2)& (0+255),b
  5731   0012AC  0E00               	movlw	0
  5732   0012AE  6FDF               	movwf	(___aldiv@divisor+3)& (0+255),b
  5733   0012B0  EC26  F010         	call	___aldiv	;wreg free
  5734   0012B4  C0D8  F0F1         	movff	?___aldiv,vfpfcnvrt@convarg
  5735   0012B8  C0D9  F0F2         	movff	?___aldiv+1,vfpfcnvrt@convarg+1
  5736   0012BC  C0DA  F0F3         	movff	?___aldiv+2,vfpfcnvrt@convarg+2
  5737   0012C0  C0DB  F0F4         	movff	?___aldiv+3,vfpfcnvrt@convarg+3
  5738   0012C4                     
  5739                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  5740   0012C4  0100               	movlb	0	; () banked
  5741   0012C6  51F1               	movf	vfpfcnvrt@convarg& (0+255),w,b
  5742   0012C8  11F2               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  5743   0012CA  11F3               	iorwf	(vfpfcnvrt@convarg+2)& (0+255),w,b
  5744   0012CC  11F4               	iorwf	(vfpfcnvrt@convarg+3)& (0+255),w,b
  5745   0012CE  B4D8               	btfsc	status,2,c
  5746   0012D0  EF6C  F009         	goto	u5531
  5747   0012D4  EF6E  F009         	goto	u5530
  5748   0012D8                     u5531:
  5749   0012D8  EF76  F009         	goto	l8575
  5750   0012DC                     u5530:
  5751   0012DC                     
  5752                           ; BSR set to: 0
  5753   0012DC  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  5754   0012DE  A4D8               	btfss	status,2,c
  5755   0012E0  EF74  F009         	goto	u5541
  5756   0012E4  EF76  F009         	goto	u5540
  5757   0012E8                     u5541:
  5758   0012E8  EF25  F009         	goto	l8567
  5759   0012EC                     u5540:
  5760   0012EC                     l8575:
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  5764   0012EC  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  5765   0012EE  B4D8               	btfsc	status,2,c
  5766   0012F0  EF7C  F009         	goto	u5551
  5767   0012F4  EF7E  F009         	goto	u5550
  5768   0012F8                     u5551:
  5769   0012F8  EFA4  F009         	goto	l8585
  5770   0012FC                     u5550:
  5771   0012FC                     
  5772                           ; BSR set to: 0
  5773   0012FC  51EF               	movf	vfpfcnvrt@done& (0+255),w,b
  5774   0012FE  B4D8               	btfsc	status,2,c
  5775   001300  EF84  F009         	goto	u5561
  5776   001304  EF86  F009         	goto	u5560
  5777   001308                     u5561:
  5778   001308  EFA4  F009         	goto	l8585
  5779   00130C                     u5560:
  5780   00130C                     
  5781                           ; BSR set to: 0
  5782                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  5783   00130C  07F5               	decf	vfpfcnvrt@c& (0+255),f,b
  5784   00130E  0E24               	movlw	low _dbuf
  5785   001310  25F5               	addwf	vfpfcnvrt@c& (0+255),w,b
  5786   001312  6ED9               	movwf	fsr2l,c
  5787   001314  6ADA               	clrf	fsr2h,c
  5788   001316  0E01               	movlw	high _dbuf
  5789   001318  22DA               	addwfc	fsr2h,f,c
  5790   00131A  0E2D               	movlw	45
  5791   00131C  6EDF               	movwf	indf2,c
  5792   00131E  EFA4  F009         	goto	l8585
  5793   001322                     l8581:
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  5797   001322  0E24               	movlw	low _dbuf
  5798   001324  25F5               	addwf	vfpfcnvrt@c& (0+255),w,b
  5799   001326  6ED9               	movwf	fsr2l,c
  5800   001328  6ADA               	clrf	fsr2h,c
  5801   00132A  0E01               	movlw	high _dbuf
  5802   00132C  22DA               	addwfc	fsr2h,f,c
  5803   00132E  50DF               	movf	indf2,w,c
  5804   001330  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  5805   001332  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  5806   001334  6FD8               	movwf	fputc@c& (0+255),b
  5807   001336  6BD9               	clrf	(fputc@c+1)& (0+255),b
  5808   001338  C0E6  F0DA         	movff	vfpfcnvrt@fp,fputc@fp
  5809   00133C  C0E7  F0DB         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5810   001340  EC86  F011         	call	_fputc	;wreg free
  5811   001344  0100               	movlb	0	; () banked
  5812   001346  2BF5               	incf	vfpfcnvrt@c& (0+255),f,b
  5813   001348                     l8585:
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  5817   001348  0E20               	movlw	32
  5818   00134A  19F5               	xorwf	vfpfcnvrt@c& (0+255),w,b
  5819   00134C  A4D8               	btfss	status,2,c
  5820   00134E  EFAB  F009         	goto	u5571
  5821   001352  EFAD  F009         	goto	u5570
  5822   001356                     u5571:
  5823   001356  EF91  F009         	goto	l8581
  5824   00135A                     u5570:
  5825   00135A  EFB1  F00A         	goto	l1925
  5826   00135E                     l8587:
  5827                           
  5828                           ; BSR set to: 0
  5829   00135E  C0F0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5830   001362                     	if	1	;There is more than 1 active tblptr byte
  5831   001362  0E10               	movlw	high __smallconst
  5832   001364  6EF7               	movwf	tblptrh,c
  5833   001366                     	endif
  5834   001366                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5835   001366  6AF8               	clrf	tblptru,c
  5836   001368                     	endif
  5837   001368                     	if	0	;tblptru may be non-zero
  5838   001368                     	endif
  5839   001368  0008               	tblrd		*
  5840   00136A  50F5               	movf	tablat,w,c
  5841   00136C  0A75               	xorlw	117
  5842   00136E  A4D8               	btfss	status,2,c
  5843   001370  EFBC  F009         	goto	u5581
  5844   001374  EFBE  F009         	goto	u5580
  5845   001378                     u5581:
  5846   001378  EF96  F00A         	goto	l8619
  5847   00137C                     u5580:
  5848   00137C  EFF6  F009         	goto	l8595
  5849   001380                     l8589:
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  5853   001380  C0E9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5854   001384  C0EA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5855   001388  CFDF F0EB          	movff	indf2,??_vfpfcnvrt
  5856   00138C  0E02               	movlw	2
  5857   00138E  26DE               	addwf	postinc2,f,c
  5858   001390  CFDF F0EC          	movff	indf2,??_vfpfcnvrt+1
  5859   001394  0E00               	movlw	0
  5860   001396  22DD               	addwfc	postdec2,f,c
  5861   001398  C0EB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5862   00139C  C0EC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5863   0013A0  CFDE F0ED          	movff	postinc2,??_vfpfcnvrt+2
  5864   0013A4  CFDD F0EE          	movff	postdec2,??_vfpfcnvrt+3
  5865   0013A8  C0ED  F0F1         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  5866   0013AC  C0EE  F0F2         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  5867   0013B0  6BF3               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  5868   0013B2  6BF4               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  5869                           
  5870                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1457:      break;
  5871   0013B4  EF0B  F00A         	goto	l8597
  5872   0013B8                     l8591:
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  5876   0013B8  C0E9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5877   0013BC  C0EA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5878   0013C0  CFDF F0EB          	movff	indf2,??_vfpfcnvrt
  5879   0013C4  0E04               	movlw	4
  5880   0013C6  26DE               	addwf	postinc2,f,c
  5881   0013C8  CFDF F0EC          	movff	indf2,??_vfpfcnvrt+1
  5882   0013CC  0E00               	movlw	0
  5883   0013CE  22DD               	addwfc	postdec2,f,c
  5884   0013D0  C0EB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5885   0013D4  C0EC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5886   0013D8  CFDE F0F1          	movff	postinc2,vfpfcnvrt@convarg
  5887   0013DC  CFDE F0F2          	movff	postinc2,vfpfcnvrt@convarg+1
  5888   0013E0  CFDE F0F3          	movff	postinc2,vfpfcnvrt@convarg+2
  5889   0013E4  CFDE F0F4          	movff	postinc2,vfpfcnvrt@convarg+3
  5890                           
  5891                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1471:      break;
  5892   0013E8  EF0B  F00A         	goto	l8597
  5893   0013EC                     l8595:
  5894                           
  5895                           ; BSR set to: 0
  5896   0013EC  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  5897   0013EE  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  5898   0013F0  6BEC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5899                           
  5900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5901                           ; Switch size 1, requested type "simple"
  5902                           ; Number of cases is 1, Range of values is 0 to 0
  5903                           ; switch strategies available:
  5904                           ; Name         Instructions Cycles
  5905                           ; simple_byte            4     3 (average)
  5906                           ;	Chosen strategy is simple_byte
  5907   0013F2  51EC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5908   0013F4  0A00               	xorlw	0	; case 0
  5909   0013F6  B4D8               	btfsc	status,2,c
  5910   0013F8  EF00  F00A         	goto	l9385
  5911   0013FC  EF0B  F00A         	goto	l8597
  5912   001400                     l9385:
  5913                           
  5914                           ; BSR set to: 0
  5915                           ; Switch size 1, requested type "simple"
  5916                           ; Number of cases is 2, Range of values is 105 to 108
  5917                           ; switch strategies available:
  5918                           ; Name         Instructions Cycles
  5919                           ; simple_byte            7     4 (average)
  5920                           ;	Chosen strategy is simple_byte
  5921   001400  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  5922   001402  0A69               	xorlw	105	; case 105
  5923   001404  B4D8               	btfsc	status,2,c
  5924   001406  EFC0  F009         	goto	l8589
  5925   00140A  0A05               	xorlw	5	; case 108
  5926   00140C  B4D8               	btfsc	status,2,c
  5927   00140E  EFDC  F009         	goto	l8591
  5928   001412  EF0B  F00A         	goto	l8597
  5929   001416                     l8597:
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  5933   001416  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5934   001418  6ED9               	movwf	fsr2l,c
  5935   00141A  6ADA               	clrf	fsr2h,c
  5936   00141C  29F0               	incf	vfpfcnvrt@cp& (0+255),w,b
  5937   00141E  6EDF               	movwf	indf2,c
  5938                           
  5939                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  5940   001420  EF7F  F00A         	goto	l8617
  5941   001424                     l8599:
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  5945   001424  0E20               	movlw	32
  5946   001426  6FF5               	movwf	vfpfcnvrt@c& (0+255),b
  5947   001428                     l8601:
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  5951   001428  07F5               	decf	vfpfcnvrt@c& (0+255),f,b
  5952   00142A  0E24               	movlw	low _dbuf
  5953   00142C  25F5               	addwf	vfpfcnvrt@c& (0+255),w,b
  5954   00142E  6ED9               	movwf	fsr2l,c
  5955   001430  6ADA               	clrf	fsr2h,c
  5956   001432  0E01               	movlw	high _dbuf
  5957   001434  22DA               	addwfc	fsr2h,f,c
  5958   001436  C0F1  F0D8         	movff	vfpfcnvrt@convarg,___llmod@dividend
  5959   00143A  C0F2  F0D9         	movff	vfpfcnvrt@convarg+1,___llmod@dividend+1
  5960   00143E  C0F3  F0DA         	movff	vfpfcnvrt@convarg+2,___llmod@dividend+2
  5961   001442  C0F4  F0DB         	movff	vfpfcnvrt@convarg+3,___llmod@dividend+3
  5962   001446  0E0A               	movlw	10
  5963   001448  6FDC               	movwf	___llmod@divisor& (0+255),b
  5964   00144A  0E00               	movlw	0
  5965   00144C  6FDD               	movwf	(___llmod@divisor+1)& (0+255),b
  5966   00144E  0E00               	movlw	0
  5967   001450  6FDE               	movwf	(___llmod@divisor+2)& (0+255),b
  5968   001452  0E00               	movlw	0
  5969   001454  6FDF               	movwf	(___llmod@divisor+3)& (0+255),b
  5970   001456  EC2E  F013         	call	___llmod	;wreg free
  5971   00145A  0100               	movlb	0	; () banked
  5972   00145C  51D8               	movf	?___llmod& (0+255),w,b
  5973   00145E  0F30               	addlw	48
  5974   001460  6EDF               	movwf	indf2,c
  5975   001462                     
  5976                           ; BSR set to: 0
  5977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  5978   001462  C0F1  F0D8         	movff	vfpfcnvrt@convarg,___lldiv@dividend
  5979   001466  C0F2  F0D9         	movff	vfpfcnvrt@convarg+1,___lldiv@dividend+1
  5980   00146A  C0F3  F0DA         	movff	vfpfcnvrt@convarg+2,___lldiv@dividend+2
  5981   00146E  C0F4  F0DB         	movff	vfpfcnvrt@convarg+3,___lldiv@dividend+3
  5982   001472  0E0A               	movlw	10
  5983   001474  6FDC               	movwf	___lldiv@divisor& (0+255),b
  5984   001476  0E00               	movlw	0
  5985   001478  6FDD               	movwf	(___lldiv@divisor+1)& (0+255),b
  5986   00147A  0E00               	movlw	0
  5987   00147C  6FDE               	movwf	(___lldiv@divisor+2)& (0+255),b
  5988   00147E  0E00               	movlw	0
  5989   001480  6FDF               	movwf	(___lldiv@divisor+3)& (0+255),b
  5990   001482  EC37  F012         	call	___lldiv	;wreg free
  5991   001486  C0D8  F0F1         	movff	?___lldiv,vfpfcnvrt@convarg
  5992   00148A  C0D9  F0F2         	movff	?___lldiv+1,vfpfcnvrt@convarg+1
  5993   00148E  C0DA  F0F3         	movff	?___lldiv+2,vfpfcnvrt@convarg+2
  5994   001492  C0DB  F0F4         	movff	?___lldiv+3,vfpfcnvrt@convarg+3
  5995   001496                     
  5996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  5997   001496  0100               	movlb	0	; () banked
  5998   001498  51F1               	movf	vfpfcnvrt@convarg& (0+255),w,b
  5999   00149A  11F2               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  6000   00149C  11F3               	iorwf	(vfpfcnvrt@convarg+2)& (0+255),w,b
  6001   00149E  11F4               	iorwf	(vfpfcnvrt@convarg+3)& (0+255),w,b
  6002   0014A0  B4D8               	btfsc	status,2,c
  6003   0014A2  EF55  F00A         	goto	u5591
  6004   0014A6  EF57  F00A         	goto	u5590
  6005   0014AA                     u5591:
  6006   0014AA  EF74  F00A         	goto	l8613
  6007   0014AE                     u5590:
  6008   0014AE                     
  6009                           ; BSR set to: 0
  6010   0014AE  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  6011   0014B0  A4D8               	btfss	status,2,c
  6012   0014B2  EF5D  F00A         	goto	u5601
  6013   0014B6  EF5F  F00A         	goto	u5600
  6014   0014BA                     u5601:
  6015   0014BA  EF14  F00A         	goto	l8601
  6016   0014BE                     u5600:
  6017   0014BE  EF74  F00A         	goto	l8613
  6018   0014C2                     l8609:
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  6022   0014C2  0E24               	movlw	low _dbuf
  6023   0014C4  25F5               	addwf	vfpfcnvrt@c& (0+255),w,b
  6024   0014C6  6ED9               	movwf	fsr2l,c
  6025   0014C8  6ADA               	clrf	fsr2h,c
  6026   0014CA  0E01               	movlw	high _dbuf
  6027   0014CC  22DA               	addwfc	fsr2h,f,c
  6028   0014CE  50DF               	movf	indf2,w,c
  6029   0014D0  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  6030   0014D2  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  6031   0014D4  6FD8               	movwf	fputc@c& (0+255),b
  6032   0014D6  6BD9               	clrf	(fputc@c+1)& (0+255),b
  6033   0014D8  C0E6  F0DA         	movff	vfpfcnvrt@fp,fputc@fp
  6034   0014DC  C0E7  F0DB         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6035   0014E0  EC86  F011         	call	_fputc	;wreg free
  6036   0014E4  0100               	movlb	0	; () banked
  6037   0014E6  2BF5               	incf	vfpfcnvrt@c& (0+255),f,b
  6038   0014E8                     l8613:
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  6042   0014E8  0E20               	movlw	32
  6043   0014EA  19F5               	xorwf	vfpfcnvrt@c& (0+255),w,b
  6044   0014EC  A4D8               	btfss	status,2,c
  6045   0014EE  EF7B  F00A         	goto	u5611
  6046   0014F2  EF7D  F00A         	goto	u5610
  6047   0014F6                     u5611:
  6048   0014F6  EF61  F00A         	goto	l8609
  6049   0014FA                     u5610:
  6050   0014FA  EFB1  F00A         	goto	l1925
  6051   0014FE                     l8617:
  6052                           
  6053                           ; BSR set to: 0
  6054   0014FE  C0F0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6055   001502                     	if	1	;There is more than 1 active tblptr byte
  6056   001502  0E10               	movlw	high __smallconst
  6057   001504  6EF7               	movwf	tblptrh,c
  6058   001506                     	endif
  6059   001506                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6060   001506  6AF8               	clrf	tblptru,c
  6061   001508                     	endif
  6062   001508                     	if	0	;tblptru may be non-zero
  6063   001508                     	endif
  6064   001508  0008               	tblrd		*
  6065   00150A  50F5               	movf	tablat,w,c
  6066   00150C  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  6067   00150E  6BEC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6068                           
  6069                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6070                           ; Switch size 1, requested type "simple"
  6071                           ; Number of cases is 1, Range of values is 0 to 0
  6072                           ; switch strategies available:
  6073                           ; Name         Instructions Cycles
  6074                           ; simple_byte            4     3 (average)
  6075                           ;	Chosen strategy is simple_byte
  6076   001510  51EC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6077   001512  0A00               	xorlw	0	; case 0
  6078   001514  B4D8               	btfsc	status,2,c
  6079   001516  EF8F  F00A         	goto	l9387
  6080   00151A  EF96  F00A         	goto	l8619
  6081   00151E                     l9387:
  6082                           
  6083                           ; BSR set to: 0
  6084                           ; Switch size 1, requested type "simple"
  6085                           ; Number of cases is 1, Range of values is 117 to 117
  6086                           ; switch strategies available:
  6087                           ; Name         Instructions Cycles
  6088                           ; simple_byte            4     3 (average)
  6089                           ;	Chosen strategy is simple_byte
  6090   00151E  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  6091   001520  0A75               	xorlw	117	; case 117
  6092   001522  B4D8               	btfsc	status,2,c
  6093   001524  EF12  F00A         	goto	l8599
  6094   001528  EF96  F00A         	goto	l8619
  6095   00152C                     l8619:
  6096                           
  6097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6098   00152C  0100               	movlb	0	; () banked
  6099   00152E  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6100   001530  6ED9               	movwf	fsr2l,c
  6101   001532  6ADA               	clrf	fsr2h,c
  6102   001534  2ADF               	incf	indf2,f,c
  6103   001536  EFB1  F00A         	goto	l1925
  6104   00153A                     l8623:
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6108   00153A  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6109   00153C  6ED9               	movwf	fsr2l,c
  6110   00153E  6ADA               	clrf	fsr2h,c
  6111   001540  CFDF FFF6          	movff	indf2,tblptrl
  6112   001544                     	if	1	;There is more than 1 active tblptr byte
  6113   001544  0E10               	movlw	high __smallconst
  6114   001546  6EF7               	movwf	tblptrh,c
  6115   001548                     	endif
  6116   001548                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6117   001548  6AF8               	clrf	tblptru,c
  6118   00154A                     	endif
  6119   00154A                     	if	0	;tblptru may be non-zero
  6120   00154A                     	endif
  6121   00154A  0008               	tblrd		*
  6122   00154C  50F5               	movf	tablat,w,c
  6123   00154E  6FD8               	movwf	fputc@c& (0+255),b
  6124   001550  6BD9               	clrf	(fputc@c+1)& (0+255),b
  6125   001552  C0E6  F0DA         	movff	vfpfcnvrt@fp,fputc@fp
  6126   001556  C0E7  F0DB         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6127   00155A  EC86  F011         	call	_fputc	;wreg free
  6128   00155E  EF96  F00A         	goto	l8619
  6129   001562                     l1925:
  6130                           
  6131                           ; BSR set to: 0
  6132   001562  0012               	return		;funcret
  6133   001564                     __end_of_vfpfcnvrt:
  6134                           	callstack 0
  6135                           
  6136 ;; *************** function _fputc *****************
  6137 ;; Defined at:
  6138 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  c               2    0[BANK0 ] int 
  6141 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  6142 ;;		 -> sprintf@f(12), NULL(0), 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  2    0[BANK0 ] int 
  6147 ;; Registers used:
  6148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6156 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;Total ram usage:        9 bytes
  6159 ;; Hardware stack levels used: 1
  6160 ;; Hardware stack levels required when called: 11
  6161 ;; This function calls:
  6162 ;;		_putch
  6163 ;; This function is called by:
  6164 ;;		_vfpfcnvrt
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text38
  6169   00230C                     __ptext38:
  6170                           	callstack 0
  6171   00230C                     _fputc:
  6172                           	callstack 16
  6173   00230C  0100               	movlb	0	; () banked
  6174   00230E  51DA               	movf	fputc@fp& (0+255),w,b
  6175   002310  11DB               	iorwf	(fputc@fp+1)& (0+255),w,b
  6176   002312  B4D8               	btfsc	status,2,c
  6177   002314  EF8E  F011         	goto	u5431
  6178   002318  EF90  F011         	goto	u5430
  6179   00231C                     u5431:
  6180   00231C  EF99  F011         	goto	l8513
  6181   002320                     u5430:
  6182   002320                     
  6183                           ; BSR set to: 0
  6184   002320  51DA               	movf	fputc@fp& (0+255),w,b
  6185   002322  11DB               	iorwf	(fputc@fp+1)& (0+255),w,b
  6186   002324  A4D8               	btfss	status,2,c
  6187   002326  EF97  F011         	goto	u5441
  6188   00232A  EF99  F011         	goto	u5440
  6189   00232E                     u5441:
  6190   00232E  EF9E  F011         	goto	l8515
  6191   002332                     u5440:
  6192   002332                     l8513:
  6193                           
  6194                           ; BSR set to: 0
  6195   002332  51D8               	movf	fputc@c& (0+255),w,b
  6196   002334  EC00  F01B         	call	_putch
  6197   002338  EFE3  F011         	goto	l1967
  6198   00233C                     l8515:
  6199                           
  6200                           ; BSR set to: 0
  6201   00233C  EE20 F00A          	lfsr	2,10
  6202   002340  51DA               	movf	fputc@fp& (0+255),w,b
  6203   002342  26D9               	addwf	fsr2l,f,c
  6204   002344  51DB               	movf	(fputc@fp+1)& (0+255),w,b
  6205   002346  22DA               	addwfc	fsr2h,f,c
  6206   002348  50DE               	movf	postinc2,w,c
  6207   00234A  10DE               	iorwf	postinc2,w,c
  6208   00234C  B4D8               	btfsc	status,2,c
  6209   00234E  EFAB  F011         	goto	u5451
  6210   002352  EFAD  F011         	goto	u5450
  6211   002356                     u5451:
  6212   002356  EFC8  F011         	goto	l8519
  6213   00235A                     u5450:
  6214   00235A                     
  6215                           ; BSR set to: 0
  6216   00235A  EE20 F00A          	lfsr	2,10
  6217   00235E  51DA               	movf	fputc@fp& (0+255),w,b
  6218   002360  26D9               	addwf	fsr2l,f,c
  6219   002362  51DB               	movf	(fputc@fp+1)& (0+255),w,b
  6220   002364  22DA               	addwfc	fsr2h,f,c
  6221   002366  EE10 F003          	lfsr	1,3
  6222   00236A  51DA               	movf	fputc@fp& (0+255),w,b
  6223   00236C  26E1               	addwf	fsr1l,f,c
  6224   00236E  51DB               	movf	(fputc@fp+1)& (0+255),w,b
  6225   002370  22E2               	addwfc	fsr1h,f,c
  6226   002372  50DE               	movf	postinc2,w,c
  6227   002374  5CE6               	subwf	postinc1,w,c
  6228   002376  50E6               	movf	postinc1,w,c
  6229   002378  0A80               	xorlw	128
  6230   00237A  6FE0               	movwf	(??_fputc+4)& (0+255),b
  6231   00237C  50DE               	movf	postinc2,w,c
  6232   00237E  0A80               	xorlw	128
  6233   002380  59E0               	subwfb	(??_fputc+4)& (0+255),w,b
  6234   002382  B0D8               	btfsc	status,0,c
  6235   002384  EFC6  F011         	goto	u5461
  6236   002388  EFC8  F011         	goto	u5460
  6237   00238C                     u5461:
  6238   00238C  EFE3  F011         	goto	l1967
  6239   002390                     u5460:
  6240   002390                     l8519:
  6241                           
  6242                           ; BSR set to: 0
  6243   002390  EE20 F003          	lfsr	2,3
  6244   002394  51DA               	movf	fputc@fp& (0+255),w,b
  6245   002396  26D9               	addwf	fsr2l,f,c
  6246   002398  51DB               	movf	(fputc@fp+1)& (0+255),w,b
  6247   00239A  22DA               	addwfc	fsr2h,f,c
  6248   00239C  50DF               	movf	indf2,w,c
  6249   00239E  6FDC               	movwf	??_fputc& (0+255),b
  6250   0023A0  C0DA  FFD9         	movff	fputc@fp,fsr2l
  6251   0023A4  C0DB  FFDA         	movff	fputc@fp+1,fsr2h
  6252   0023A8  50DF               	movf	indf2,w,c
  6253   0023AA  25DC               	addwf	??_fputc& (0+255),w,b
  6254   0023AC  6ED9               	movwf	fsr2l,c
  6255   0023AE  6ADA               	clrf	fsr2h,c
  6256   0023B0  C0D8  FFDF         	movff	fputc@c,indf2
  6257   0023B4  EE20 F003          	lfsr	2,3
  6258   0023B8  51DA               	movf	fputc@fp& (0+255),w,b
  6259   0023BA  26D9               	addwf	fsr2l,f,c
  6260   0023BC  51DB               	movf	(fputc@fp+1)& (0+255),w,b
  6261   0023BE  22DA               	addwfc	fsr2h,f,c
  6262   0023C0  2ADE               	incf	postinc2,f,c
  6263   0023C2  0E00               	movlw	0
  6264   0023C4  22DD               	addwfc	postdec2,f,c
  6265   0023C6                     l1967:
  6266   0023C6  0012               	return		;funcret
  6267   0023C8                     __end_of_fputc:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _putch *****************
  6271 ;; Defined at:
  6272 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  c               1    wreg     unsigned char 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  c               1    0[COMRAM] unsigned char 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;Total ram usage:        0 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 10
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_fputc
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text39
  6301   003600                     __ptext39:
  6302                           	callstack 0
  6303   003600                     _putch:
  6304                           	callstack 16
  6305   003600  0012               	return		;funcret
  6306   003602                     __end_of_putch:
  6307                           	callstack 0
  6308                           
  6309 ;; *************** function _abs *****************
  6310 ;; Defined at:
  6311 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  a               2   10[BANK0 ] int 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;		None
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  2   10[BANK0 ] int 
  6318 ;; Registers used:
  6319 ;;		wreg, status,2, status,0
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6325 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;Total ram usage:        4 bytes
  6330 ;; Hardware stack levels used: 1
  6331 ;; Hardware stack levels required when called: 10
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_vfpfcnvrt
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text40
  6340   00302E                     __ptext40:
  6341                           	callstack 0
  6342   00302E                     _abs:
  6343                           	callstack 17
  6344   00302E  0100               	movlb	0	; () banked
  6345   003030  BFE3               	btfsc	(abs@a+1)& (0+255),7,b
  6346   003032  EF1D  F018         	goto	u5471
  6347   003036  EF1F  F018         	goto	u5470
  6348   00303A                     u5471:
  6349   00303A  EF25  F018         	goto	l1952
  6350   00303E                     u5470:
  6351   00303E                     
  6352                           ; BSR set to: 0
  6353   00303E  C0E2  F0E2         	movff	abs@a,?_abs
  6354   003042  C0E3  F0E3         	movff	abs@a+1,?_abs+1
  6355   003046  EF31  F018         	goto	l1955
  6356   00304A                     l1952:
  6357                           
  6358                           ; BSR set to: 0
  6359   00304A  C0E2  F0E4         	movff	abs@a,??_abs
  6360   00304E  C0E3  F0E5         	movff	abs@a+1,??_abs+1
  6361   003052  1FE4               	comf	??_abs& (0+255),f,b
  6362   003054  1FE5               	comf	(??_abs+1)& (0+255),f,b
  6363   003056  4BE4               	infsnz	??_abs& (0+255),f,b
  6364   003058  2BE5               	incf	(??_abs+1)& (0+255),f,b
  6365   00305A  C0E4  F0E2         	movff	??_abs,?_abs
  6366   00305E  C0E5  F0E3         	movff	??_abs+1,?_abs+1
  6367   003062                     l1955:
  6368                           
  6369                           ; BSR set to: 0
  6370   003062  0012               	return		;funcret
  6371   003064                     __end_of_abs:
  6372                           	callstack 0
  6373                           
  6374 ;; *************** function ___llmod *****************
  6375 ;; Defined at:
  6376 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  dividend        4    0[BANK0 ] unsigned long 
  6379 ;;  divisor         4    4[BANK0 ] unsigned long 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  counter         1    8[BANK0 ] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  4    0[BANK0 ] unsigned long 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6391 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;Total ram usage:        9 bytes
  6396 ;; Hardware stack levels used: 1
  6397 ;; Hardware stack levels required when called: 10
  6398 ;; This function calls:
  6399 ;;		Nothing
  6400 ;; This function is called by:
  6401 ;;		_vfpfcnvrt
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text41
  6406   00265C                     __ptext41:
  6407                           	callstack 0
  6408   00265C                     ___llmod:
  6409                           	callstack 17
  6410   00265C  0100               	movlb	0	; () banked
  6411   00265E  51DC               	movf	___llmod@divisor& (0+255),w,b
  6412   002660  11DD               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6413   002662  11DE               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6414   002664  11DF               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6415   002666  B4D8               	btfsc	status,2,c
  6416   002668  EF38  F013         	goto	u5401
  6417   00266C  EF3A  F013         	goto	u5400
  6418   002670                     u5401:
  6419   002670  EF6A  F013         	goto	l1612
  6420   002674                     u5400:
  6421   002674                     
  6422                           ; BSR set to: 0
  6423   002674  0E01               	movlw	1
  6424   002676  6FE0               	movwf	___llmod@counter& (0+255),b
  6425   002678  EF44  F013         	goto	l8499
  6426   00267C                     l8497:
  6427                           
  6428                           ; BSR set to: 0
  6429   00267C  90D8               	bcf	status,0,c
  6430   00267E  37DC               	rlcf	___llmod@divisor& (0+255),f,b
  6431   002680  37DD               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6432   002682  37DE               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6433   002684  37DF               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6434   002686  2BE0               	incf	___llmod@counter& (0+255),f,b
  6435   002688                     l8499:
  6436                           
  6437                           ; BSR set to: 0
  6438   002688  AFDF               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6439   00268A  EF49  F013         	goto	u5411
  6440   00268E  EF4B  F013         	goto	u5410
  6441   002692                     u5411:
  6442   002692  EF3E  F013         	goto	l8497
  6443   002696                     u5410:
  6444   002696                     l8501:
  6445                           
  6446                           ; BSR set to: 0
  6447   002696  51DC               	movf	___llmod@divisor& (0+255),w,b
  6448   002698  5DD8               	subwf	___llmod@dividend& (0+255),w,b
  6449   00269A  51DD               	movf	(___llmod@divisor+1)& (0+255),w,b
  6450   00269C  59D9               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6451   00269E  51DE               	movf	(___llmod@divisor+2)& (0+255),w,b
  6452   0026A0  59DA               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6453   0026A2  51DF               	movf	(___llmod@divisor+3)& (0+255),w,b
  6454   0026A4  59DB               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6455   0026A6  A0D8               	btfss	status,0,c
  6456   0026A8  EF58  F013         	goto	u5421
  6457   0026AC  EF5A  F013         	goto	u5420
  6458   0026B0                     u5421:
  6459   0026B0  EF62  F013         	goto	l8505
  6460   0026B4                     u5420:
  6461   0026B4                     
  6462                           ; BSR set to: 0
  6463   0026B4  51DC               	movf	___llmod@divisor& (0+255),w,b
  6464   0026B6  5FD8               	subwf	___llmod@dividend& (0+255),f,b
  6465   0026B8  51DD               	movf	(___llmod@divisor+1)& (0+255),w,b
  6466   0026BA  5BD9               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6467   0026BC  51DE               	movf	(___llmod@divisor+2)& (0+255),w,b
  6468   0026BE  5BDA               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6469   0026C0  51DF               	movf	(___llmod@divisor+3)& (0+255),w,b
  6470   0026C2  5BDB               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6471   0026C4                     l8505:
  6472                           
  6473                           ; BSR set to: 0
  6474   0026C4  90D8               	bcf	status,0,c
  6475   0026C6  33DF               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6476   0026C8  33DE               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6477   0026CA  33DD               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6478   0026CC  33DC               	rrcf	___llmod@divisor& (0+255),f,b
  6479   0026CE                     
  6480                           ; BSR set to: 0
  6481   0026CE  2FE0               	decfsz	___llmod@counter& (0+255),f,b
  6482   0026D0  EF4B  F013         	goto	l8501
  6483   0026D4                     l1612:
  6484                           
  6485                           ; BSR set to: 0
  6486   0026D4  C0D8  F0D8         	movff	___llmod@dividend,?___llmod
  6487   0026D8  C0D9  F0D9         	movff	___llmod@dividend+1,?___llmod+1
  6488   0026DC  C0DA  F0DA         	movff	___llmod@dividend+2,?___llmod+2
  6489   0026E0  C0DB  F0DB         	movff	___llmod@dividend+3,?___llmod+3
  6490   0026E4                     
  6491                           ; BSR set to: 0
  6492   0026E4  0012               	return		;funcret
  6493   0026E6                     __end_of___llmod:
  6494                           	callstack 0
  6495                           
  6496 ;; *************** function ___lldiv *****************
  6497 ;; Defined at:
  6498 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  dividend        4    0[BANK0 ] unsigned long 
  6501 ;;  divisor         4    4[BANK0 ] unsigned long 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  quotient        4    9[BANK0 ] unsigned long 
  6504 ;;  counter         1    8[BANK0 ] unsigned char 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  4    0[BANK0 ] unsigned long 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6514 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;Total ram usage:       13 bytes
  6519 ;; Hardware stack levels used: 1
  6520 ;; Hardware stack levels required when called: 10
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_vfpfcnvrt
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text42
  6529   00246E                     __ptext42:
  6530                           	callstack 0
  6531   00246E                     ___lldiv:
  6532                           	callstack 17
  6533   00246E  0E00               	movlw	0
  6534   002470  0100               	movlb	0	; () banked
  6535   002472  6FE1               	movwf	___lldiv@quotient& (0+255),b
  6536   002474  0E00               	movlw	0
  6537   002476  6FE2               	movwf	(___lldiv@quotient+1)& (0+255),b
  6538   002478  0E00               	movlw	0
  6539   00247A  6FE3               	movwf	(___lldiv@quotient+2)& (0+255),b
  6540   00247C  0E00               	movlw	0
  6541   00247E  6FE4               	movwf	(___lldiv@quotient+3)& (0+255),b
  6542   002480                     
  6543                           ; BSR set to: 0
  6544   002480  51DC               	movf	___lldiv@divisor& (0+255),w,b
  6545   002482  11DD               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6546   002484  11DE               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6547   002486  11DF               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6548   002488  B4D8               	btfsc	status,2,c
  6549   00248A  EF49  F012         	goto	u5251
  6550   00248E  EF4B  F012         	goto	u5250
  6551   002492                     u5251:
  6552   002492  EF81  F012         	goto	l1219
  6553   002496                     u5250:
  6554   002496                     
  6555                           ; BSR set to: 0
  6556   002496  0E01               	movlw	1
  6557   002498  6FE0               	movwf	___lldiv@counter& (0+255),b
  6558   00249A  EF55  F012         	goto	l8399
  6559   00249E                     l8397:
  6560                           
  6561                           ; BSR set to: 0
  6562   00249E  90D8               	bcf	status,0,c
  6563   0024A0  37DC               	rlcf	___lldiv@divisor& (0+255),f,b
  6564   0024A2  37DD               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6565   0024A4  37DE               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6566   0024A6  37DF               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6567   0024A8  2BE0               	incf	___lldiv@counter& (0+255),f,b
  6568   0024AA                     l8399:
  6569                           
  6570                           ; BSR set to: 0
  6571   0024AA  AFDF               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6572   0024AC  EF5A  F012         	goto	u5261
  6573   0024B0  EF5C  F012         	goto	u5260
  6574   0024B4                     u5261:
  6575   0024B4  EF4F  F012         	goto	l8397
  6576   0024B8                     u5260:
  6577   0024B8                     l8401:
  6578                           
  6579                           ; BSR set to: 0
  6580   0024B8  90D8               	bcf	status,0,c
  6581   0024BA  37E1               	rlcf	___lldiv@quotient& (0+255),f,b
  6582   0024BC  37E2               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6583   0024BE  37E3               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6584   0024C0  37E4               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6585   0024C2                     
  6586                           ; BSR set to: 0
  6587   0024C2  51DC               	movf	___lldiv@divisor& (0+255),w,b
  6588   0024C4  5DD8               	subwf	___lldiv@dividend& (0+255),w,b
  6589   0024C6  51DD               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6590   0024C8  59D9               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6591   0024CA  51DE               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6592   0024CC  59DA               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6593   0024CE  51DF               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6594   0024D0  59DB               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6595   0024D2  A0D8               	btfss	status,0,c
  6596   0024D4  EF6E  F012         	goto	u5271
  6597   0024D8  EF70  F012         	goto	u5270
  6598   0024DC                     u5271:
  6599   0024DC  EF79  F012         	goto	l8409
  6600   0024E0                     u5270:
  6601   0024E0                     
  6602                           ; BSR set to: 0
  6603   0024E0  51DC               	movf	___lldiv@divisor& (0+255),w,b
  6604   0024E2  5FD8               	subwf	___lldiv@dividend& (0+255),f,b
  6605   0024E4  51DD               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6606   0024E6  5BD9               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6607   0024E8  51DE               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6608   0024EA  5BDA               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6609   0024EC  51DF               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6610   0024EE  5BDB               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6611   0024F0                     
  6612                           ; BSR set to: 0
  6613   0024F0  81E1               	bsf	___lldiv@quotient& (0+255),0,b
  6614   0024F2                     l8409:
  6615                           
  6616                           ; BSR set to: 0
  6617   0024F2  90D8               	bcf	status,0,c
  6618   0024F4  33DF               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6619   0024F6  33DE               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6620   0024F8  33DD               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6621   0024FA  33DC               	rrcf	___lldiv@divisor& (0+255),f,b
  6622   0024FC                     
  6623                           ; BSR set to: 0
  6624   0024FC  2FE0               	decfsz	___lldiv@counter& (0+255),f,b
  6625   0024FE  EF5C  F012         	goto	l8401
  6626   002502                     l1219:
  6627                           
  6628                           ; BSR set to: 0
  6629   002502  C0E1  F0D8         	movff	___lldiv@quotient,?___lldiv
  6630   002506  C0E2  F0D9         	movff	___lldiv@quotient+1,?___lldiv+1
  6631   00250A  C0E3  F0DA         	movff	___lldiv@quotient+2,?___lldiv+2
  6632   00250E  C0E4  F0DB         	movff	___lldiv@quotient+3,?___lldiv+3
  6633   002512                     
  6634                           ; BSR set to: 0
  6635   002512  0012               	return		;funcret
  6636   002514                     __end_of___lldiv:
  6637                           	callstack 0
  6638                           
  6639 ;; *************** function ___almod *****************
  6640 ;; Defined at:
  6641 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\almod.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  dividend        4    0[BANK0 ] long 
  6644 ;;  divisor         4    4[BANK0 ] long 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  sign            1    9[BANK0 ] unsigned char 
  6647 ;;  counter         1    8[BANK0 ] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  4    0[BANK0 ] long 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6657 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;Total ram usage:       10 bytes
  6662 ;; Hardware stack levels used: 1
  6663 ;; Hardware stack levels required when called: 10
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_vfpfcnvrt
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text43
  6672   00215A                     __ptext43:
  6673                           	callstack 0
  6674   00215A                     ___almod:
  6675                           	callstack 17
  6676   00215A  0E00               	movlw	0
  6677   00215C  0100               	movlb	0	; () banked
  6678   00215E  6FE1               	movwf	___almod@sign& (0+255),b
  6679   002160                     
  6680                           ; BSR set to: 0
  6681   002160  BFDB               	btfsc	(___almod@dividend+3)& (0+255),7,b
  6682   002162  EFB7  F010         	goto	u5340
  6683   002166  EFB5  F010         	goto	u5341
  6684   00216A                     u5341:
  6685   00216A  EFC1  F010         	goto	l8465
  6686   00216E                     u5340:
  6687   00216E                     
  6688                           ; BSR set to: 0
  6689   00216E  1FDB               	comf	(___almod@dividend+3)& (0+255),f,b
  6690   002170  1FDA               	comf	(___almod@dividend+2)& (0+255),f,b
  6691   002172  1FD9               	comf	(___almod@dividend+1)& (0+255),f,b
  6692   002174  6DD8               	negf	___almod@dividend& (0+255),b
  6693   002176  0E00               	movlw	0
  6694   002178  23D9               	addwfc	(___almod@dividend+1)& (0+255),f,b
  6695   00217A  23DA               	addwfc	(___almod@dividend+2)& (0+255),f,b
  6696   00217C  23DB               	addwfc	(___almod@dividend+3)& (0+255),f,b
  6697   00217E                     
  6698                           ; BSR set to: 0
  6699   00217E  0E01               	movlw	1
  6700   002180  6FE1               	movwf	___almod@sign& (0+255),b
  6701   002182                     l8465:
  6702                           
  6703                           ; BSR set to: 0
  6704   002182  BFDF               	btfsc	(___almod@divisor+3)& (0+255),7,b
  6705   002184  EFC8  F010         	goto	u5350
  6706   002188  EFC6  F010         	goto	u5351
  6707   00218C                     u5351:
  6708   00218C  EFD0  F010         	goto	l8469
  6709   002190                     u5350:
  6710   002190                     
  6711                           ; BSR set to: 0
  6712   002190  1FDF               	comf	(___almod@divisor+3)& (0+255),f,b
  6713   002192  1FDE               	comf	(___almod@divisor+2)& (0+255),f,b
  6714   002194  1FDD               	comf	(___almod@divisor+1)& (0+255),f,b
  6715   002196  6DDC               	negf	___almod@divisor& (0+255),b
  6716   002198  0E00               	movlw	0
  6717   00219A  23DD               	addwfc	(___almod@divisor+1)& (0+255),f,b
  6718   00219C  23DE               	addwfc	(___almod@divisor+2)& (0+255),f,b
  6719   00219E  23DF               	addwfc	(___almod@divisor+3)& (0+255),f,b
  6720   0021A0                     l8469:
  6721                           
  6722                           ; BSR set to: 0
  6723   0021A0  51DC               	movf	___almod@divisor& (0+255),w,b
  6724   0021A2  11DD               	iorwf	(___almod@divisor+1)& (0+255),w,b
  6725   0021A4  11DE               	iorwf	(___almod@divisor+2)& (0+255),w,b
  6726   0021A6  11DF               	iorwf	(___almod@divisor+3)& (0+255),w,b
  6727   0021A8  B4D8               	btfsc	status,2,c
  6728   0021AA  EFD9  F010         	goto	u5361
  6729   0021AE  EFDB  F010         	goto	u5360
  6730   0021B2                     u5361:
  6731   0021B2  EF0B  F011         	goto	l8485
  6732   0021B6                     u5360:
  6733   0021B6                     
  6734                           ; BSR set to: 0
  6735   0021B6  0E01               	movlw	1
  6736   0021B8  6FE0               	movwf	___almod@counter& (0+255),b
  6737   0021BA  EFE5  F010         	goto	l8475
  6738   0021BE                     l8473:
  6739                           
  6740                           ; BSR set to: 0
  6741   0021BE  90D8               	bcf	status,0,c
  6742   0021C0  37DC               	rlcf	___almod@divisor& (0+255),f,b
  6743   0021C2  37DD               	rlcf	(___almod@divisor+1)& (0+255),f,b
  6744   0021C4  37DE               	rlcf	(___almod@divisor+2)& (0+255),f,b
  6745   0021C6  37DF               	rlcf	(___almod@divisor+3)& (0+255),f,b
  6746   0021C8  2BE0               	incf	___almod@counter& (0+255),f,b
  6747   0021CA                     l8475:
  6748                           
  6749                           ; BSR set to: 0
  6750   0021CA  AFDF               	btfss	(___almod@divisor+3)& (0+255),7,b
  6751   0021CC  EFEA  F010         	goto	u5371
  6752   0021D0  EFEC  F010         	goto	u5370
  6753   0021D4                     u5371:
  6754   0021D4  EFDF  F010         	goto	l8473
  6755   0021D8                     u5370:
  6756   0021D8                     l8477:
  6757                           
  6758                           ; BSR set to: 0
  6759   0021D8  51DC               	movf	___almod@divisor& (0+255),w,b
  6760   0021DA  5DD8               	subwf	___almod@dividend& (0+255),w,b
  6761   0021DC  51DD               	movf	(___almod@divisor+1)& (0+255),w,b
  6762   0021DE  59D9               	subwfb	(___almod@dividend+1)& (0+255),w,b
  6763   0021E0  51DE               	movf	(___almod@divisor+2)& (0+255),w,b
  6764   0021E2  59DA               	subwfb	(___almod@dividend+2)& (0+255),w,b
  6765   0021E4  51DF               	movf	(___almod@divisor+3)& (0+255),w,b
  6766   0021E6  59DB               	subwfb	(___almod@dividend+3)& (0+255),w,b
  6767   0021E8  A0D8               	btfss	status,0,c
  6768   0021EA  EFF9  F010         	goto	u5381
  6769   0021EE  EFFB  F010         	goto	u5380
  6770   0021F2                     u5381:
  6771   0021F2  EF03  F011         	goto	l8481
  6772   0021F6                     u5380:
  6773   0021F6                     
  6774                           ; BSR set to: 0
  6775   0021F6  51DC               	movf	___almod@divisor& (0+255),w,b
  6776   0021F8  5FD8               	subwf	___almod@dividend& (0+255),f,b
  6777   0021FA  51DD               	movf	(___almod@divisor+1)& (0+255),w,b
  6778   0021FC  5BD9               	subwfb	(___almod@dividend+1)& (0+255),f,b
  6779   0021FE  51DE               	movf	(___almod@divisor+2)& (0+255),w,b
  6780   002200  5BDA               	subwfb	(___almod@dividend+2)& (0+255),f,b
  6781   002202  51DF               	movf	(___almod@divisor+3)& (0+255),w,b
  6782   002204  5BDB               	subwfb	(___almod@dividend+3)& (0+255),f,b
  6783   002206                     l8481:
  6784                           
  6785                           ; BSR set to: 0
  6786   002206  90D8               	bcf	status,0,c
  6787   002208  33DF               	rrcf	(___almod@divisor+3)& (0+255),f,b
  6788   00220A  33DE               	rrcf	(___almod@divisor+2)& (0+255),f,b
  6789   00220C  33DD               	rrcf	(___almod@divisor+1)& (0+255),f,b
  6790   00220E  33DC               	rrcf	___almod@divisor& (0+255),f,b
  6791   002210                     
  6792                           ; BSR set to: 0
  6793   002210  2FE0               	decfsz	___almod@counter& (0+255),f,b
  6794   002212  EFEC  F010         	goto	l8477
  6795   002216                     l8485:
  6796                           
  6797                           ; BSR set to: 0
  6798   002216  51E1               	movf	___almod@sign& (0+255),w,b
  6799   002218  B4D8               	btfsc	status,2,c
  6800   00221A  EF11  F011         	goto	u5391
  6801   00221E  EF13  F011         	goto	u5390
  6802   002222                     u5391:
  6803   002222  EF1B  F011         	goto	l8489
  6804   002226                     u5390:
  6805   002226                     
  6806                           ; BSR set to: 0
  6807   002226  1FDB               	comf	(___almod@dividend+3)& (0+255),f,b
  6808   002228  1FDA               	comf	(___almod@dividend+2)& (0+255),f,b
  6809   00222A  1FD9               	comf	(___almod@dividend+1)& (0+255),f,b
  6810   00222C  6DD8               	negf	___almod@dividend& (0+255),b
  6811   00222E  0E00               	movlw	0
  6812   002230  23D9               	addwfc	(___almod@dividend+1)& (0+255),f,b
  6813   002232  23DA               	addwfc	(___almod@dividend+2)& (0+255),f,b
  6814   002234  23DB               	addwfc	(___almod@dividend+3)& (0+255),f,b
  6815   002236                     l8489:
  6816                           
  6817                           ; BSR set to: 0
  6818   002236  C0D8  F0D8         	movff	___almod@dividend,?___almod
  6819   00223A  C0D9  F0D9         	movff	___almod@dividend+1,?___almod+1
  6820   00223E  C0DA  F0DA         	movff	___almod@dividend+2,?___almod+2
  6821   002242  C0DB  F0DB         	movff	___almod@dividend+3,?___almod+3
  6822   002246                     
  6823                           ; BSR set to: 0
  6824   002246  0012               	return		;funcret
  6825   002248                     __end_of___almod:
  6826                           	callstack 0
  6827                           
  6828 ;; *************** function ___aldiv *****************
  6829 ;; Defined at:
  6830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  dividend        4    0[BANK0 ] long 
  6833 ;;  divisor         4    4[BANK0 ] long 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;  quotient        4   10[BANK0 ] long 
  6836 ;;  sign            1    9[BANK0 ] unsigned char 
  6837 ;;  counter         1    8[BANK0 ] unsigned char 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  4    0[BANK0 ] long 
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6847 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;Total ram usage:       14 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 10
  6854 ;; This function calls:
  6855 ;;		Nothing
  6856 ;; This function is called by:
  6857 ;;		_vfpfcnvrt
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text44
  6862   00204C                     __ptext44:
  6863                           	callstack 0
  6864   00204C                     ___aldiv:
  6865                           	callstack 17
  6866   00204C  0E00               	movlw	0
  6867   00204E  0100               	movlb	0	; () banked
  6868   002050  6FE1               	movwf	___aldiv@sign& (0+255),b
  6869   002052                     
  6870                           ; BSR set to: 0
  6871   002052  BFDF               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  6872   002054  EF30  F010         	goto	u5280
  6873   002058  EF2E  F010         	goto	u5281
  6874   00205C                     u5281:
  6875   00205C  EF3A  F010         	goto	l8421
  6876   002060                     u5280:
  6877   002060                     
  6878                           ; BSR set to: 0
  6879   002060  1FDF               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6880   002062  1FDE               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6881   002064  1FDD               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6882   002066  6DDC               	negf	___aldiv@divisor& (0+255),b
  6883   002068  0E00               	movlw	0
  6884   00206A  23DD               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6885   00206C  23DE               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6886   00206E  23DF               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6887   002070                     
  6888                           ; BSR set to: 0
  6889   002070  0E01               	movlw	1
  6890   002072  6FE1               	movwf	___aldiv@sign& (0+255),b
  6891   002074                     l8421:
  6892                           
  6893                           ; BSR set to: 0
  6894   002074  BFDB               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  6895   002076  EF41  F010         	goto	u5290
  6896   00207A  EF3F  F010         	goto	u5291
  6897   00207E                     u5291:
  6898   00207E  EF4B  F010         	goto	l8427
  6899   002082                     u5290:
  6900   002082                     
  6901                           ; BSR set to: 0
  6902   002082  1FDB               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6903   002084  1FDA               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6904   002086  1FD9               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6905   002088  6DD8               	negf	___aldiv@dividend& (0+255),b
  6906   00208A  0E00               	movlw	0
  6907   00208C  23D9               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6908   00208E  23DA               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6909   002090  23DB               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6910   002092                     
  6911                           ; BSR set to: 0
  6912   002092  0E01               	movlw	1
  6913   002094  1BE1               	xorwf	___aldiv@sign& (0+255),f,b
  6914   002096                     l8427:
  6915                           
  6916                           ; BSR set to: 0
  6917   002096  0E00               	movlw	0
  6918   002098  6FE2               	movwf	___aldiv@quotient& (0+255),b
  6919   00209A  0E00               	movlw	0
  6920   00209C  6FE3               	movwf	(___aldiv@quotient+1)& (0+255),b
  6921   00209E  0E00               	movlw	0
  6922   0020A0  6FE4               	movwf	(___aldiv@quotient+2)& (0+255),b
  6923   0020A2  0E00               	movlw	0
  6924   0020A4  6FE5               	movwf	(___aldiv@quotient+3)& (0+255),b
  6925   0020A6                     
  6926                           ; BSR set to: 0
  6927   0020A6  51DC               	movf	___aldiv@divisor& (0+255),w,b
  6928   0020A8  11DD               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6929   0020AA  11DE               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6930   0020AC  11DF               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6931   0020AE  B4D8               	btfsc	status,2,c
  6932   0020B0  EF5C  F010         	goto	u5301
  6933   0020B4  EF5E  F010         	goto	u5300
  6934   0020B8                     u5301:
  6935   0020B8  EF94  F010         	goto	l8449
  6936   0020BC                     u5300:
  6937   0020BC                     
  6938                           ; BSR set to: 0
  6939   0020BC  0E01               	movlw	1
  6940   0020BE  6FE0               	movwf	___aldiv@counter& (0+255),b
  6941   0020C0  EF68  F010         	goto	l8435
  6942   0020C4                     l8433:
  6943                           
  6944                           ; BSR set to: 0
  6945   0020C4  90D8               	bcf	status,0,c
  6946   0020C6  37DC               	rlcf	___aldiv@divisor& (0+255),f,b
  6947   0020C8  37DD               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6948   0020CA  37DE               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6949   0020CC  37DF               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6950   0020CE  2BE0               	incf	___aldiv@counter& (0+255),f,b
  6951   0020D0                     l8435:
  6952                           
  6953                           ; BSR set to: 0
  6954   0020D0  AFDF               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6955   0020D2  EF6D  F010         	goto	u5311
  6956   0020D6  EF6F  F010         	goto	u5310
  6957   0020DA                     u5311:
  6958   0020DA  EF62  F010         	goto	l8433
  6959   0020DE                     u5310:
  6960   0020DE                     l8437:
  6961                           
  6962                           ; BSR set to: 0
  6963   0020DE  90D8               	bcf	status,0,c
  6964   0020E0  37E2               	rlcf	___aldiv@quotient& (0+255),f,b
  6965   0020E2  37E3               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6966   0020E4  37E4               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6967   0020E6  37E5               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6968   0020E8                     
  6969                           ; BSR set to: 0
  6970   0020E8  51DC               	movf	___aldiv@divisor& (0+255),w,b
  6971   0020EA  5DD8               	subwf	___aldiv@dividend& (0+255),w,b
  6972   0020EC  51DD               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6973   0020EE  59D9               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6974   0020F0  51DE               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6975   0020F2  59DA               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6976   0020F4  51DF               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6977   0020F6  59DB               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6978   0020F8  A0D8               	btfss	status,0,c
  6979   0020FA  EF81  F010         	goto	u5321
  6980   0020FE  EF83  F010         	goto	u5320
  6981   002102                     u5321:
  6982   002102  EF8C  F010         	goto	l8445
  6983   002106                     u5320:
  6984   002106                     
  6985                           ; BSR set to: 0
  6986   002106  51DC               	movf	___aldiv@divisor& (0+255),w,b
  6987   002108  5FD8               	subwf	___aldiv@dividend& (0+255),f,b
  6988   00210A  51DD               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6989   00210C  5BD9               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6990   00210E  51DE               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6991   002110  5BDA               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6992   002112  51DF               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6993   002114  5BDB               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6994   002116                     
  6995                           ; BSR set to: 0
  6996   002116  81E2               	bsf	___aldiv@quotient& (0+255),0,b
  6997   002118                     l8445:
  6998                           
  6999                           ; BSR set to: 0
  7000   002118  90D8               	bcf	status,0,c
  7001   00211A  33DF               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7002   00211C  33DE               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7003   00211E  33DD               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7004   002120  33DC               	rrcf	___aldiv@divisor& (0+255),f,b
  7005   002122                     
  7006                           ; BSR set to: 0
  7007   002122  2FE0               	decfsz	___aldiv@counter& (0+255),f,b
  7008   002124  EF6F  F010         	goto	l8437
  7009   002128                     l8449:
  7010                           
  7011                           ; BSR set to: 0
  7012   002128  51E1               	movf	___aldiv@sign& (0+255),w,b
  7013   00212A  B4D8               	btfsc	status,2,c
  7014   00212C  EF9A  F010         	goto	u5331
  7015   002130  EF9C  F010         	goto	u5330
  7016   002134                     u5331:
  7017   002134  EFA4  F010         	goto	l8453
  7018   002138                     u5330:
  7019   002138                     
  7020                           ; BSR set to: 0
  7021   002138  1FE5               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7022   00213A  1FE4               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7023   00213C  1FE3               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7024   00213E  6DE2               	negf	___aldiv@quotient& (0+255),b
  7025   002140  0E00               	movlw	0
  7026   002142  23E3               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7027   002144  23E4               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7028   002146  23E5               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7029   002148                     l8453:
  7030                           
  7031                           ; BSR set to: 0
  7032   002148  C0E2  F0D8         	movff	___aldiv@quotient,?___aldiv
  7033   00214C  C0E3  F0D9         	movff	___aldiv@quotient+1,?___aldiv+1
  7034   002150  C0E4  F0DA         	movff	___aldiv@quotient+2,?___aldiv+2
  7035   002154  C0E5  F0DB         	movff	___aldiv@quotient+3,?___aldiv+3
  7036   002158                     
  7037                           ; BSR set to: 0
  7038   002158  0012               	return		;funcret
  7039   00215A                     __end_of___aldiv:
  7040                           	callstack 0
  7041                           
  7042 ;; *************** function _EXTEEPROM_WriteByte *****************
  7043 ;; Defined at:
  7044 ;;		line 9 in file "AECUL/ExtEEPROM/ExtEEPROM.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  Eadd            1    wreg     unsigned char 
  7047 ;;  Byteadd         1   12[BANK0 ] unsigned char 
  7048 ;;  data            1   13[BANK0 ] unsigned char 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;  Eadd            1   14[BANK0 ] unsigned char 
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      void 
  7053 ;; Registers used:
  7054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;Total ram usage:        3 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 14
  7067 ;; This function calls:
  7068 ;;		_I2C_Write1ByteRegister
  7069 ;; This function is called by:
  7070 ;;		_main
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text45
  7075   003470                     __ptext45:
  7076                           	callstack 0
  7077   003470                     _EXTEEPROM_WriteByte:
  7078                           	callstack 16
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;incstack = 0
  7082                           ;EXTEEPROM_WriteByte@Eadd stored from wreg
  7083   003470  0100               	movlb	0	; () banked
  7084   003472  6FE6               	movwf	EXTEEPROM_WriteByte@Eadd& (0+255),b
  7085   003474                     
  7086                           ;AECUL/ExtEEPROM/ExtEEPROM.c: 10:     I2C_Write1ByteRegister(Eadd,Byteadd,data);
  7087   003474  C0E4  F0E1         	movff	EXTEEPROM_WriteByte@Byteadd,I2C_Write1ByteRegister@reg
  7088   003478  C0E5  F0E2         	movff	EXTEEPROM_WriteByte@data,I2C_Write1ByteRegister@data
  7089   00347C  0100               	movlb	0	; () banked
  7090   00347E  51E6               	movf	EXTEEPROM_WriteByte@Eadd& (0+255),w,b
  7091   003480  EC30  F014         	call	_I2C_Write1ByteRegister
  7092   003484  0012               	return		;funcret
  7093   003486                     __end_of_EXTEEPROM_WriteByte:
  7094                           	callstack 0
  7095                           
  7096 ;; *************** function _I2C_Write1ByteRegister *****************
  7097 ;; Defined at:
  7098 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  address         1    wreg     unsigned char 
  7101 ;;  reg             1    9[BANK0 ] unsigned char 
  7102 ;;  data            1   10[BANK0 ] unsigned char 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  address         1   11[BANK0 ] unsigned char 
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;Total ram usage:        3 bytes
  7119 ;; Hardware stack levels used: 1
  7120 ;; Hardware stack levels required when called: 13
  7121 ;; This function calls:
  7122 ;;		_I2C_Close
  7123 ;;		_I2C_MasterWrite
  7124 ;;		_I2C_Open
  7125 ;;		_I2C_SetAddressNackCallback
  7126 ;;		_I2C_SetBuffer
  7127 ;;		_I2C_SetDataCompleteCallback
  7128 ;; This function is called by:
  7129 ;;		_EXTEEPROM_WriteByte
  7130 ;;		_main
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text46
  7135   002860                     __ptext46:
  7136                           	callstack 0
  7137   002860                     _I2C_Write1ByteRegister:
  7138                           	callstack 17
  7139                           
  7140                           ;incstack = 0
  7141                           ;I2C_Write1ByteRegister@address stored from wreg
  7142   002860  0100               	movlb	0	; () banked
  7143   002862  6FE3               	movwf	I2C_Write1ByteRegister@address& (0+255),b
  7144   002864                     l6465:
  7145   002864  0100               	movlb	0	; () banked
  7146   002866  51E3               	movf	I2C_Write1ByteRegister@address& (0+255),w,b
  7147   002868  ECDD  F012         	call	_I2C_Open
  7148   00286C  0900               	iorlw	0
  7149   00286E  B4D8               	btfsc	status,2,c
  7150   002870  EF3C  F014         	goto	u3921
  7151   002874  EF3E  F014         	goto	u3920
  7152   002878                     u3921:
  7153   002878  EF32  F014         	goto	l6465
  7154   00287C                     u3920:
  7155   00287C                     
  7156                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  7157   00287C  0E2E               	movlw	low _wr1RegCompleteHandler
  7158   00287E  0100               	movlb	0	; () banked
  7159   002880  6FDD               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  7160   002882  0E32               	movlw	high _wr1RegCompleteHandler
  7161   002884  6FDE               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  7162   002886  0EE2               	movlw	low I2C_Write1ByteRegister@data
  7163   002888  6FDF               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  7164   00288A  6BE0               	clrf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  7165   00288C  EC14  F01A         	call	_I2C_SetDataCompleteCallback	;wreg free
  7166   002890                     
  7167                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  7168   002890  0EE1               	movlw	low I2C_Write1ByteRegister@reg
  7169   002892  0100               	movlb	0	; () banked
  7170   002894  6FD8               	movwf	I2C_SetBuffer@buffer& (0+255),b
  7171   002896  6BD9               	clrf	(I2C_SetBuffer@buffer+1)& (0+255),b
  7172   002898  0E00               	movlw	0
  7173   00289A  6FDB               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
  7174   00289C  0E01               	movlw	1
  7175   00289E  6FDA               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
  7176   0028A0  ECBB  F019         	call	_I2C_SetBuffer	;wreg free
  7177   0028A4                     
  7178                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  7179   0028A4  0E00               	movlw	0
  7180   0028A6  0100               	movlb	0	; () banked
  7181   0028A8  6FDD               	movwf	I2C_SetAddressNackCallback@cb& (0+255),b
  7182   0028AA  0E00               	movlw	0
  7183   0028AC  6FDE               	movwf	(I2C_SetAddressNackCallback@cb+1)& (0+255),b
  7184   0028AE  0E00               	movlw	0
  7185   0028B0  6FDF               	movwf	I2C_SetAddressNackCallback@ptr& (0+255),b
  7186   0028B2  0E00               	movlw	0
  7187   0028B4  6FE0               	movwf	(I2C_SetAddressNackCallback@ptr+1)& (0+255),b
  7188   0028B6  EC20  F01A         	call	_I2C_SetAddressNackCallback	;wreg free
  7189   0028BA                     
  7190                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  7191   0028BA  ECAD  F01A         	call	_I2C_MasterWrite	;wreg free
  7192   0028BE                     l6475:
  7193   0028BE  EC7A  F018         	call	_I2C_Close	;wreg free
  7194   0028C2  06E8               	decf	wreg,f,c
  7195   0028C4  B4D8               	btfsc	status,2,c
  7196   0028C6  EF67  F014         	goto	u3931
  7197   0028CA  EF69  F014         	goto	u3930
  7198   0028CE                     u3931:
  7199   0028CE  EF5F  F014         	goto	l6475
  7200   0028D2                     u3930:
  7201   0028D2  0012               	return		;funcret
  7202   0028D4                     __end_of_I2C_Write1ByteRegister:
  7203                           	callstack 0
  7204                           
  7205 ;; *************** function _EXTEEPROM_ReadByte *****************
  7206 ;; Defined at:
  7207 ;;		line 13 in file "AECUL/ExtEEPROM/ExtEEPROM.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;  Eadd            1    wreg     unsigned char 
  7210 ;;  Byteadd         1   12[BANK0 ] unsigned char 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  Eadd            1   13[BANK0 ] unsigned char 
  7213 ;;  read            1   14[BANK0 ] unsigned char 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  1    wreg      unsigned char 
  7216 ;; Registers used:
  7217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7223 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7227 ;;Total ram usage:        3 bytes
  7228 ;; Hardware stack levels used: 1
  7229 ;; Hardware stack levels required when called: 14
  7230 ;; This function calls:
  7231 ;;		_I2C_Read1ByteRegister
  7232 ;; This function is called by:
  7233 ;;		_main
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           
  7237                           	psect	text47
  7238   003410                     __ptext47:
  7239                           	callstack 0
  7240   003410                     _EXTEEPROM_ReadByte:
  7241                           	callstack 16
  7242                           
  7243                           ;incstack = 0
  7244                           ;EXTEEPROM_ReadByte@Eadd stored from wreg
  7245   003410  0100               	movlb	0	; () banked
  7246   003412  6FE5               	movwf	EXTEEPROM_ReadByte@Eadd& (0+255),b
  7247   003414                     
  7248                           ;AECUL/ExtEEPROM/ExtEEPROM.c: 14:     uint8_t read;;AECUL/ExtEEPROM/ExtEEPROM.c: 15:    
      +                           read = I2C_Read1ByteRegister(Eadd,Byteadd);
  7249   003414  C0E4  F0E1         	movff	EXTEEPROM_ReadByte@Byteadd,I2C_Read1ByteRegister@reg
  7250   003418  0100               	movlb	0	; () banked
  7251   00341A  51E5               	movf	EXTEEPROM_ReadByte@Eadd& (0+255),w,b
  7252   00341C  ECB3  F013         	call	_I2C_Read1ByteRegister
  7253   003420  0100               	movlb	0	; () banked
  7254   003422  6FE6               	movwf	EXTEEPROM_ReadByte@read& (0+255),b
  7255   003424                     
  7256                           ; BSR set to: 0
  7257                           ;AECUL/ExtEEPROM/ExtEEPROM.c: 16:     return read;
  7258   003424  51E6               	movf	EXTEEPROM_ReadByte@read& (0+255),w,b
  7259   003426                     
  7260                           ; BSR set to: 0
  7261   003426  0012               	return		;funcret
  7262   003428                     __end_of_EXTEEPROM_ReadByte:
  7263                           	callstack 0
  7264                           
  7265 ;; *************** function _I2C_Read1ByteRegister *****************
  7266 ;; Defined at:
  7267 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  address         1    wreg     unsigned char 
  7270 ;;  reg             1    9[BANK0 ] unsigned char 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  address         1   10[BANK0 ] unsigned char 
  7273 ;;  returnValue     1   11[BANK0 ] unsigned char 
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  1    wreg      unsigned char 
  7276 ;; Registers used:
  7277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7283 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7284 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;Total ram usage:        3 bytes
  7288 ;; Hardware stack levels used: 1
  7289 ;; Hardware stack levels required when called: 13
  7290 ;; This function calls:
  7291 ;;		_I2C_Close
  7292 ;;		_I2C_MasterWrite
  7293 ;;		_I2C_Open
  7294 ;;		_I2C_SetAddressNackCallback
  7295 ;;		_I2C_SetBuffer
  7296 ;;		_I2C_SetDataCompleteCallback
  7297 ;; This function is called by:
  7298 ;;		_EXTEEPROM_ReadByte
  7299 ;;		_GetDataAndTime
  7300 ;;		_ReadTemp
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text48
  7305   002766                     __ptext48:
  7306                           	callstack 0
  7307   002766                     _I2C_Read1ByteRegister:
  7308                           	callstack 16
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;incstack = 0
  7312                           ;I2C_Read1ByteRegister@address stored from wreg
  7313   002766  0100               	movlb	0	; () banked
  7314   002768  6FE2               	movwf	I2C_Read1ByteRegister@address& (0+255),b
  7315   00276A                     
  7316                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  7317   00276A  0E00               	movlw	0
  7318   00276C  0100               	movlb	0	; () banked
  7319   00276E  6FE3               	movwf	I2C_Read1ByteRegister@returnValue& (0+255),b
  7320   002770                     l6115:
  7321   002770  0100               	movlb	0	; () banked
  7322   002772  51E2               	movf	I2C_Read1ByteRegister@address& (0+255),w,b
  7323   002774  ECDD  F012         	call	_I2C_Open
  7324   002778  0900               	iorlw	0
  7325   00277A  B4D8               	btfsc	status,2,c
  7326   00277C  EFC2  F013         	goto	u3731
  7327   002780  EFC4  F013         	goto	u3730
  7328   002784                     u3731:
  7329   002784  EFB8  F013         	goto	l6115
  7330   002788                     u3730:
  7331   002788                     
  7332                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  7333   002788  0E86               	movlw	low _rd1RegCompleteHandler
  7334   00278A  0100               	movlb	0	; () banked
  7335   00278C  6FDD               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  7336   00278E  0E32               	movlw	high _rd1RegCompleteHandler
  7337   002790  6FDE               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  7338   002792  0EE3               	movlw	low I2C_Read1ByteRegister@returnValue
  7339   002794  6FDF               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  7340   002796  6BE0               	clrf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  7341   002798  EC14  F01A         	call	_I2C_SetDataCompleteCallback	;wreg free
  7342   00279C                     
  7343                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  7344   00279C  0EE1               	movlw	low I2C_Read1ByteRegister@reg
  7345   00279E  0100               	movlb	0	; () banked
  7346   0027A0  6FD8               	movwf	I2C_SetBuffer@buffer& (0+255),b
  7347   0027A2  6BD9               	clrf	(I2C_SetBuffer@buffer+1)& (0+255),b
  7348   0027A4  0E00               	movlw	0
  7349   0027A6  6FDB               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
  7350   0027A8  0E01               	movlw	1
  7351   0027AA  6FDA               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
  7352   0027AC  ECBB  F019         	call	_I2C_SetBuffer	;wreg free
  7353   0027B0                     
  7354                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  7355   0027B0  0E00               	movlw	0
  7356   0027B2  0100               	movlb	0	; () banked
  7357   0027B4  6FDD               	movwf	I2C_SetAddressNackCallback@cb& (0+255),b
  7358   0027B6  0E00               	movlw	0
  7359   0027B8  6FDE               	movwf	(I2C_SetAddressNackCallback@cb+1)& (0+255),b
  7360   0027BA  0E00               	movlw	0
  7361   0027BC  6FDF               	movwf	I2C_SetAddressNackCallback@ptr& (0+255),b
  7362   0027BE  0E00               	movlw	0
  7363   0027C0  6FE0               	movwf	(I2C_SetAddressNackCallback@ptr+1)& (0+255),b
  7364   0027C2  EC20  F01A         	call	_I2C_SetAddressNackCallback	;wreg free
  7365   0027C6                     
  7366                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  7367   0027C6  ECAD  F01A         	call	_I2C_MasterWrite	;wreg free
  7368   0027CA                     l6125:
  7369   0027CA  EC7A  F018         	call	_I2C_Close	;wreg free
  7370   0027CE  06E8               	decf	wreg,f,c
  7371   0027D0  B4D8               	btfsc	status,2,c
  7372   0027D2  EFED  F013         	goto	u3741
  7373   0027D6  EFEF  F013         	goto	u3740
  7374   0027DA                     u3741:
  7375   0027DA  EFE5  F013         	goto	l6125
  7376   0027DE                     u3740:
  7377   0027DE                     
  7378                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  7379   0027DE  0100               	movlb	0	; () banked
  7380   0027E0  51E3               	movf	I2C_Read1ByteRegister@returnValue& (0+255),w,b
  7381   0027E2                     
  7382                           ; BSR set to: 0
  7383   0027E2  0012               	return		;funcret
  7384   0027E4                     __end_of_I2C_Read1ByteRegister:
  7385                           	callstack 0
  7386                           
  7387 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7388 ;; Defined at:
  7389 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  7392 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7393 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7394 ;;  ptr             2    7[BANK0 ] PTR void 
  7395 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7396 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7408 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;Total ram usage:        4 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 11
  7415 ;; This function calls:
  7416 ;;		_I2C_SetCallback
  7417 ;; This function is called by:
  7418 ;;		_I2C_Read1ByteRegister
  7419 ;;		_I2C_Write1ByteRegister
  7420 ;;		_I2C_Read2ByteRegister
  7421 ;;		_I2C_Write2ByteRegister
  7422 ;;		_I2C_ReadDataBlock
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text49
  7427   003428                     __ptext49:
  7428                           	callstack 0
  7429   003428                     _I2C_SetDataCompleteCallback:
  7430                           	callstack 17
  7431   003428                     
  7432                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7433   003428  C0DD  F0D8         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  7434   00342C  C0DE  F0D9         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  7435   003430  C0DF  F0DA         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  7436   003434  C0E0  F0DB         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  7437   003438  0E00               	movlw	0
  7438   00343A  EC0F  F015         	call	_I2C_SetCallback
  7439   00343E  0012               	return		;funcret
  7440   003440                     __end_of_I2C_SetDataCompleteCallback:
  7441                           	callstack 0
  7442                           
  7443 ;; *************** function _I2C_SetBuffer *****************
  7444 ;; Defined at:
  7445 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  buffer          2    0[BANK0 ] PTR void 
  7448 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  7449 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  7450 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  7451 ;;  bufferSize      2    2[BANK0 ] unsigned int 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;		None
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  1    wreg      void 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7463 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;Total ram usage:        4 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; Hardware stack levels required when called: 10
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		_I2C_Read1ByteRegister
  7474 ;;		_I2C_Write1ByteRegister
  7475 ;;		_I2C_Read2ByteRegister
  7476 ;;		_I2C_Write2ByteRegister
  7477 ;;		_I2C_WriteNBytes
  7478 ;;		_I2C_ReadNBytes
  7479 ;;		_I2C_ReadDataBlock
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text50
  7484   003376                     __ptext50:
  7485                           	callstack 0
  7486   003376                     _I2C_SetBuffer:
  7487                           	callstack 18
  7488   003376                     
  7489                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  7490   003376  0100               	movlb	0	; () banked
  7491   003378  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  7492   00337A  EFC1  F019         	goto	u3651
  7493   00337E  EFC3  F019         	goto	u3650
  7494   003382                     u3651:
  7495   003382  EFCC  F019         	goto	l517
  7496   003386                     u3650:
  7497   003386                     
  7498                           ; BSR set to: 0
  7499                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  7500   003386  C0D8  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  7501   00338A  C0D9  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  7502   00338E                     
  7503                           ; BSR set to: 0
  7504                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  7505   00338E  C0DA  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  7506   003392  C0DB  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  7507   003396                     
  7508                           ; BSR set to: 0
  7509                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  7510   003396  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  7511   003398                     l517:
  7512                           
  7513                           ; BSR set to: 0
  7514   003398  0012               	return		;funcret
  7515   00339A                     __end_of_I2C_SetBuffer:
  7516                           	callstack 0
  7517                           
  7518 ;; *************** function _I2C_SetAddressNackCallback *****************
  7519 ;; Defined at:
  7520 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  7523 ;;		 -> NULL(1), 
  7524 ;;  ptr             2    7[BANK0 ] PTR void 
  7525 ;;		 -> NULL(0), 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;		None
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      void 
  7530 ;; Registers used:
  7531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7537 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7540 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7541 ;;Total ram usage:        4 bytes
  7542 ;; Hardware stack levels used: 1
  7543 ;; Hardware stack levels required when called: 11
  7544 ;; This function calls:
  7545 ;;		_I2C_SetCallback
  7546 ;; This function is called by:
  7547 ;;		_I2C_Read1ByteRegister
  7548 ;;		_I2C_Write1ByteRegister
  7549 ;;		_I2C_Read2ByteRegister
  7550 ;;		_I2C_Write2ByteRegister
  7551 ;;		_I2C_WriteNBytes
  7552 ;;		_I2C_ReadDataBlock
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text51
  7557   003440                     __ptext51:
  7558                           	callstack 0
  7559   003440                     _I2C_SetAddressNackCallback:
  7560                           	callstack 17
  7561   003440                     
  7562                           ;mcc_generated_files/i2c_master.c: 284: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 285: {;mcc_generated_files/i2c_master.c:
      +                           286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  7563   003440  C0DD  F0D8         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  7564   003444  C0DE  F0D9         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  7565   003448  C0DF  F0DA         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  7566   00344C  C0E0  F0DB         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  7567   003450  0E02               	movlw	2
  7568   003452  EC0F  F015         	call	_I2C_SetCallback
  7569   003456  0012               	return		;funcret
  7570   003458                     __end_of_I2C_SetAddressNackCallback:
  7571                           	callstack 0
  7572                           
  7573 ;; *************** function _I2C_SetCallback *****************
  7574 ;; Defined at:
  7575 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  idx             1    wreg     enum E3152
  7578 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  7579 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7580 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7581 ;;  ptr             2    2[BANK0 ] PTR void 
  7582 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7583 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;  idx             1    4[BANK0 ] enum E3152
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      void 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7595 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7596 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7598 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;Total ram usage:        5 bytes
  7600 ;; Hardware stack levels used: 1
  7601 ;; Hardware stack levels required when called: 10
  7602 ;; This function calls:
  7603 ;;		Nothing
  7604 ;; This function is called by:
  7605 ;;		_I2C_SetDataCompleteCallback
  7606 ;;		_I2C_SetAddressNackCallback
  7607 ;;		_I2C_SetWriteCollisionCallback
  7608 ;;		_I2C_SetDataNackCallback
  7609 ;;		_I2C_SetTimeoutCallback
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text52
  7614   002A1E                     __ptext52:
  7615                           	callstack 0
  7616   002A1E                     _I2C_SetCallback:
  7617                           	callstack 17
  7618                           
  7619                           ;incstack = 0
  7620                           ;I2C_SetCallback@idx stored from wreg
  7621   002A1E  0100               	movlb	0	; () banked
  7622   002A20  6FDC               	movwf	I2C_SetCallback@idx& (0+255),b
  7623   002A22                     
  7624                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  7625   002A22  0100               	movlb	0	; () banked
  7626   002A24  51D8               	movf	I2C_SetCallback@cb& (0+255),w,b
  7627   002A26  11D9               	iorwf	(I2C_SetCallback@cb+1)& (0+255),w,b
  7628   002A28  B4D8               	btfsc	status,2,c
  7629   002A2A  EF19  F015         	goto	u3621
  7630   002A2E  EF1B  F015         	goto	u3620
  7631   002A32                     u3621:
  7632   002A32  EF31  F015         	goto	l5973
  7633   002A36                     u3620:
  7634   002A36                     
  7635                           ; BSR set to: 0
  7636                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7637   002A36  51DC               	movf	I2C_SetCallback@idx& (0+255),w,b
  7638   002A38  0D02               	mullw	2
  7639   002A3A  50F3               	movf	243,w,c
  7640   002A3C  0F60               	addlw	low _I2C_Status
  7641   002A3E  6ED9               	movwf	fsr2l,c
  7642   002A40  6ADA               	clrf	fsr2h,c
  7643   002A42  C0D8  FFDE         	movff	I2C_SetCallback@cb,postinc2
  7644   002A46  C0D9  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  7645                           
  7646                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  7647   002A4A  51DC               	movf	I2C_SetCallback@idx& (0+255),w,b
  7648   002A4C  0D02               	mullw	2
  7649   002A4E  50F3               	movf	243,w,c
  7650   002A50  0F6C               	addlw	low (_I2C_Status+12)
  7651   002A52  6ED9               	movwf	fsr2l,c
  7652   002A54  6ADA               	clrf	fsr2h,c
  7653   002A56  C0DA  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  7654   002A5A  C0DB  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  7655                           
  7656                           ;mcc_generated_files/i2c_master.c: 310:     }
  7657   002A5E  EF43  F015         	goto	l540
  7658   002A62                     l5973:
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7662   002A62  51DC               	movf	I2C_SetCallback@idx& (0+255),w,b
  7663   002A64  0D02               	mullw	2
  7664   002A66  50F3               	movf	243,w,c
  7665   002A68  0F60               	addlw	low _I2C_Status
  7666   002A6A  6ED9               	movwf	fsr2l,c
  7667   002A6C  6ADA               	clrf	fsr2h,c
  7668   002A6E  0EF4               	movlw	low _I2C_CallbackReturnStop
  7669   002A70  6EDE               	movwf	postinc2,c
  7670   002A72  0E35               	movlw	high _I2C_CallbackReturnStop
  7671   002A74  6EDD               	movwf	postdec2,c
  7672                           
  7673                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7674   002A76  51DC               	movf	I2C_SetCallback@idx& (0+255),w,b
  7675   002A78  0D02               	mullw	2
  7676   002A7A  50F3               	movf	243,w,c
  7677   002A7C  0F6C               	addlw	low (_I2C_Status+12)
  7678   002A7E  6ED9               	movwf	fsr2l,c
  7679   002A80  6ADA               	clrf	fsr2h,c
  7680   002A82  6ADE               	clrf	postinc2,c
  7681   002A84  6ADD               	clrf	postdec2,c
  7682   002A86                     l540:
  7683                           
  7684                           ; BSR set to: 0
  7685   002A86  0012               	return		;funcret
  7686   002A88                     __end_of_I2C_SetCallback:
  7687                           	callstack 0
  7688                           
  7689 ;; *************** function _I2C_Open *****************
  7690 ;; Defined at:
  7691 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  address         1    wreg     unsigned char 
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;  address         1    2[BANK0 ] unsigned char 
  7696 ;;  returnValue     1    3[BANK0 ] enum E358
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  1    wreg      enum E358
  7699 ;; Registers used:
  7700 ;;		wreg, status,2, status,0, cstack
  7701 ;; Tracked objects:
  7702 ;;		On entry : 0/0
  7703 ;;		On exit  : 0/0
  7704 ;;		Unchanged: 0/0
  7705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7710 ;;Total ram usage:        2 bytes
  7711 ;; Hardware stack levels used: 1
  7712 ;; Hardware stack levels required when called: 11
  7713 ;; This function calls:
  7714 ;;		_I2C_MasterClearIrq
  7715 ;;		_I2C_MasterEnableIrq
  7716 ;;		_I2C_MasterOpen
  7717 ;;		_I2C_SetInterruptHandler
  7718 ;; This function is called by:
  7719 ;;		_I2C_Read1ByteRegister
  7720 ;;		_I2C_Write1ByteRegister
  7721 ;;		_I2C_Read2ByteRegister
  7722 ;;		_I2C_Write2ByteRegister
  7723 ;;		_I2C_WriteNBytes
  7724 ;;		_I2C_ReadNBytes
  7725 ;;		_I2C_ReadDataBlock
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text53
  7730   0025BA                     __ptext53:
  7731                           	callstack 0
  7732   0025BA                     _I2C_Open:
  7733                           	callstack 17
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;incstack = 0
  7737                           ;I2C_Open@address stored from wreg
  7738   0025BA  0100               	movlb	0	; () banked
  7739   0025BC  6FDA               	movwf	I2C_Open@address& (0+255),b
  7740   0025BE                     
  7741                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  7742   0025BE  0E01               	movlw	1
  7743   0025C0  0100               	movlb	0	; () banked
  7744   0025C2  6FDB               	movwf	I2C_Open@returnValue& (0+255),b
  7745   0025C4                     
  7746                           ; BSR set to: 0
  7747                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  7748   0025C4  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  7749   0025C6  EFE7  F012         	goto	u3641
  7750   0025CA  EFE9  F012         	goto	u3640
  7751   0025CE                     u3641:
  7752   0025CE  EF2C  F013         	goto	l6035
  7753   0025D2                     u3640:
  7754   0025D2                     
  7755                           ; BSR set to: 0
  7756                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  7757   0025D2  C0DA  F07C         	movff	I2C_Open@address,_I2C_Status+28
  7758   0025D6                     
  7759                           ; BSR set to: 0
  7760                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  7761   0025D6  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  7762   0025D8                     
  7763                           ; BSR set to: 0
  7764                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  7765   0025D8  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  7766   0025DA                     
  7767                           ; BSR set to: 0
  7768                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  7769   0025DA  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  7770   0025DC                     
  7771                           ; BSR set to: 0
  7772                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  7773   0025DC  0E0E               	movlw	14
  7774   0025DE  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  7775   0025E0                     
  7776                           ; BSR set to: 0
  7777                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  7778   0025E0  0E01               	movlw	1
  7779   0025E2  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  7780   0025E4  0EF4               	movlw	244
  7781   0025E6  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  7782   0025E8                     
  7783                           ; BSR set to: 0
  7784                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  7785   0025E8  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  7786   0025EA                     
  7787                           ; BSR set to: 0
  7788                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  7789   0025EA  0EF4               	movlw	low _I2C_CallbackReturnStop
  7790   0025EC  6F60               	movwf	_I2C_Status& (0+255),b
  7791   0025EE  0E35               	movlw	high _I2C_CallbackReturnStop
  7792   0025F0  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  7793   0025F2                     
  7794                           ; BSR set to: 0
  7795                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  7796   0025F2  0E00               	movlw	0
  7797   0025F4  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  7798   0025F6  0E00               	movlw	0
  7799   0025F8  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  7800   0025FA                     
  7801                           ; BSR set to: 0
  7802                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  7803   0025FA  0EF4               	movlw	low _I2C_CallbackReturnStop
  7804   0025FC  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  7805   0025FE  0E35               	movlw	high _I2C_CallbackReturnStop
  7806   002600  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  7807   002602                     
  7808                           ; BSR set to: 0
  7809                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  7810   002602  0E00               	movlw	0
  7811   002604  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  7812   002606  0E00               	movlw	0
  7813   002608  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  7814   00260A                     
  7815                           ; BSR set to: 0
  7816                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  7817   00260A  0EF4               	movlw	low _I2C_CallbackReturnStop
  7818   00260C  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  7819   00260E  0E35               	movlw	high _I2C_CallbackReturnStop
  7820   002610  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  7821   002612                     
  7822                           ; BSR set to: 0
  7823                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  7824   002612  0E00               	movlw	0
  7825   002614  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  7826   002616  0E00               	movlw	0
  7827   002618  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  7828   00261A                     
  7829                           ; BSR set to: 0
  7830                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  7831   00261A  0EF4               	movlw	low _I2C_CallbackReturnStop
  7832   00261C  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  7833   00261E  0E35               	movlw	high _I2C_CallbackReturnStop
  7834   002620  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  7835   002622                     
  7836                           ; BSR set to: 0
  7837                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  7838   002622  0E00               	movlw	0
  7839   002624  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  7840   002626  0E00               	movlw	0
  7841   002628  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  7842   00262A                     
  7843                           ; BSR set to: 0
  7844                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  7845   00262A  0EF0               	movlw	low _I2C_CallbackReturnReset
  7846   00262C  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  7847   00262E  0E35               	movlw	high _I2C_CallbackReturnReset
  7848   002630  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  7849   002632                     
  7850                           ; BSR set to: 0
  7851                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  7852   002632  0E00               	movlw	0
  7853   002634  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  7854   002636  0E00               	movlw	0
  7855   002638  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  7856   00263A                     
  7857                           ; BSR set to: 0
  7858                           ;mcc_generated_files/i2c_master.c: 202:         I2C_SetInterruptHandler(I2C_MasterIsr);
  7859   00263A  0EBA               	movlw	low _I2C_MasterIsr
  7860   00263C  6FD8               	movwf	I2C_SetInterruptHandler@InterruptHandler& (0+255),b
  7861   00263E  0E35               	movlw	high _I2C_MasterIsr
  7862   002640  6FD9               	movwf	(I2C_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7863   002642  ECA8  F01A         	call	_I2C_SetInterruptHandler	;wreg free
  7864   002646                     
  7865                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterClearIrq();
  7866   002646  ECEE  F01A         	call	_I2C_MasterClearIrq	;wreg free
  7867   00264A                     
  7868                           ;mcc_generated_files/i2c_master.c: 204:         I2C_MasterOpen();
  7869   00264A  ECDF  F019         	call	_I2C_MasterOpen	;wreg free
  7870   00264E                     
  7871                           ;mcc_generated_files/i2c_master.c: 205:         I2C_MasterEnableIrq();
  7872   00264E  ECE6  F01A         	call	_I2C_MasterEnableIrq	;wreg free
  7873   002652                     
  7874                           ;mcc_generated_files/i2c_master.c: 206:         returnValue = I2C_NOERR;
  7875   002652  0E00               	movlw	0
  7876   002654  0100               	movlb	0	; () banked
  7877   002656  6FDB               	movwf	I2C_Open@returnValue& (0+255),b
  7878   002658                     l6035:
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;mcc_generated_files/i2c_master.c: 208:     return returnValue;
  7882   002658  51DB               	movf	I2C_Open@returnValue& (0+255),w,b
  7883   00265A                     
  7884                           ; BSR set to: 0
  7885   00265A  0012               	return		;funcret
  7886   00265C                     __end_of_I2C_Open:
  7887                           	callstack 0
  7888                           
  7889 ;; *************** function _I2C_SetInterruptHandler *****************
  7890 ;; Defined at:
  7891 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7894 ;;		 -> I2C_MasterIsr(1), 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1    wreg      void 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;Total ram usage:        2 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; Hardware stack levels required when called: 10
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_I2C_Open
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text54
  7921   003550                     __ptext54:
  7922                           	callstack 0
  7923   003550                     _I2C_SetInterruptHandler:
  7924                           	callstack 17
  7925   003550                     
  7926                           ;mcc_generated_files/i2c_master.c: 299: void I2C_SetInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/i2c_master.c: 300: {;mcc_generated_files/i2c_master.c:
      +                           301:     MSSP_InterruptHandler = InterruptHandler;
  7927   003550  C0D8  F02C         	movff	I2C_SetInterruptHandler@InterruptHandler,_MSSP_InterruptHandler
  7928   003554  C0D9  F02D         	movff	I2C_SetInterruptHandler@InterruptHandler+1,_MSSP_InterruptHandler+1
  7929   003558  0012               	return		;funcret
  7930   00355A                     __end_of_I2C_SetInterruptHandler:
  7931                           	callstack 0
  7932                           
  7933 ;; *************** function _I2C_MasterOpen *****************
  7934 ;; Defined at:
  7935 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;		None
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;		None
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      _Bool 
  7942 ;; Registers used:
  7943 ;;		wreg, status,2
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;Total ram usage:        0 bytes
  7954 ;; Hardware stack levels used: 1
  7955 ;; Hardware stack levels required when called: 10
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_I2C_Open
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text55
  7964   0033BE                     __ptext55:
  7965                           	callstack 0
  7966   0033BE                     _I2C_MasterOpen:
  7967                           	callstack 17
  7968   0033BE                     
  7969                           ;mcc_generated_files/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  7970   0033BE  BAC6               	btfsc	198,5,c	;volatile
  7971   0033C0  EFE4  F019         	goto	u3591
  7972   0033C4  EFE6  F019         	goto	u3590
  7973   0033C8                     u3591:
  7974   0033C8  EFEF  F019         	goto	l659
  7975   0033CC                     u3590:
  7976   0033CC                     
  7977                           ;mcc_generated_files/i2c_master.c: 547:     {;mcc_generated_files/i2c_master.c: 548:    
      +                               SSPSTAT = 0x00;
  7978   0033CC  0E00               	movlw	0
  7979   0033CE  6EC7               	movwf	199,c	;volatile
  7980                           
  7981                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON1 = 0x08;
  7982   0033D0  0E08               	movlw	8
  7983   0033D2  6EC6               	movwf	198,c	;volatile
  7984                           
  7985                           ;mcc_generated_files/i2c_master.c: 550:         SSPCON2 = 0x00;
  7986   0033D4  0E00               	movlw	0
  7987   0033D6  6EC5               	movwf	197,c	;volatile
  7988                           
  7989                           ;mcc_generated_files/i2c_master.c: 551:         SSPADD = 0x27;
  7990   0033D8  0E27               	movlw	39
  7991   0033DA  6EC8               	movwf	200,c	;volatile
  7992   0033DC                     
  7993                           ;mcc_generated_files/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  7994   0033DC  8AC6               	bsf	198,5,c	;volatile
  7995   0033DE                     l659:
  7996   0033DE  0012               	return		;funcret
  7997   0033E0                     __end_of_I2C_MasterOpen:
  7998                           	callstack 0
  7999                           
  8000 ;; *************** function _I2C_MasterEnableIrq *****************
  8001 ;; Defined at:
  8002 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;		None
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		None
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8020 ;;Total ram usage:        0 bytes
  8021 ;; Hardware stack levels used: 1
  8022 ;; Hardware stack levels required when called: 10
  8023 ;; This function calls:
  8024 ;;		Nothing
  8025 ;; This function is called by:
  8026 ;;		_I2C_Open
  8027 ;;		_I2C_SetTimeOut
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text56
  8032   0035CC                     __ptext56:
  8033                           	callstack 0
  8034   0035CC                     _I2C_MasterEnableIrq:
  8035                           	callstack 17
  8036   0035CC                     
  8037                           ;mcc_generated_files/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  8038   0035CC  869D               	bsf	157,3,c	;volatile
  8039   0035CE  0012               	return		;funcret
  8040   0035D0                     __end_of_I2C_MasterEnableIrq:
  8041                           	callstack 0
  8042                           
  8043 ;; *************** function _I2C_MasterWrite *****************
  8044 ;; Defined at:
  8045 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;		None
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      enum E358
  8052 ;; Registers used:
  8053 ;;		wreg, status,2, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;Total ram usage:        0 bytes
  8064 ;; Hardware stack levels used: 1
  8065 ;; Hardware stack levels required when called: 12
  8066 ;; This function calls:
  8067 ;;		_I2C_MasterOperation
  8068 ;; This function is called by:
  8069 ;;		_I2C_Read1ByteRegister
  8070 ;;		_I2C_Write1ByteRegister
  8071 ;;		_I2C_Read2ByteRegister
  8072 ;;		_I2C_Write2ByteRegister
  8073 ;;		_I2C_WriteNBytes
  8074 ;;		_I2C_ReadDataBlock
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text57
  8079   00355A                     __ptext57:
  8080                           	callstack 0
  8081   00355A                     _I2C_MasterWrite:
  8082                           	callstack 16
  8083   00355A                     
  8084                           ;mcc_generated_files/i2c_master.c: 254:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  8085   00355A  0E00               	movlw	0
  8086   00355C  EC95  F017         	call	_I2C_MasterOperation
  8087   003560  0012               	return		;funcret
  8088   003562                     __end_of_I2C_MasterWrite:
  8089                           	callstack 0
  8090                           
  8091 ;; *************** function _I2C_MasterOperation *****************
  8092 ;; Defined at:
  8093 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  read            1    wreg     _Bool 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;  read            1    0[BANK0 ] _Bool 
  8098 ;;  returnValue     1    1[BANK0 ] enum E358
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      enum E358
  8101 ;; Registers used:
  8102 ;;		wreg, status,2, cstack
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;Total ram usage:        2 bytes
  8113 ;; Hardware stack levels used: 1
  8114 ;; Hardware stack levels required when called: 11
  8115 ;; This function calls:
  8116 ;;		_I2C_MasterStart
  8117 ;; This function is called by:
  8118 ;;		_I2C_MasterWrite
  8119 ;;		_I2C_MasterRead
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text58
  8124   002F2A                     __ptext58:
  8125                           	callstack 0
  8126   002F2A                     _I2C_MasterOperation:
  8127                           	callstack 16
  8128                           
  8129                           ;incstack = 0
  8130                           ;I2C_MasterOperation@read stored from wreg
  8131   002F2A  0100               	movlb	0	; () banked
  8132   002F2C  6FD8               	movwf	I2C_MasterOperation@read& (0+255),b
  8133   002F2E                     
  8134                           ;mcc_generated_files/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 227: {;mcc_generated_files/i2c_master.c: 228:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8135   002F2E  0E01               	movlw	1
  8136   002F30  0100               	movlb	0	; () banked
  8137   002F32  6FD9               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  8138   002F34                     
  8139                           ; BSR set to: 0
  8140                           ;mcc_generated_files/i2c_master.c: 229:     if(!I2C_Status.busy)
  8141   002F34  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  8142   002F36  EF9F  F017         	goto	u3601
  8143   002F3A  EFA1  F017         	goto	u3600
  8144   002F3E                     u3601:
  8145   002F3E  EFB4  F017         	goto	l5965
  8146   002F42                     u3600:
  8147   002F42                     
  8148                           ; BSR set to: 0
  8149                           ;mcc_generated_files/i2c_master.c: 230:     {;mcc_generated_files/i2c_master.c: 231:    
      +                               I2C_Status.busy = 1;
  8150   002F42  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  8151   002F44                     
  8152                           ; BSR set to: 0
  8153                           ;mcc_generated_files/i2c_master.c: 232:         returnValue = I2C_NOERR;
  8154   002F44  0E00               	movlw	0
  8155   002F46  6FD9               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  8156   002F48                     
  8157                           ; BSR set to: 0
  8158                           ;mcc_generated_files/i2c_master.c: 234:         if(read)
  8159   002F48  51D8               	movf	I2C_MasterOperation@read& (0+255),w,b
  8160   002F4A  B4D8               	btfsc	status,2,c
  8161   002F4C  EFAA  F017         	goto	u3611
  8162   002F50  EFAC  F017         	goto	u3610
  8163   002F54                     u3611:
  8164   002F54  EFB0  F017         	goto	l5961
  8165   002F58                     u3610:
  8166   002F58                     
  8167                           ; BSR set to: 0
  8168                           ;mcc_generated_files/i2c_master.c: 235:         {;mcc_generated_files/i2c_master.c: 236:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  8169   002F58  0E01               	movlw	1
  8170   002F5A  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8171                           
  8172                           ;mcc_generated_files/i2c_master.c: 237:         }
  8173   002F5C  EFB2  F017         	goto	l5963
  8174   002F60                     l5961:
  8175                           
  8176                           ; BSR set to: 0
  8177                           ;mcc_generated_files/i2c_master.c: 239:         {;mcc_generated_files/i2c_master.c: 240:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  8178   002F60  0E02               	movlw	2
  8179   002F62  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8180   002F64                     l5963:
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;mcc_generated_files/i2c_master.c: 242:         I2C_MasterStart();
  8184   002F64  ECE8  F01A         	call	_I2C_MasterStart	;wreg free
  8185   002F68                     l5965:
  8186                           
  8187                           ;mcc_generated_files/i2c_master.c: 244:     return returnValue;
  8188   002F68  0100               	movlb	0	; () banked
  8189   002F6A  51D9               	movf	I2C_MasterOperation@returnValue& (0+255),w,b
  8190   002F6C                     
  8191                           ; BSR set to: 0
  8192   002F6C  0012               	return		;funcret
  8193   002F6E                     __end_of_I2C_MasterOperation:
  8194                           	callstack 0
  8195                           
  8196 ;; *************** function _I2C_MasterStart *****************
  8197 ;; Defined at:
  8198 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;		None
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;		None
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		None
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8216 ;;Total ram usage:        0 bytes
  8217 ;; Hardware stack levels used: 1
  8218 ;; Hardware stack levels required when called: 10
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		_I2C_MasterOperation
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text59
  8227   0035D0                     __ptext59:
  8228                           	callstack 0
  8229   0035D0                     _I2C_MasterStart:
  8230                           	callstack 16
  8231   0035D0                     
  8232                           ;mcc_generated_files/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  8233   0035D0  80C5               	bsf	197,0,c	;volatile
  8234   0035D2  0012               	return		;funcret
  8235   0035D4                     __end_of_I2C_MasterStart:
  8236                           	callstack 0
  8237                           
  8238 ;; *************** function _I2C_Close *****************
  8239 ;; Defined at:
  8240 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;		None
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  returnValue     1    0[BANK0 ] enum E358
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      enum E358
  8247 ;; Registers used:
  8248 ;;		wreg, status,2, cstack
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8257 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8258 ;;Total ram usage:        1 bytes
  8259 ;; Hardware stack levels used: 1
  8260 ;; Hardware stack levels required when called: 11
  8261 ;; This function calls:
  8262 ;;		_I2C_MasterClearIrq
  8263 ;;		_I2C_MasterClose
  8264 ;;		_I2C_MasterDisableIrq
  8265 ;; This function is called by:
  8266 ;;		_I2C_Read1ByteRegister
  8267 ;;		_I2C_Write1ByteRegister
  8268 ;;		_I2C_Read2ByteRegister
  8269 ;;		_I2C_Write2ByteRegister
  8270 ;;		_I2C_WriteNBytes
  8271 ;;		_I2C_ReadNBytes
  8272 ;;		_I2C_ReadDataBlock
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           	psect	text60
  8277   0030F4                     __ptext60:
  8278                           	callstack 0
  8279   0030F4                     _I2C_Close:
  8280                           	callstack 17
  8281   0030F4                     
  8282                           ;mcc_generated_files/i2c_master.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  8283   0030F4  0E01               	movlw	1
  8284   0030F6  0100               	movlb	0	; () banked
  8285   0030F8  6FD8               	movwf	I2C_Close@returnValue& (0+255),b
  8286   0030FA                     
  8287                           ; BSR set to: 0
  8288                           ;mcc_generated_files/i2c_master.c: 214:     if(!I2C_Status.busy)
  8289   0030FA  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  8290   0030FC  EF82  F018         	goto	u3661
  8291   003100  EF84  F018         	goto	u3660
  8292   003104                     u3661:
  8293   003104  EF8E  F018         	goto	l6065
  8294   003108                     u3660:
  8295   003108                     
  8296                           ; BSR set to: 0
  8297                           ;mcc_generated_files/i2c_master.c: 215:     {;mcc_generated_files/i2c_master.c: 216:    
      +                               I2C_Status.inUse = 0;
  8298   003108  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  8299                           
  8300                           ;mcc_generated_files/i2c_master.c: 217:         I2C_Status.address = 0xff;
  8301   00310A  697C               	setf	(_I2C_Status+28)& (0+255),b
  8302   00310C                     
  8303                           ; BSR set to: 0
  8304                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClearIrq();
  8305   00310C  ECEE  F01A         	call	_I2C_MasterClearIrq	;wreg free
  8306                           
  8307                           ;mcc_generated_files/i2c_master.c: 219:         I2C_MasterDisableIrq();
  8308   003110  ECEA  F01A         	call	_I2C_MasterDisableIrq	;wreg free
  8309                           
  8310                           ;mcc_generated_files/i2c_master.c: 220:         I2C_MasterClose();
  8311   003114  ECEC  F01A         	call	_I2C_MasterClose	;wreg free
  8312   003118                     
  8313                           ;mcc_generated_files/i2c_master.c: 221:         returnValue = I2C_Status.error;
  8314   003118  C082  F0D8         	movff	_I2C_Status+34,I2C_Close@returnValue
  8315   00311C                     l6065:
  8316                           
  8317                           ;mcc_generated_files/i2c_master.c: 223:     return returnValue;
  8318   00311C  0100               	movlb	0	; () banked
  8319   00311E  51D8               	movf	I2C_Close@returnValue& (0+255),w,b
  8320   003120                     
  8321                           ; BSR set to: 0
  8322   003120  0012               	return		;funcret
  8323   003122                     __end_of_I2C_Close:
  8324                           	callstack 0
  8325                           
  8326 ;; *************** function _I2C_MasterDisableIrq *****************
  8327 ;; Defined at:
  8328 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;		None
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;		None
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  1    wreg      void 
  8335 ;; Registers used:
  8336 ;;		None
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8346 ;;Total ram usage:        0 bytes
  8347 ;; Hardware stack levels used: 1
  8348 ;; Hardware stack levels required when called: 10
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_I2C_Close
  8353 ;;		_I2C_SetTimeOut
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text61
  8358   0035D4                     __ptext61:
  8359                           	callstack 0
  8360   0035D4                     _I2C_MasterDisableIrq:
  8361                           	callstack 17
  8362   0035D4                     
  8363                           ;mcc_generated_files/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  8364   0035D4  969D               	bcf	157,3,c	;volatile
  8365   0035D6  0012               	return		;funcret
  8366   0035D8                     __end_of_I2C_MasterDisableIrq:
  8367                           	callstack 0
  8368                           
  8369 ;; *************** function _I2C_MasterClose *****************
  8370 ;; Defined at:
  8371 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;		None
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;		None
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		None
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;Total ram usage:        0 bytes
  8390 ;; Hardware stack levels used: 1
  8391 ;; Hardware stack levels required when called: 10
  8392 ;; This function calls:
  8393 ;;		Nothing
  8394 ;; This function is called by:
  8395 ;;		_I2C_Close
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text62
  8400   0035D8                     __ptext62:
  8401                           	callstack 0
  8402   0035D8                     _I2C_MasterClose:
  8403                           	callstack 17
  8404   0035D8                     
  8405                           ;mcc_generated_files/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  8406   0035D8  9AC6               	bcf	198,5,c	;volatile
  8407   0035DA  0012               	return		;funcret
  8408   0035DC                     __end_of_I2C_MasterClose:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function _I2C_MasterClearIrq *****************
  8412 ;; Defined at:
  8413 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;		None
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;		None
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  1    wreg      void 
  8420 ;; Registers used:
  8421 ;;		None
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;Total ram usage:        0 bytes
  8432 ;; Hardware stack levels used: 1
  8433 ;; Hardware stack levels required when called: 10
  8434 ;; This function calls:
  8435 ;;		Nothing
  8436 ;; This function is called by:
  8437 ;;		_I2C_Open
  8438 ;;		_I2C_Close
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text63
  8443   0035DC                     __ptext63:
  8444                           	callstack 0
  8445   0035DC                     _I2C_MasterClearIrq:
  8446                           	callstack 17
  8447   0035DC                     
  8448                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  8449   0035DC  969E               	bcf	158,3,c	;volatile
  8450   0035DE  0012               	return		;funcret
  8451   0035E0                     __end_of_I2C_MasterClearIrq:
  8452                           	callstack 0
  8453                           
  8454 ;; *************** function _ADC_GetConversion *****************
  8455 ;; Defined at:
  8456 ;;		line 115 in file "mcc_generated_files/adc.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  channel         1    wreg     enum E2740
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;  channel         1    4[BANK0 ] enum E2740
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  2    0[BANK0 ] unsigned short 
  8463 ;; Registers used:
  8464 ;;		wreg, status,2, status,0
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;Total ram usage:        5 bytes
  8475 ;; Hardware stack levels used: 1
  8476 ;; Hardware stack levels required when called: 10
  8477 ;; This function calls:
  8478 ;;		Nothing
  8479 ;; This function is called by:
  8480 ;;		_main
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text64
  8485   002FB0                     __ptext64:
  8486                           	callstack 0
  8487   002FB0                     _ADC_GetConversion:
  8488                           	callstack 20
  8489                           
  8490                           ;incstack = 0
  8491                           ;ADC_GetConversion@channel stored from wreg
  8492   002FB0  0100               	movlb	0	; () banked
  8493   002FB2  6FDC               	movwf	ADC_GetConversion@channel& (0+255),b
  8494   002FB4                     
  8495                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  8496   002FB4  C0DC  F0DA         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  8497   002FB8  0100               	movlb	0	; () banked
  8498   002FBA  47DA               	rlncf	??_ADC_GetConversion& (0+255),f,b
  8499   002FBC  47DA               	rlncf	??_ADC_GetConversion& (0+255),f,b
  8500   002FBE  50C2               	movf	194,w,c	;volatile
  8501   002FC0  19DA               	xorwf	??_ADC_GetConversion& (0+255),w,b
  8502   002FC2  0BC3               	andlw	-61
  8503   002FC4  19DA               	xorwf	??_ADC_GetConversion& (0+255),w,b
  8504   002FC6  6EC2               	movwf	194,c	;volatile
  8505   002FC8                     
  8506                           ; BSR set to: 0
  8507                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  8508   002FC8  80C2               	bsf	194,0,c	;volatile
  8509   002FCA                     
  8510                           ; BSR set to: 0
  8511                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  8512   002FCA  82C2               	bsf	194,1,c	;volatile
  8513   002FCC                     l815:
  8514                           
  8515                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  8516   002FCC  B2C2               	btfsc	194,1,c	;volatile
  8517   002FCE  EFEB  F017         	goto	u4141
  8518   002FD2  EFED  F017         	goto	u4140
  8519   002FD6                     u4141:
  8520   002FD6  EFE6  F017         	goto	l815
  8521   002FDA                     u4140:
  8522   002FDA                     
  8523                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8524   002FDA  50C4               	movf	196,w,c	;volatile
  8525   002FDC  0100               	movlb	0	; () banked
  8526   002FDE  6FDB               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  8527   002FE0  6BDA               	clrf	??_ADC_GetConversion& (0+255),b
  8528   002FE2  50C3               	movf	195,w,c	;volatile
  8529   002FE4  25DA               	addwf	??_ADC_GetConversion& (0+255),w,b
  8530   002FE6  6FD8               	movwf	?_ADC_GetConversion& (0+255),b
  8531   002FE8  0E00               	movlw	0
  8532   002FEA  21DB               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  8533   002FEC  6FD9               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  8534   002FEE                     
  8535                           ; BSR set to: 0
  8536   002FEE  0012               	return		;funcret
  8537   002FF0                     __end_of_ADC_GetConversion:
  8538                           	callstack 0
  8539                           
  8540 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  8541 ;; Defined at:
  8542 ;;		line 108 in file "mcc_generated_files/interrupt_manager.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;		None
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;		None
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  1    wreg      void 
  8549 ;; Registers used:
  8550 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8558 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;Total ram usage:        5 bytes
  8561 ;; Hardware stack levels used: 1
  8562 ;; Hardware stack levels required when called: 9
  8563 ;; This function calls:
  8564 ;;		_ADC_ISR
  8565 ;; This function is called by:
  8566 ;;		Interrupt level 1
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           	psect	intcodelo
  8571   000018                     __pintcodelo:
  8572                           	callstack 0
  8573   000018                     _INTERRUPT_InterruptManagerLow:
  8574                           	callstack 11
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;incstack = 0
  8578   000018  8041               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8579   00001A  CFD8 F01C          	movff	status,??_INTERRUPT_InterruptManagerLow
  8580   00001E  CFE8 F01D          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  8581   000022  CFE0 F01E          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  8582   000026  CFFA F01F          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  8583   00002A  CFFB F020          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  8584   00002E                     
  8585                           ;mcc_generated_files/interrupt_manager.c: 111:     if(PIE1bits.ADIE == 1 && PIR1bits.ADI
      +                          F == 1)
  8586   00002E  AC9D               	btfss	157,6,c	;volatile
  8587   000030  EF1C  F000         	goto	i1u312_21
  8588   000034  EF1E  F000         	goto	i1u312_20
  8589   000038                     i1u312_21:
  8590   000038  EF27  F000         	goto	i1l773
  8591   00003C                     i1u312_20:
  8592   00003C  AC9E               	btfss	158,6,c	;volatile
  8593   00003E  EF23  F000         	goto	i1u313_21
  8594   000042  EF25  F000         	goto	i1u313_20
  8595   000046                     i1u313_21:
  8596   000046  EF27  F000         	goto	i1l773
  8597   00004A                     i1u313_20:
  8598   00004A                     
  8599                           ;mcc_generated_files/interrupt_manager.c: 112:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 113:         ADC_ISR();
  8600   00004A  EC91  F018         	call	_ADC_ISR	;wreg free
  8601   00004E                     i1l773:
  8602   00004E  C020  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  8603   000052  C01F  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  8604   000056  C01E  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  8605   00005A  C01D  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  8606   00005E  C01C  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  8607   000062  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8608   000064  0010               	retfie	
  8609   000066                     __end_of_INTERRUPT_InterruptManagerLow:
  8610                           	callstack 0
  8611                           
  8612 ;; *************** function _ADC_ISR *****************
  8613 ;; Defined at:
  8614 ;;		line 140 in file "mcc_generated_files/adc.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;		None
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1    wreg      void 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8632 ;;Total ram usage:        0 bytes
  8633 ;; Hardware stack levels used: 1
  8634 ;; Hardware stack levels required when called: 8
  8635 ;; This function calls:
  8636 ;;		NULL
  8637 ;;		_ADC_DefaultInterruptHandler
  8638 ;;		_lightSwitch
  8639 ;; This function is called by:
  8640 ;;		_INTERRUPT_InterruptManagerLow
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text66
  8645   003122                     __ptext66:
  8646                           	callstack 0
  8647   003122                     _ADC_ISR:
  8648                           	callstack 11
  8649   003122                     
  8650                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  8651   003122  9C9E               	bcf	158,6,c	;volatile
  8652   003124                     
  8653                           ;mcc_generated_files/adc.c: 145:  if(ADC_InterruptHandler)
  8654   003124  503E               	movf	_ADC_InterruptHandler^0,w,c
  8655   003126  103F               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  8656   003128  B4D8               	btfsc	status,2,c
  8657   00312A  EF99  F018         	goto	i1u279_21
  8658   00312E  EF9B  F018         	goto	i1u279_20
  8659   003132                     i1u279_21:
  8660   003132  EFA7  F018         	goto	i1l825
  8661   003136                     i1u279_20:
  8662   003136                     
  8663                           ;mcc_generated_files/adc.c: 146:     {;mcc_generated_files/adc.c: 147:         ADC_Inter
      +                          ruptHandler();
  8664   003136  D802               	call	i1u280_28
  8665   003138  EFA7  F018         	goto	i1u280_29
  8666   00313C                     i1u280_28:
  8667   00313C  0005               	push	
  8668   00313E  6EFA               	movwf	pclath,c
  8669   003140  503E               	movf	_ADC_InterruptHandler^0,w,c
  8670   003142  6EFD               	movwf	tosl,c
  8671   003144  503F               	movf	(_ADC_InterruptHandler+1)^0,w,c
  8672   003146  6EFE               	movwf	tosh,c
  8673   003148  6AFF               	clrf	tosu,c
  8674   00314A  50FA               	movf	pclath,w,c
  8675   00314C  0012               	return		;indir
  8676   00314E                     i1u280_29:
  8677   00314E                     i1l825:
  8678   00314E  0012               	return		;funcret
  8679   003150                     __end_of_ADC_ISR:
  8680                           	callstack 0
  8681                           
  8682 ;; *************** function _ADC_DefaultInterruptHandler *****************
  8683 ;; Defined at:
  8684 ;;		line 155 in file "mcc_generated_files/adc.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;		None
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;		None
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		None
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8702 ;;Total ram usage:        0 bytes
  8703 ;; Hardware stack levels used: 1
  8704 ;; Hardware stack levels required when called: 7
  8705 ;; This function calls:
  8706 ;;		Nothing
  8707 ;; This function is called by:
  8708 ;;		_ADC_Initialize
  8709 ;;		_ADC_ISR
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           	psect	text67
  8714   003602                     __ptext67:
  8715                           	callstack 0
  8716   003602                     _ADC_DefaultInterruptHandler:
  8717                           	callstack 11
  8718   003602  0012               	return		;funcret
  8719   003604                     __end_of_ADC_DefaultInterruptHandler:
  8720                           	callstack 0
  8721                           
  8722 ;; *************** function _lightSwitch *****************
  8723 ;; Defined at:
  8724 ;;		line 108 in file "main.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;		None
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;		None
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  1    wreg      void 
  8731 ;; Registers used:
  8732 ;;		wreg, status,2, status,0
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8742 ;;Total ram usage:        0 bytes
  8743 ;; Hardware stack levels used: 1
  8744 ;; Hardware stack levels required when called: 7
  8745 ;; This function calls:
  8746 ;;		Nothing
  8747 ;; This function is called by:
  8748 ;;		_main
  8749 ;;		_ADC_ISR
  8750 ;; This function uses a non-reentrant model
  8751 ;;
  8752                           
  8753                           	psect	text68
  8754   002A88                     __ptext68:
  8755                           	callstack 0
  8756   002A88                     _lightSwitch:
  8757                           	callstack 11
  8758   002A88                     
  8759                           ;main.c: 109:     if (homelightauto == 1){
  8760   002A88  0100               	movlb	0	; () banked
  8761   002A8A  05CB               	decf	_homelightauto& (0+255),w,b
  8762   002A8C  A4D8               	btfss	status,2,c
  8763   002A8E  EF4B  F015         	goto	i1u268_21
  8764   002A92  EF4D  F015         	goto	i1u268_20
  8765   002A96                     i1u268_21:
  8766   002A96  EF5C  F015         	goto	i1l4869
  8767   002A9A                     i1u268_20:
  8768   002A9A                     
  8769                           ; BSR set to: 0
  8770                           ;main.c: 111:         if (lightread <= 10000){
  8771   002A9A  0E11               	movlw	17
  8772   002A9C  5D8B               	subwf	_lightread& (0+255),w,b
  8773   002A9E  0E27               	movlw	39
  8774   002AA0  598C               	subwfb	(_lightread+1)& (0+255),w,b
  8775   002AA2  B0D8               	btfsc	status,0,c
  8776   002AA4  EF56  F015         	goto	i1u269_21
  8777   002AA8  EF58  F015         	goto	i1u269_20
  8778   002AAC                     i1u269_21:
  8779   002AAC  EF5B  F015         	goto	i1l977
  8780   002AB0                     i1u269_20:
  8781   002AB0                     
  8782                           ; BSR set to: 0
  8783   002AB0  8689               	bsf	137,3,c	;volatile
  8784   002AB2  EF5C  F015         	goto	i1l4869
  8785   002AB6                     i1l977:
  8786                           
  8787                           ; BSR set to: 0
  8788   002AB6  9689               	bcf	137,3,c	;volatile
  8789   002AB8                     i1l4869:
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;main.c: 117:     if (doorlightauto == 1){
  8793   002AB8  05CA               	decf	_doorlightauto& (0+255),w,b
  8794   002ABA  A4D8               	btfss	status,2,c
  8795   002ABC  EF62  F015         	goto	i1u270_21
  8796   002AC0  EF64  F015         	goto	i1u270_20
  8797   002AC4                     i1u270_21:
  8798   002AC4  EF78  F015         	goto	i1l988
  8799   002AC8                     i1u270_20:
  8800   002AC8                     
  8801                           ; BSR set to: 0
  8802                           ;main.c: 120:         if ((timer.hour >= 0x18)||(timer.hour <= 0x04)){
  8803   002AC8  0E18               	movlw	24
  8804   002ACA  6186               	cpfslt	(_timer+2)& (0+255),b
  8805   002ACC  EF6A  F015         	goto	i1u271_21
  8806   002AD0  EF6C  F015         	goto	i1u271_20
  8807   002AD4                     i1u271_21:
  8808   002AD4  EF74  F015         	goto	i1l983
  8809   002AD8                     i1u271_20:
  8810   002AD8                     
  8811                           ; BSR set to: 0
  8812   002AD8  0E05               	movlw	5
  8813   002ADA  6186               	cpfslt	(_timer+2)& (0+255),b
  8814   002ADC  EF72  F015         	goto	i1u272_21
  8815   002AE0  EF74  F015         	goto	i1u272_20
  8816   002AE4                     i1u272_21:
  8817   002AE4  EF77  F015         	goto	i1l986
  8818   002AE8                     i1u272_20:
  8819   002AE8                     i1l983:
  8820                           
  8821                           ; BSR set to: 0
  8822   002AE8  8889               	bsf	137,4,c	;volatile
  8823   002AEA  EF78  F015         	goto	i1l988
  8824   002AEE                     i1l986:
  8825                           
  8826                           ; BSR set to: 0
  8827   002AEE  9889               	bcf	137,4,c	;volatile
  8828   002AF0                     i1l988:
  8829                           
  8830                           ; BSR set to: 0
  8831   002AF0  0012               	return		;funcret
  8832   002AF2                     __end_of_lightSwitch:
  8833                           	callstack 0
  8834                           
  8835 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  8836 ;; Defined at:
  8837 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;		None
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;		None
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      void 
  8844 ;; Registers used:
  8845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8853 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;Total ram usage:       10 bytes
  8856 ;; Hardware stack levels used: 1
  8857 ;; Hardware stack levels required when called: 6
  8858 ;; This function calls:
  8859 ;;		NULL
  8860 ;;		_I2C_MasterIsr
  8861 ;;		_INT0_ISR
  8862 ;;		_INT1_ISR
  8863 ;;		_INT2_ISR
  8864 ;; This function is called by:
  8865 ;;		Interrupt level 2
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           	psect	intcode
  8870   000008                     __pintcode:
  8871                           	callstack 0
  8872   000008                     _INTERRUPT_InterruptManagerHigh:
  8873                           	callstack 11
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;incstack = 0
  8877   000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8878   00000A  EF9A  F00F         	goto	int_func
  8879                           
  8880                           	psect	intcode_body
  8881   001F34                     __pintcode_body:
  8882                           	callstack 11
  8883   001F34                     int_func:
  8884                           	callstack 11
  8885   001F34  CFFA F012          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  8886   001F38  CFFB F013          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  8887   001F3C  CFD9 F014          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  8888   001F40  CFDA F015          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  8889   001F44  CFF3 F016          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+4
  8890   001F48  CFF4 F017          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+5
  8891   001F4C  CFF6 F018          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+6
  8892   001F50  CFF7 F019          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+7
  8893   001F54  CFF8 F01A          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+8
  8894   001F58  CFF5 F01B          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+9
  8895   001F5C                     
  8896                           ;mcc_generated_files/interrupt_manager.c: 82:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
  8897   001F5C  A8F2               	btfss	242,4,c	;volatile
  8898   001F5E  EFB3  F00F         	goto	i2u434_41
  8899   001F62  EFB5  F00F         	goto	i2u434_40
  8900   001F66                     i2u434_41:
  8901   001F66  EFC0  F00F         	goto	i2l756
  8902   001F6A                     i2u434_40:
  8903   001F6A  A2F2               	btfss	242,1,c	;volatile
  8904   001F6C  EFBA  F00F         	goto	i2u435_41
  8905   001F70  EFBC  F00F         	goto	i2u435_40
  8906   001F74                     i2u435_41:
  8907   001F74  EFC0  F00F         	goto	i2l756
  8908   001F78                     i2u435_40:
  8909   001F78                     
  8910                           ;mcc_generated_files/interrupt_manager.c: 83:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 84:         INT0_ISR();
  8911   001F78  ECB9  F01A         	call	_INT0_ISR	;wreg free
  8912                           
  8913                           ;mcc_generated_files/interrupt_manager.c: 85:     }
  8914   001F7C  EF10  F010         	goto	i2l766
  8915   001F80                     i2l756:
  8916   001F80  A6F0               	btfss	240,3,c	;volatile
  8917   001F82  EFC5  F00F         	goto	i2u436_41
  8918   001F86  EFC7  F00F         	goto	i2u436_40
  8919   001F8A                     i2u436_41:
  8920   001F8A  EFD2  F00F         	goto	i2l758
  8921   001F8E                     i2u436_40:
  8922   001F8E  A0F0               	btfss	240,0,c	;volatile
  8923   001F90  EFCC  F00F         	goto	i2u437_41
  8924   001F94  EFCE  F00F         	goto	i2u437_40
  8925   001F98                     i2u437_41:
  8926   001F98  EFD2  F00F         	goto	i2l758
  8927   001F9C                     i2u437_40:
  8928   001F9C                     
  8929                           ;mcc_generated_files/interrupt_manager.c: 87:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 88:         INT1_ISR();
  8930   001F9C  ECB5  F01A         	call	_INT1_ISR	;wreg free
  8931                           
  8932                           ;mcc_generated_files/interrupt_manager.c: 89:     }
  8933   001FA0  EF10  F010         	goto	i2l766
  8934   001FA4                     i2l758:
  8935   001FA4  A8F0               	btfss	240,4,c	;volatile
  8936   001FA6  EFD7  F00F         	goto	i2u438_41
  8937   001FAA  EFD9  F00F         	goto	i2u438_40
  8938   001FAE                     i2u438_41:
  8939   001FAE  EFE4  F00F         	goto	i2l760
  8940   001FB2                     i2u438_40:
  8941   001FB2  A2F0               	btfss	240,1,c	;volatile
  8942   001FB4  EFDE  F00F         	goto	i2u439_41
  8943   001FB8  EFE0  F00F         	goto	i2u439_40
  8944   001FBC                     i2u439_41:
  8945   001FBC  EFE4  F00F         	goto	i2l760
  8946   001FC0                     i2u439_40:
  8947   001FC0                     
  8948                           ;mcc_generated_files/interrupt_manager.c: 91:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 92:         INT2_ISR();
  8949   001FC0  ECB1  F01A         	call	_INT2_ISR	;wreg free
  8950                           
  8951                           ;mcc_generated_files/interrupt_manager.c: 93:     }
  8952   001FC4  EF10  F010         	goto	i2l766
  8953   001FC8                     i2l760:
  8954   001FC8  A69D               	btfss	157,3,c	;volatile
  8955   001FCA  EFE9  F00F         	goto	i2u440_41
  8956   001FCE  EFEB  F00F         	goto	i2u440_40
  8957   001FD2                     i2u440_41:
  8958   001FD2  EF00  F010         	goto	i2l762
  8959   001FD6                     i2u440_40:
  8960   001FD6  A69E               	btfss	158,3,c	;volatile
  8961   001FD8  EFF0  F00F         	goto	i2u441_41
  8962   001FDC  EFF2  F00F         	goto	i2u441_40
  8963   001FE0                     i2u441_41:
  8964   001FE0  EF00  F010         	goto	i2l762
  8965   001FE4                     i2u441_40:
  8966   001FE4                     i2l7023:
  8967                           
  8968                           ;mcc_generated_files/interrupt_manager.c: 95:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 96:         MSSP_InterruptHandler();
  8969   001FE4  D802               	call	i2u442_48
  8970   001FE6  EFFE  F00F         	goto	i2u442_49
  8971   001FEA                     i2u442_48:
  8972   001FEA  0005               	push	
  8973   001FEC  6EFA               	movwf	pclath,c
  8974   001FEE  502C               	movf	_MSSP_InterruptHandler^0,w,c
  8975   001FF0  6EFD               	movwf	tosl,c
  8976   001FF2  502D               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  8977   001FF4  6EFE               	movwf	tosh,c
  8978   001FF6  6AFF               	clrf	tosu,c
  8979   001FF8  50FA               	movf	pclath,w,c
  8980   001FFA  0012               	return		;indir
  8981   001FFC                     i2u442_49:
  8982                           
  8983                           ;mcc_generated_files/interrupt_manager.c: 97:     }
  8984   001FFC  EF10  F010         	goto	i2l766
  8985   002000                     i2l762:
  8986   002000  A6A0               	btfss	160,3,c	;volatile
  8987   002002  EF05  F010         	goto	i2u443_41
  8988   002006  EF07  F010         	goto	i2u443_40
  8989   00200A                     i2u443_41:
  8990   00200A  EF10  F010         	goto	i2l761
  8991   00200E                     i2u443_40:
  8992   00200E  A6A1               	btfss	161,3,c	;volatile
  8993   002010  EF0C  F010         	goto	i2u444_41
  8994   002014  EF0E  F010         	goto	i2u444_40
  8995   002018                     i2u444_41:
  8996   002018  EF10  F010         	goto	i2l761
  8997   00201C                     i2u444_40:
  8998   00201C  EFF2  F00F         	goto	i2l7023
  8999   002020                     i2l761:
  9000   002020                     i2l766:
  9001   002020  C01B  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+9,tablat
  9002   002024  C01A  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptru
  9003   002028  C019  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+7,tblptrh
  9004   00202C  C018  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+6,tblptrl
  9005   002030  C017  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+5,prodh
  9006   002034  C016  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+4,prodl
  9007   002038  C015  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  9008   00203C  C014  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  9009   002040  C013  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  9010   002044  C012  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  9011   002048  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9012   00204A  0011               	retfie		f
  9013   00204C                     __end_of_INTERRUPT_InterruptManagerHigh:
  9014                           	callstack 0
  9015                           
  9016 ;; *************** function _INT2_ISR *****************
  9017 ;; Defined at:
  9018 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;		None
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;		None
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;Total ram usage:        0 bytes
  9037 ;; Hardware stack levels used: 1
  9038 ;; Hardware stack levels required when called: 2
  9039 ;; This function calls:
  9040 ;;		_INT2_CallBack
  9041 ;; This function is called by:
  9042 ;;		_INTERRUPT_InterruptManagerHigh
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text70
  9047   003562                     __ptext70:
  9048                           	callstack 0
  9049   003562                     _INT2_ISR:
  9050                           	callstack 14
  9051   003562                     
  9052                           ;mcc_generated_files/ext_int.c: 88:     (INTCON3bits.INT2IF = 0);
  9053   003562  92F0               	bcf	240,1,c	;volatile
  9054   003564                     
  9055                           ;mcc_generated_files/ext_int.c: 91:     INT2_CallBack();
  9056   003564  ECD5  F018         	call	_INT2_CallBack	;wreg free
  9057   003568  0012               	return		;funcret
  9058   00356A                     __end_of_INT2_ISR:
  9059                           	callstack 0
  9060                           
  9061 ;; *************** function _INT2_CallBack *****************
  9062 ;; Defined at:
  9063 ;;		line 95 in file "mcc_generated_files/ext_int.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;		None
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;		None
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  1    wreg      void 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9081 ;;Total ram usage:        0 bytes
  9082 ;; Hardware stack levels used: 1
  9083 ;; Hardware stack levels required when called: 1
  9084 ;; This function calls:
  9085 ;;		NULL
  9086 ;;		_INT2_DefaultInterruptHandler
  9087 ;;		_manual_Doorlight
  9088 ;; This function is called by:
  9089 ;;		_INT2_ISR
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           	psect	text71
  9094   0031AA                     __ptext71:
  9095                           	callstack 0
  9096   0031AA                     _INT2_CallBack:
  9097                           	callstack 14
  9098   0031AA                     
  9099                           ;mcc_generated_files/ext_int.c: 98:     if(INT2_InterruptHandler)
  9100   0031AA  5038               	movf	_INT2_InterruptHandler^0,w,c
  9101   0031AC  1039               	iorwf	(_INT2_InterruptHandler+1)^0,w,c
  9102   0031AE  B4D8               	btfsc	status,2,c
  9103   0031B0  EFDC  F018         	goto	i2u261_41
  9104   0031B4  EFDE  F018         	goto	i2u261_40
  9105   0031B8                     i2u261_41:
  9106   0031B8  EFEA  F018         	goto	i2l882
  9107   0031BC                     i2u261_40:
  9108   0031BC                     
  9109                           ;mcc_generated_files/ext_int.c: 99:     {;mcc_generated_files/ext_int.c: 100:         IN
      +                          T2_InterruptHandler();
  9110   0031BC  D802               	call	i2u262_48
  9111   0031BE  EFEA  F018         	goto	i2u262_49
  9112   0031C2                     i2u262_48:
  9113   0031C2  0005               	push	
  9114   0031C4  6EFA               	movwf	pclath,c
  9115   0031C6  5038               	movf	_INT2_InterruptHandler^0,w,c
  9116   0031C8  6EFD               	movwf	tosl,c
  9117   0031CA  5039               	movf	(_INT2_InterruptHandler+1)^0,w,c
  9118   0031CC  6EFE               	movwf	tosh,c
  9119   0031CE  6AFF               	clrf	tosu,c
  9120   0031D0  50FA               	movf	pclath,w,c
  9121   0031D2  0012               	return		;indir
  9122   0031D4                     i2u262_49:
  9123   0031D4                     i2l882:
  9124   0031D4  0012               	return		;funcret
  9125   0031D6                     __end_of_INT2_CallBack:
  9126                           	callstack 0
  9127                           
  9128 ;; *************** function _INT2_DefaultInterruptHandler *****************
  9129 ;; Defined at:
  9130 ;;		line 108 in file "mcc_generated_files/ext_int.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;		None
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		None
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9148 ;;Total ram usage:        0 bytes
  9149 ;; Hardware stack levels used: 1
  9150 ;; This function calls:
  9151 ;;		Nothing
  9152 ;; This function is called by:
  9153 ;;		_EXT_INT_Initialize
  9154 ;;		_INT2_CallBack
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text72
  9159   003604                     __ptext72:
  9160                           	callstack 0
  9161   003604                     _INT2_DefaultInterruptHandler:
  9162                           	callstack 14
  9163   003604  0012               	return		;funcret
  9164   003606                     __end_of_INT2_DefaultInterruptHandler:
  9165                           	callstack 0
  9166                           
  9167 ;; *************** function _manual_Doorlight *****************
  9168 ;; Defined at:
  9169 ;;		line 182 in file "main.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;		None
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;		None
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      void 
  9176 ;; Registers used:
  9177 ;;		wreg, status,2, status,0
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;Total ram usage:        1 bytes
  9188 ;; Hardware stack levels used: 1
  9189 ;; This function calls:
  9190 ;;		Nothing
  9191 ;; This function is called by:
  9192 ;;		_main
  9193 ;;		_INT2_CallBack
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           	psect	text73
  9198   0032DE                     __ptext73:
  9199                           	callstack 0
  9200   0032DE                     _manual_Doorlight:
  9201                           	callstack 14
  9202   0032DE  B889               	btfsc	137,4,c	;volatile
  9203   0032E0  EF74  F019         	goto	i2u240_41
  9204   0032E4  EF77  F019         	goto	i2u240_40
  9205   0032E8                     i2u240_41:
  9206   0032E8  0E01               	movlw	1
  9207   0032EA  EF78  F019         	goto	i2u240_46
  9208   0032EE                     i2u240_40:
  9209   0032EE  0E00               	movlw	0
  9210   0032F0                     i2u240_46:
  9211   0032F0  0AFF               	xorlw	255
  9212   0032F2  6E01               	movwf	??_manual_Doorlight^0,c
  9213   0032F4  3A01               	swapf	??_manual_Doorlight^0,f,c
  9214   0032F6  5089               	movf	137,w,c	;volatile
  9215   0032F8  1801               	xorwf	??_manual_Doorlight^0,w,c
  9216   0032FA  0BEF               	andlw	-17
  9217   0032FC  1801               	xorwf	??_manual_Doorlight^0,w,c
  9218   0032FE  6E89               	movwf	137,c	;volatile
  9219   003300                     
  9220                           ;main.c: 186:     doorlightauto = 0;
  9221   003300  0E00               	movlw	0
  9222   003302  0100               	movlb	0	; () banked
  9223   003304  6FCA               	movwf	_doorlightauto& (0+255),b
  9224   003306                     
  9225                           ; BSR set to: 0
  9226   003306  0012               	return		;funcret
  9227   003308                     __end_of_manual_Doorlight:
  9228                           	callstack 0
  9229                           
  9230 ;; *************** function _INT1_ISR *****************
  9231 ;; Defined at:
  9232 ;;		line 60 in file "mcc_generated_files/ext_int.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;		None
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;		None
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  1    wreg      void 
  9239 ;; Registers used:
  9240 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9250 ;;Total ram usage:        0 bytes
  9251 ;; Hardware stack levels used: 1
  9252 ;; Hardware stack levels required when called: 2
  9253 ;; This function calls:
  9254 ;;		_INT1_CallBack
  9255 ;; This function is called by:
  9256 ;;		_INTERRUPT_InterruptManagerHigh
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text74
  9261   00356A                     __ptext74:
  9262                           	callstack 0
  9263   00356A                     _INT1_ISR:
  9264                           	callstack 14
  9265   00356A                     
  9266                           ;mcc_generated_files/ext_int.c: 62:     (INTCON3bits.INT1IF = 0);
  9267   00356A  90F0               	bcf	240,0,c	;volatile
  9268   00356C                     
  9269                           ;mcc_generated_files/ext_int.c: 65:     INT1_CallBack();
  9270   00356C  ECEB  F018         	call	_INT1_CallBack	;wreg free
  9271   003570  0012               	return		;funcret
  9272   003572                     __end_of_INT1_ISR:
  9273                           	callstack 0
  9274                           
  9275 ;; *************** function _INT1_CallBack *****************
  9276 ;; Defined at:
  9277 ;;		line 69 in file "mcc_generated_files/ext_int.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;		None
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;		None
  9282 ;; Return value:  Size  Location     Type
  9283 ;;                  1    wreg      void 
  9284 ;; Registers used:
  9285 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9286 ;; Tracked objects:
  9287 ;;		On entry : 0/0
  9288 ;;		On exit  : 0/0
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9295 ;;Total ram usage:        0 bytes
  9296 ;; Hardware stack levels used: 1
  9297 ;; Hardware stack levels required when called: 1
  9298 ;; This function calls:
  9299 ;;		NULL
  9300 ;;		_INT1_DefaultInterruptHandler
  9301 ;;		_manual_homelight
  9302 ;; This function is called by:
  9303 ;;		_INT1_ISR
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text75
  9308   0031D6                     __ptext75:
  9309                           	callstack 0
  9310   0031D6                     _INT1_CallBack:
  9311                           	callstack 14
  9312   0031D6                     
  9313                           ;mcc_generated_files/ext_int.c: 72:     if(INT1_InterruptHandler)
  9314   0031D6  503A               	movf	_INT1_InterruptHandler^0,w,c
  9315   0031D8  103B               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  9316   0031DA  B4D8               	btfsc	status,2,c
  9317   0031DC  EFF2  F018         	goto	i2u259_41
  9318   0031E0  EFF4  F018         	goto	i2u259_40
  9319   0031E4                     i2u259_41:
  9320   0031E4  EF00  F019         	goto	i2l869
  9321   0031E8                     i2u259_40:
  9322   0031E8                     
  9323                           ;mcc_generated_files/ext_int.c: 73:     {;mcc_generated_files/ext_int.c: 74:         INT
      +                          1_InterruptHandler();
  9324   0031E8  D802               	call	i2u260_48
  9325   0031EA  EF00  F019         	goto	i2u260_49
  9326   0031EE                     i2u260_48:
  9327   0031EE  0005               	push	
  9328   0031F0  6EFA               	movwf	pclath,c
  9329   0031F2  503A               	movf	_INT1_InterruptHandler^0,w,c
  9330   0031F4  6EFD               	movwf	tosl,c
  9331   0031F6  503B               	movf	(_INT1_InterruptHandler+1)^0,w,c
  9332   0031F8  6EFE               	movwf	tosh,c
  9333   0031FA  6AFF               	clrf	tosu,c
  9334   0031FC  50FA               	movf	pclath,w,c
  9335   0031FE  0012               	return		;indir
  9336   003200                     i2u260_49:
  9337   003200                     i2l869:
  9338   003200  0012               	return		;funcret
  9339   003202                     __end_of_INT1_CallBack:
  9340                           	callstack 0
  9341                           
  9342 ;; *************** function _INT1_DefaultInterruptHandler *****************
  9343 ;; Defined at:
  9344 ;;		line 82 in file "mcc_generated_files/ext_int.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;		None
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;		None
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      void 
  9351 ;; Registers used:
  9352 ;;		None
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;Total ram usage:        0 bytes
  9363 ;; Hardware stack levels used: 1
  9364 ;; This function calls:
  9365 ;;		Nothing
  9366 ;; This function is called by:
  9367 ;;		_EXT_INT_Initialize
  9368 ;;		_INT1_CallBack
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           	psect	text76
  9373   003606                     __ptext76:
  9374                           	callstack 0
  9375   003606                     _INT1_DefaultInterruptHandler:
  9376                           	callstack 14
  9377   003606  0012               	return		;funcret
  9378   003608                     __end_of_INT1_DefaultInterruptHandler:
  9379                           	callstack 0
  9380                           
  9381 ;; *************** function _manual_homelight *****************
  9382 ;; Defined at:
  9383 ;;		line 168 in file "main.c"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;		None
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;		None
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  1    wreg      void 
  9390 ;; Registers used:
  9391 ;;		wreg, status,2, status,0
  9392 ;; Tracked objects:
  9393 ;;		On entry : 0/0
  9394 ;;		On exit  : 0/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9399 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9400 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;Total ram usage:        1 bytes
  9402 ;; Hardware stack levels used: 1
  9403 ;; This function calls:
  9404 ;;		Nothing
  9405 ;; This function is called by:
  9406 ;;		_main
  9407 ;;		_INT1_CallBack
  9408 ;; This function uses a non-reentrant model
  9409 ;;
  9410                           
  9411                           	psect	text77
  9412   003150                     __ptext77:
  9413                           	callstack 0
  9414   003150                     _manual_homelight:
  9415                           	callstack 14
  9416   003150  B689               	btfsc	137,3,c	;volatile
  9417   003152  EFAD  F018         	goto	i2u239_41
  9418   003156  EFB0  F018         	goto	i2u239_40
  9419   00315A                     i2u239_41:
  9420   00315A  0E01               	movlw	1
  9421   00315C  EFB1  F018         	goto	i2u239_46
  9422   003160                     i2u239_40:
  9423   003160  0E00               	movlw	0
  9424   003162                     i2u239_46:
  9425   003162  0AFF               	xorlw	255
  9426   003164  6E01               	movwf	??_manual_homelight^0,c
  9427   003166  4601               	rlncf	??_manual_homelight^0,f,c
  9428   003168  4601               	rlncf	??_manual_homelight^0,f,c
  9429   00316A  4601               	rlncf	??_manual_homelight^0,f,c
  9430   00316C  5089               	movf	137,w,c	;volatile
  9431   00316E  1801               	xorwf	??_manual_homelight^0,w,c
  9432   003170  0BF7               	andlw	-9
  9433   003172  1801               	xorwf	??_manual_homelight^0,w,c
  9434   003174  6E89               	movwf	137,c	;volatile
  9435   003176                     
  9436                           ;main.c: 172:     homelightauto = 0;
  9437   003176  0E00               	movlw	0
  9438   003178  0100               	movlb	0	; () banked
  9439   00317A  6FCB               	movwf	_homelightauto& (0+255),b
  9440   00317C                     
  9441                           ; BSR set to: 0
  9442   00317C  0012               	return		;funcret
  9443   00317E                     __end_of_manual_homelight:
  9444                           	callstack 0
  9445                           
  9446 ;; *************** function _INT0_ISR *****************
  9447 ;; Defined at:
  9448 ;;		line 34 in file "mcc_generated_files/ext_int.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;		None
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  1    wreg      void 
  9455 ;; Registers used:
  9456 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;Total ram usage:        0 bytes
  9467 ;; Hardware stack levels used: 1
  9468 ;; Hardware stack levels required when called: 2
  9469 ;; This function calls:
  9470 ;;		_INT0_CallBack
  9471 ;; This function is called by:
  9472 ;;		_INTERRUPT_InterruptManagerHigh
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text78
  9477   003572                     __ptext78:
  9478                           	callstack 0
  9479   003572                     _INT0_ISR:
  9480                           	callstack 14
  9481   003572                     
  9482                           ;mcc_generated_files/ext_int.c: 36:     (INTCONbits.INT0IF = 0);
  9483   003572  92F2               	bcf	242,1,c	;volatile
  9484   003574                     
  9485                           ;mcc_generated_files/ext_int.c: 39:     INT0_CallBack();
  9486   003574  EC01  F019         	call	_INT0_CallBack	;wreg free
  9487   003578  0012               	return		;funcret
  9488   00357A                     __end_of_INT0_ISR:
  9489                           	callstack 0
  9490                           
  9491 ;; *************** function _INT0_CallBack *****************
  9492 ;; Defined at:
  9493 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;		None
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;		None
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  1    wreg      void 
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9511 ;;Total ram usage:        0 bytes
  9512 ;; Hardware stack levels used: 1
  9513 ;; Hardware stack levels required when called: 1
  9514 ;; This function calls:
  9515 ;;		NULL
  9516 ;;		_INT0_DefaultInterruptHandler
  9517 ;;		_manual_Override
  9518 ;; This function is called by:
  9519 ;;		_INT0_ISR
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text79
  9524   003202                     __ptext79:
  9525                           	callstack 0
  9526   003202                     _INT0_CallBack:
  9527                           	callstack 14
  9528   003202                     
  9529                           ;mcc_generated_files/ext_int.c: 46:     if(INT0_InterruptHandler)
  9530   003202  503C               	movf	_INT0_InterruptHandler^0,w,c
  9531   003204  103D               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  9532   003206  B4D8               	btfsc	status,2,c
  9533   003208  EF08  F019         	goto	i2u257_41
  9534   00320C  EF0A  F019         	goto	i2u257_40
  9535   003210                     i2u257_41:
  9536   003210  EF16  F019         	goto	i2l856
  9537   003214                     i2u257_40:
  9538   003214                     
  9539                           ;mcc_generated_files/ext_int.c: 47:     {;mcc_generated_files/ext_int.c: 48:         INT
      +                          0_InterruptHandler();
  9540   003214  D802               	call	i2u258_48
  9541   003216  EF16  F019         	goto	i2u258_49
  9542   00321A                     i2u258_48:
  9543   00321A  0005               	push	
  9544   00321C  6EFA               	movwf	pclath,c
  9545   00321E  503C               	movf	_INT0_InterruptHandler^0,w,c
  9546   003220  6EFD               	movwf	tosl,c
  9547   003222  503D               	movf	(_INT0_InterruptHandler+1)^0,w,c
  9548   003224  6EFE               	movwf	tosh,c
  9549   003226  6AFF               	clrf	tosu,c
  9550   003228  50FA               	movf	pclath,w,c
  9551   00322A  0012               	return		;indir
  9552   00322C                     i2u258_49:
  9553   00322C                     i2l856:
  9554   00322C  0012               	return		;funcret
  9555   00322E                     __end_of_INT0_CallBack:
  9556                           	callstack 0
  9557                           
  9558 ;; *************** function _INT0_DefaultInterruptHandler *****************
  9559 ;; Defined at:
  9560 ;;		line 56 in file "mcc_generated_files/ext_int.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;		None
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      void 
  9567 ;; Registers used:
  9568 ;;		None
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9578 ;;Total ram usage:        0 bytes
  9579 ;; Hardware stack levels used: 1
  9580 ;; This function calls:
  9581 ;;		Nothing
  9582 ;; This function is called by:
  9583 ;;		_EXT_INT_Initialize
  9584 ;;		_INT0_CallBack
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text80
  9589   003608                     __ptext80:
  9590                           	callstack 0
  9591   003608                     _INT0_DefaultInterruptHandler:
  9592                           	callstack 14
  9593   003608  0012               	return		;funcret
  9594   00360A                     __end_of_INT0_DefaultInterruptHandler:
  9595                           	callstack 0
  9596                           
  9597 ;; *************** function _manual_Override *****************
  9598 ;; Defined at:
  9599 ;;		line 135 in file "main.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;		None
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;		None
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      void 
  9606 ;; Registers used:
  9607 ;;		wreg, status,2, status,0
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9617 ;;Total ram usage:        1 bytes
  9618 ;; Hardware stack levels used: 1
  9619 ;; This function calls:
  9620 ;;		Nothing
  9621 ;; This function is called by:
  9622 ;;		_main
  9623 ;;		_INT0_CallBack
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text81
  9628   0026E6                     __ptext81:
  9629                           	callstack 0
  9630   0026E6                     _manual_Override:
  9631                           	callstack 14
  9632   0026E6                     
  9633                           ;main.c: 136:     if (homelightauto == doorlightauto){
  9634   0026E6  0100               	movlb	0	; () banked
  9635   0026E8  51CA               	movf	_doorlightauto& (0+255),w,b
  9636   0026EA  19CB               	xorwf	_homelightauto& (0+255),w,b
  9637   0026EC  A4D8               	btfss	status,2,c
  9638   0026EE  EF7B  F013         	goto	i2u235_41
  9639   0026F2  EF7D  F013         	goto	i2u235_40
  9640   0026F6                     i2u235_41:
  9641   0026F6  EFAE  F013         	goto	i2l4639
  9642   0026FA                     i2u235_40:
  9643   0026FA                     
  9644                           ; BSR set to: 0
  9645                           ;main.c: 138:         if (homelightauto == 1){
  9646   0026FA  05CB               	decf	_homelightauto& (0+255),w,b
  9647   0026FC  A4D8               	btfss	status,2,c
  9648   0026FE  EF83  F013         	goto	i2u236_41
  9649   002702  EF85  F013         	goto	i2u236_40
  9650   002706                     i2u236_41:
  9651   002706  EF9C  F013         	goto	i2l4623
  9652   00270A                     i2u236_40:
  9653   00270A                     
  9654                           ; BSR set to: 0
  9655   00270A  B689               	btfsc	137,3,c	;volatile
  9656   00270C  EF8A  F013         	goto	i2u237_41
  9657   002710  EF8D  F013         	goto	i2u237_40
  9658   002714                     i2u237_41:
  9659   002714  0E01               	movlw	1
  9660   002716  EF8E  F013         	goto	i2u237_46
  9661   00271A                     i2u237_40:
  9662   00271A  0E00               	movlw	0
  9663   00271C                     i2u237_46:
  9664   00271C  0AFF               	xorlw	255
  9665   00271E  6E01               	movwf	??_manual_Override^0,c
  9666   002720  4601               	rlncf	??_manual_Override^0,f,c
  9667   002722  4601               	rlncf	??_manual_Override^0,f,c
  9668   002724  4601               	rlncf	??_manual_Override^0,f,c
  9669   002726  5089               	movf	137,w,c	;volatile
  9670   002728  1801               	xorwf	??_manual_Override^0,w,c
  9671   00272A  0BF7               	andlw	-9
  9672   00272C  1801               	xorwf	??_manual_Override^0,w,c
  9673   00272E  6E89               	movwf	137,c	;volatile
  9674   002730                     
  9675                           ; BSR set to: 0
  9676                           ;main.c: 140:             homelightauto = 0;
  9677   002730  0E00               	movlw	0
  9678   002732  6FCB               	movwf	_homelightauto& (0+255),b
  9679                           
  9680                           ;main.c: 141:         }
  9681   002734  EF9E  F013         	goto	i2l4629
  9682   002738                     i2l4623:
  9683   002738                     
  9684                           ; BSR set to: 0
  9685                           ;main.c: 143:             homelightauto = 1;
  9686   002738  0E01               	movlw	1
  9687   00273A  6FCB               	movwf	_homelightauto& (0+255),b
  9688   00273C                     i2l4629:
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;main.c: 149:         if (doorlightauto == 1) {doorlightauto = 0;}
  9692   00273C  05CA               	decf	_doorlightauto& (0+255),w,b
  9693   00273E  A4D8               	btfss	status,2,c
  9694   002740  EFA4  F013         	goto	i2u238_41
  9695   002744  EFA6  F013         	goto	i2u238_40
  9696   002748                     i2u238_41:
  9697   002748  EFAA  F013         	goto	i2l4633
  9698   00274C                     i2u238_40:
  9699   00274C                     
  9700                           ; BSR set to: 0
  9701   00274C  0E00               	movlw	0
  9702   00274E  6FCA               	movwf	_doorlightauto& (0+255),b
  9703   002750  EFB2  F013         	goto	i2l1003
  9704   002754                     i2l4633:
  9705   002754                     
  9706                           ; BSR set to: 0
  9707   002754  0E01               	movlw	1
  9708   002756  6FCA               	movwf	_doorlightauto& (0+255),b
  9709   002758  EFB2  F013         	goto	i2l1003
  9710   00275C                     i2l4639:
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;main.c: 156:         homelightauto = 1;
  9714   00275C  0E01               	movlw	1
  9715   00275E  6FCB               	movwf	_homelightauto& (0+255),b
  9716                           
  9717                           ;main.c: 157:         doorlightauto = 1;
  9718   002760  0E01               	movlw	1
  9719   002762  6FCA               	movwf	_doorlightauto& (0+255),b
  9720   002764                     i2l1003:
  9721                           
  9722                           ; BSR set to: 0
  9723   002764  0012               	return		;funcret
  9724   002766                     __end_of_manual_Override:
  9725                           	callstack 0
  9726                           
  9727 ;; *************** function _I2C_MasterIsr *****************
  9728 ;; Defined at:
  9729 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  9730 ;; Parameters:    Size  Location     Type
  9731 ;;		None
  9732 ;; Auto vars:     Size  Location     Type
  9733 ;;		None
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      void 
  9736 ;; Registers used:
  9737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;Total ram usage:        0 bytes
  9748 ;; Hardware stack levels used: 1
  9749 ;; Hardware stack levels required when called: 5
  9750 ;; This function calls:
  9751 ;;		_I2C_MasterFsm
  9752 ;; This function is called by:
  9753 ;;		_I2C_Open
  9754 ;;		_INTERRUPT_InterruptManagerHigh
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           	psect	text82
  9759   0035BA                     __ptext82:
  9760                           	callstack 0
  9761   0035BA                     _I2C_MasterIsr:
  9762                           	callstack 11
  9763   0035BA                     
  9764                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  9765   0035BA  ECA3  F014         	call	_I2C_MasterFsm	;wreg free
  9766   0035BE  0012               	return		;funcret
  9767   0035C0                     __end_of_I2C_MasterIsr:
  9768                           	callstack 0
  9769                           
  9770 ;; *************** function _I2C_MasterFsm *****************
  9771 ;; Defined at:
  9772 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;		None
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9788 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9790 ;;Total ram usage:        3 bytes
  9791 ;; Hardware stack levels used: 1
  9792 ;; Hardware stack levels required when called: 4
  9793 ;; This function calls:
  9794 ;;		_I2C_DO_ADDRESS_NACK
  9795 ;;		_I2C_DO_IDLE
  9796 ;;		_I2C_DO_RCEN
  9797 ;;		_I2C_DO_RESET
  9798 ;;		_I2C_DO_RX
  9799 ;;		_I2C_DO_RX_ACK
  9800 ;;		_I2C_DO_RX_NACK_RESTART
  9801 ;;		_I2C_DO_RX_NACK_STOP
  9802 ;;		_I2C_DO_SEND_ADR_READ
  9803 ;;		_I2C_DO_SEND_ADR_WRITE
  9804 ;;		_I2C_DO_SEND_RESTART
  9805 ;;		_I2C_DO_SEND_RESTART_READ
  9806 ;;		_I2C_DO_SEND_RESTART_WRITE
  9807 ;;		_I2C_DO_SEND_STOP
  9808 ;;		_I2C_DO_TX
  9809 ;;		_I2C_DO_TX_EMPTY
  9810 ;;		_I2C_MasterIsNack
  9811 ;;		i2_I2C_MasterClearIrq
  9812 ;; This function is called by:
  9813 ;;		_I2C_MasterIsr
  9814 ;; This function uses a non-reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text83
  9818   002946                     __ptext83:
  9819                           	callstack 0
  9820   002946                     _I2C_MasterFsm:
  9821                           	callstack 11
  9822   002946                     
  9823                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  9824   002946  ECF0  F01A         	call	i2_I2C_MasterClearIrq	;wreg free
  9825   00294A                     
  9826                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  9827   00294A  0100               	movlb	0	; () banked
  9828   00294C  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  9829   00294E  EFAB  F014         	goto	i2u400_41
  9830   002952  EFAD  F014         	goto	i2u400_40
  9831   002956                     i2u400_41:
  9832   002956  EFBA  F014         	goto	i2l6567
  9833   00295A                     i2u400_40:
  9834   00295A                     
  9835                           ; BSR set to: 0
  9836   00295A  EC4D  F01A         	call	_I2C_MasterIsNack	;wreg free
  9837   00295E  0900               	iorlw	0
  9838   002960  B4D8               	btfsc	status,2,c
  9839   002962  EFB5  F014         	goto	i2u401_41
  9840   002966  EFB7  F014         	goto	i2u401_40
  9841   00296A                     i2u401_41:
  9842   00296A  EFBA  F014         	goto	i2l6567
  9843   00296E                     i2u401_40:
  9844   00296E                     
  9845                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  9846   00296E  0E0F               	movlw	15
  9847   002970  0100               	movlb	0	; () banked
  9848   002972  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  9849   002974                     i2l6567:
  9850                           
  9851                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  9852   002974  0100               	movlb	0	; () banked
  9853   002976  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  9854   002978  0D02               	mullw	2
  9855   00297A  50F3               	movf	243,w,c
  9856   00297C  0F01               	addlw	low _i2c_fsmStateTable
  9857   00297E  6E0F               	movwf	??_I2C_MasterFsm^0,c
  9858   002980  C00F  FFF6         	movff	??_I2C_MasterFsm,tblptrl
  9859   002984                     	if	1	;There is more than 1 active tblptr byte
  9860   002984  0E10               	movlw	high __smallconst
  9861   002986  6EF7               	movwf	tblptrh,c
  9862   002988                     	endif
  9863   002988                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9864   002988  6AF8               	clrf	tblptru,c
  9865   00298A                     	endif
  9866   00298A                     	if	0	;tblptru may be non-zero
  9867   00298A                     	endif
  9868   00298A  0009               	tblrd		*+
  9869   00298C  CFF5 F010          	movff	tablat,??_I2C_MasterFsm+1
  9870   002990  0009               	tblrd		*+
  9871   002992  CFF5 F011          	movff	tablat,??_I2C_MasterFsm+2
  9872   002996  D802               	call	i2u402_48
  9873   002998  EFD7  F014         	goto	i2u402_49
  9874   00299C                     i2u402_48:
  9875   00299C  0005               	push	
  9876   00299E  6EFA               	movwf	pclath,c
  9877   0029A0  5010               	movf	(??_I2C_MasterFsm+1)^0,w,c
  9878   0029A2  6EFD               	movwf	tosl,c
  9879   0029A4  5011               	movf	(??_I2C_MasterFsm+2)^0,w,c
  9880   0029A6  6EFE               	movwf	tosh,c
  9881   0029A8  6AFF               	clrf	tosu,c
  9882   0029AA  50FA               	movf	pclath,w,c
  9883   0029AC  0012               	return		;indir
  9884   0029AE                     i2u402_49:
  9885   0029AE  0100               	movlb	0	; () banked
  9886   0029B0  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  9887   0029B2                     
  9888                           ; BSR set to: 0
  9889   0029B2  0012               	return		;funcret
  9890   0029B4                     __end_of_I2C_MasterFsm:
  9891                           	callstack 0
  9892                           
  9893 ;; *************** function i2_I2C_MasterClearIrq *****************
  9894 ;; Defined at:
  9895 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  9896 ;; Parameters:    Size  Location     Type
  9897 ;;		None
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;		None
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  1    wreg      void 
  9902 ;; Registers used:
  9903 ;;		None
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9913 ;;Total ram usage:        0 bytes
  9914 ;; Hardware stack levels used: 1
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_I2C_MasterFsm
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           	psect	text84
  9923   0035E0                     __ptext84:
  9924                           	callstack 0
  9925   0035E0                     i2_I2C_MasterClearIrq:
  9926                           	callstack 14
  9927   0035E0                     
  9928                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  9929   0035E0  969E               	bcf	158,3,c	;volatile
  9930   0035E2  0012               	return		;funcret
  9931   0035E4                     __end_ofi2_I2C_MasterClearIrq:
  9932                           	callstack 0
  9933                           
  9934 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  9935 ;; Defined at:
  9936 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;		None
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;		None
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      enum E3134
  9943 ;; Registers used:
  9944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9952 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9954 ;;Total ram usage:        2 bytes
  9955 ;; Hardware stack levels used: 1
  9956 ;; Hardware stack levels required when called: 3
  9957 ;; This function calls:
  9958 ;;		NULL
  9959 ;;		_I2C_CallbackReturnReset
  9960 ;;		_I2C_CallbackReturnStop
  9961 ;;		_I2C_DO_SEND_RESTART
  9962 ;;		_I2C_DO_SEND_STOP
  9963 ;;		_rd1RegCompleteHandler
  9964 ;;		_rd2RegCompleteHandler
  9965 ;;		_rdBlkRegCompleteHandler
  9966 ;;		_wr1RegCompleteHandler
  9967 ;;		_wr2RegCompleteHandler
  9968 ;; This function is called by:
  9969 ;;		_I2C_MasterFsm
  9970 ;; This function uses a non-reentrant model
  9971 ;;
  9972                           
  9973                           	psect	text85
  9974   002B58                     __ptext85:
  9975                           	callstack 0
  9976   002B58                     _I2C_DO_ADDRESS_NACK:
  9977                           	callstack 11
  9978   002B58                     
  9979                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  9980   002B58  0100               	movlb	0	; () banked
  9981   002B5A  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  9982   002B5C                     
  9983                           ; BSR set to: 0
  9984                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  9985   002B5C  0E02               	movlw	2
  9986   002B5E  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  9987                           
  9988                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  9989   002B60  EFBA  F015         	goto	i2l6401
  9990   002B64                     i2l6391:
  9991                           
  9992                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  9993   002B64  ECCD  F01A         	call	_I2C_DO_SEND_RESTART	;wreg free
  9994   002B68  EFDE  F015         	goto	i2l638
  9995   002B6C                     i2l6395:
  9996                           
  9997                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  9998   002B6C  ECC9  F01A         	call	_I2C_DO_SEND_STOP	;wreg free
  9999   002B70  EFDE  F015         	goto	i2l638
 10000   002B74                     i2l6401:
 10001                           
 10002                           ; BSR set to: 0
 10003   002B74  C070  F00A         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 10004   002B78  C071  F00B         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 10005   002B7C  D802               	call	i2u386_48
 10006   002B7E  EFCA  F015         	goto	i2u386_49
 10007   002B82                     i2u386_48:
 10008   002B82  0005               	push	
 10009   002B84  6EFA               	movwf	pclath,c
 10010   002B86  5164               	movf	(_I2C_Status+4)& (0+255),w,b
 10011   002B88  6EFD               	movwf	tosl,c
 10012   002B8A  5165               	movf	(_I2C_Status+5)& (0+255),w,b
 10013   002B8C  6EFE               	movwf	tosh,c
 10014   002B8E  6AFF               	clrf	tosu,c
 10015   002B90  50FA               	movf	pclath,w,c
 10016   002B92  0012               	return		;indir
 10017   002B94                     i2u386_49:
 10018   002B94  6E0D               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 10019   002B96  6A0E               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 10020                           
 10021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10022                           ; Switch size 1, requested type "simple"
 10023                           ; Number of cases is 1, Range of values is 0 to 0
 10024                           ; switch strategies available:
 10025                           ; Name         Instructions Cycles
 10026                           ; simple_byte            4     3 (average)
 10027                           ;	Chosen strategy is simple_byte
 10028   002B98  500E               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 10029   002B9A  0A00               	xorlw	0	; case 0
 10030   002B9C  B4D8               	btfsc	status,2,c
 10031   002B9E  EFD3  F015         	goto	i2l9389
 10032   002BA2  EFB6  F015         	goto	i2l6395
 10033   002BA6                     i2l9389:
 10034                           
 10035                           ; Switch size 1, requested type "simple"
 10036                           ; Number of cases is 2, Range of values is 2 to 3
 10037                           ; switch strategies available:
 10038                           ; Name         Instructions Cycles
 10039                           ; simple_byte            7     4 (average)
 10040                           ;	Chosen strategy is simple_byte
 10041   002BA6  500D               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 10042   002BA8  0A02               	xorlw	2	; case 2
 10043   002BAA  B4D8               	btfsc	status,2,c
 10044   002BAC  EFB2  F015         	goto	i2l6391
 10045   002BB0  0A01               	xorlw	1	; case 3
 10046   002BB2  B4D8               	btfsc	status,2,c
 10047   002BB4  EFB2  F015         	goto	i2l6391
 10048   002BB8  EFB6  F015         	goto	i2l6395
 10049   002BBC                     i2l638:
 10050   002BBC  0012               	return		;funcret
 10051   002BBE                     __end_of_I2C_DO_ADDRESS_NACK:
 10052                           	callstack 0
 10053                           
 10054 ;; *************** function _I2C_DO_RESET *****************
 10055 ;; Defined at:
 10056 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
 10057 ;; Parameters:    Size  Location     Type
 10058 ;;		None
 10059 ;; Auto vars:     Size  Location     Type
 10060 ;;		None
 10061 ;; Return value:  Size  Location     Type
 10062 ;;                  1    wreg      enum E3134
 10063 ;; Registers used:
 10064 ;;		wreg, status,2
 10065 ;; Tracked objects:
 10066 ;;		On entry : 0/0
 10067 ;;		On exit  : 0/0
 10068 ;;		Unchanged: 0/0
 10069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;Total ram usage:        0 bytes
 10075 ;; Hardware stack levels used: 1
 10076 ;; This function calls:
 10077 ;;		Nothing
 10078 ;; This function is called by:
 10079 ;;		_I2C_MasterFsm
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           	psect	text86
 10084   0034DC                     __ptext86:
 10085                           	callstack 0
 10086   0034DC                     _I2C_DO_RESET:
 10087                           	callstack 14
 10088   0034DC                     
 10089                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
 10090   0034DC  0100               	movlb	0	; () banked
 10091   0034DE  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
 10092   0034E0                     
 10093                           ; BSR set to: 0
 10094                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
 10095   0034E0  0E00               	movlw	0
 10096   0034E2  6F82               	movwf	(_I2C_Status+34)& (0+255),b
 10097   0034E4                     
 10098                           ; BSR set to: 0
 10099                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
 10100   0034E4  0E0E               	movlw	14
 10101   0034E6                     
 10102                           ; BSR set to: 0
 10103   0034E6  0012               	return		;funcret
 10104   0034E8                     __end_of_I2C_DO_RESET:
 10105                           	callstack 0
 10106                           
 10107 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 10108 ;; Defined at:
 10109 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;		None
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;		None
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  1    wreg      enum E3134
 10116 ;; Registers used:
 10117 ;;		wreg, cstack
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10127 ;;Total ram usage:        0 bytes
 10128 ;; Hardware stack levels used: 1
 10129 ;; Hardware stack levels required when called: 1
 10130 ;; This function calls:
 10131 ;;		_I2C_MasterSendNack
 10132 ;; This function is called by:
 10133 ;;		_I2C_DO_RX
 10134 ;;		_I2C_MasterFsm
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text87
 10139   00357A                     __ptext87:
 10140                           	callstack 0
 10141   00357A                     _I2C_DO_RX_NACK_RESTART:
 10142                           	callstack 13
 10143   00357A                     
 10144                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
 10145   00357A  ECE3  F01A         	call	_I2C_MasterSendNack	;wreg free
 10146   00357E                     
 10147                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
 10148   00357E  0E09               	movlw	9
 10149   003580  0012               	return		;funcret
 10150   003582                     __end_of_I2C_DO_RX_NACK_RESTART:
 10151                           	callstack 0
 10152                           
 10153 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 10154 ;; Defined at:
 10155 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;		None
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;		None
 10160 ;; Return value:  Size  Location     Type
 10161 ;;                  1    wreg      enum E3134
 10162 ;; Registers used:
 10163 ;;		wreg, cstack
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10173 ;;Total ram usage:        0 bytes
 10174 ;; Hardware stack levels used: 1
 10175 ;; Hardware stack levels required when called: 1
 10176 ;; This function calls:
 10177 ;;		_I2C_MasterSendNack
 10178 ;; This function is called by:
 10179 ;;		_I2C_DO_RX
 10180 ;;		_I2C_MasterFsm
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           	psect	text88
 10185   003582                     __ptext88:
 10186                           	callstack 0
 10187   003582                     _I2C_DO_RX_NACK_STOP:
 10188                           	callstack 13
 10189   003582                     
 10190                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
 10191   003582  ECE3  F01A         	call	_I2C_MasterSendNack	;wreg free
 10192   003586                     
 10193                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
 10194   003586  0E0A               	movlw	10
 10195   003588  0012               	return		;funcret
 10196   00358A                     __end_of_I2C_DO_RX_NACK_STOP:
 10197                           	callstack 0
 10198                           
 10199 ;; *************** function _I2C_DO_RX_ACK *****************
 10200 ;; Defined at:
 10201 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;		None
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;		None
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  1    wreg      enum E3134
 10208 ;; Registers used:
 10209 ;;		wreg, cstack
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;Total ram usage:        0 bytes
 10220 ;; Hardware stack levels used: 1
 10221 ;; Hardware stack levels required when called: 1
 10222 ;; This function calls:
 10223 ;;		_I2C_MasterSendAck
 10224 ;; This function is called by:
 10225 ;;		_I2C_MasterFsm
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           	psect	text89
 10230   00358A                     __ptext89:
 10231                           	callstack 0
 10232   00358A                     _I2C_DO_RX_ACK:
 10233                           	callstack 13
 10234   00358A                     
 10235                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
 10236   00358A  ECE0  F01A         	call	_I2C_MasterSendAck	;wreg free
 10237   00358E                     
 10238                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
 10239   00358E  0E05               	movlw	5
 10240   003590  0012               	return		;funcret
 10241   003592                     __end_of_I2C_DO_RX_ACK:
 10242                           	callstack 0
 10243                           
 10244 ;; *************** function _I2C_DO_SEND_STOP *****************
 10245 ;; Defined at:
 10246 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;		None
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;		None
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  1    wreg      enum E3134
 10253 ;; Registers used:
 10254 ;;		wreg, cstack
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10264 ;;Total ram usage:        0 bytes
 10265 ;; Hardware stack levels used: 1
 10266 ;; Hardware stack levels required when called: 1
 10267 ;; This function calls:
 10268 ;;		_I2C_MasterStop
 10269 ;; This function is called by:
 10270 ;;		_I2C_DO_TX
 10271 ;;		_I2C_DO_TX_EMPTY
 10272 ;;		_I2C_DO_ADDRESS_NACK
 10273 ;;		_I2C_MasterFsm
 10274 ;; This function uses a non-reentrant model
 10275 ;;
 10276                           
 10277                           	psect	text90
 10278   003592                     __ptext90:
 10279                           	callstack 0
 10280   003592                     _I2C_DO_SEND_STOP:
 10281                           	callstack 12
 10282   003592                     
 10283                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
 10284   003592  ECFC  F01A         	call	_I2C_MasterStop	;wreg free
 10285   003596                     
 10286                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
 10287   003596  0E00               	movlw	0
 10288   003598  0012               	return		;funcret
 10289   00359A                     __end_of_I2C_DO_SEND_STOP:
 10290                           	callstack 0
 10291                           
 10292 ;; *************** function _I2C_DO_SEND_RESTART *****************
 10293 ;; Defined at:
 10294 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;		None
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;		None
 10299 ;; Return value:  Size  Location     Type
 10300 ;;                  1    wreg      enum E3134
 10301 ;; Registers used:
 10302 ;;		wreg, cstack
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10312 ;;Total ram usage:        0 bytes
 10313 ;; Hardware stack levels used: 1
 10314 ;; Hardware stack levels required when called: 1
 10315 ;; This function calls:
 10316 ;;		_I2C_MasterEnableRestart
 10317 ;; This function is called by:
 10318 ;;		_I2C_DO_TX_EMPTY
 10319 ;;		_I2C_DO_ADDRESS_NACK
 10320 ;;		_I2C_MasterFsm
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324                           	psect	text91
 10325   00359A                     __ptext91:
 10326                           	callstack 0
 10327   00359A                     _I2C_DO_SEND_RESTART:
 10328                           	callstack 12
 10329   00359A                     
 10330                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
 10331   00359A  ECFE  F01A         	call	_I2C_MasterEnableRestart	;wreg free
 10332   00359E                     
 10333                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
 10334   00359E  0E01               	movlw	1
 10335   0035A0  0012               	return		;funcret
 10336   0035A2                     __end_of_I2C_DO_SEND_RESTART:
 10337                           	callstack 0
 10338                           
 10339 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 10340 ;; Defined at:
 10341 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
 10342 ;; Parameters:    Size  Location     Type
 10343 ;;		None
 10344 ;; Auto vars:     Size  Location     Type
 10345 ;;		None
 10346 ;; Return value:  Size  Location     Type
 10347 ;;                  1    wreg      enum E3134
 10348 ;; Registers used:
 10349 ;;		wreg, cstack
 10350 ;; Tracked objects:
 10351 ;;		On entry : 0/0
 10352 ;;		On exit  : 0/0
 10353 ;;		Unchanged: 0/0
 10354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10359 ;;Total ram usage:        0 bytes
 10360 ;; Hardware stack levels used: 1
 10361 ;; Hardware stack levels required when called: 1
 10362 ;; This function calls:
 10363 ;;		_I2C_MasterEnableRestart
 10364 ;; This function is called by:
 10365 ;;		_I2C_DO_TX
 10366 ;;		_I2C_MasterFsm
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           	psect	text92
 10371   0035A2                     __ptext92:
 10372                           	callstack 0
 10373   0035A2                     _I2C_DO_SEND_RESTART_WRITE:
 10374                           	callstack 12
 10375   0035A2                     
 10376                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
 10377   0035A2  ECFE  F01A         	call	_I2C_MasterEnableRestart	;wreg free
 10378   0035A6                     
 10379                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
 10380   0035A6  0E02               	movlw	2
 10381   0035A8  0012               	return		;funcret
 10382   0035AA                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 10383                           	callstack 0
 10384                           
 10385 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 10386 ;; Defined at:
 10387 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;		None
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;		None
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  1    wreg      enum E3134
 10394 ;; Registers used:
 10395 ;;		wreg, cstack
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10405 ;;Total ram usage:        0 bytes
 10406 ;; Hardware stack levels used: 1
 10407 ;; Hardware stack levels required when called: 1
 10408 ;; This function calls:
 10409 ;;		_I2C_MasterEnableRestart
 10410 ;; This function is called by:
 10411 ;;		_I2C_DO_TX
 10412 ;;		_I2C_MasterFsm
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           	psect	text93
 10417   0035AA                     __ptext93:
 10418                           	callstack 0
 10419   0035AA                     _I2C_DO_SEND_RESTART_READ:
 10420                           	callstack 12
 10421   0035AA                     
 10422                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
 10423   0035AA  ECFE  F01A         	call	_I2C_MasterEnableRestart	;wreg free
 10424   0035AE                     
 10425                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
 10426   0035AE  0E01               	movlw	1
 10427   0035B0  0012               	return		;funcret
 10428   0035B2                     __end_of_I2C_DO_SEND_RESTART_READ:
 10429                           	callstack 0
 10430                           
 10431 ;; *************** function _I2C_DO_RCEN *****************
 10432 ;; Defined at:
 10433 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
 10434 ;; Parameters:    Size  Location     Type
 10435 ;;		None
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;		None
 10438 ;; Return value:  Size  Location     Type
 10439 ;;                  1    wreg      enum E3134
 10440 ;; Registers used:
 10441 ;;		wreg, cstack
 10442 ;; Tracked objects:
 10443 ;;		On entry : 0/0
 10444 ;;		On exit  : 0/0
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10451 ;;Total ram usage:        0 bytes
 10452 ;; Hardware stack levels used: 1
 10453 ;; Hardware stack levels required when called: 1
 10454 ;; This function calls:
 10455 ;;		_I2C_MasterStartRx
 10456 ;; This function is called by:
 10457 ;;		_I2C_MasterFsm
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461                           	psect	text94
 10462   0034E8                     __ptext94:
 10463                           	callstack 0
 10464   0034E8                     _I2C_DO_RCEN:
 10465                           	callstack 13
 10466   0034E8                     
 10467                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
 10468   0034E8  0100               	movlb	0	; () banked
 10469   0034EA  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
 10470   0034EC                     
 10471                           ; BSR set to: 0
 10472                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
 10473   0034EC  ECF6  F01A         	call	_I2C_MasterStartRx	;wreg free
 10474   0034F0                     
 10475                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
 10476   0034F0  0E04               	movlw	4
 10477   0034F2  0012               	return		;funcret
 10478   0034F4                     __end_of_I2C_DO_RCEN:
 10479                           	callstack 0
 10480                           
 10481 ;; *************** function _I2C_DO_RX *****************
 10482 ;; Defined at:
 10483 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;		None
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;		None
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  1    wreg      enum E3134
 10490 ;; Registers used:
 10491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10501 ;;Total ram usage:        2 bytes
 10502 ;; Hardware stack levels used: 1
 10503 ;; Hardware stack levels required when called: 3
 10504 ;; This function calls:
 10505 ;;		NULL
 10506 ;;		_I2C_CallbackReturnReset
 10507 ;;		_I2C_CallbackReturnStop
 10508 ;;		_I2C_DO_RX_NACK_RESTART
 10509 ;;		_I2C_DO_RX_NACK_STOP
 10510 ;;		_I2C_MasterGetRxData
 10511 ;;		_I2C_MasterSendAck
 10512 ;;		_rd1RegCompleteHandler
 10513 ;;		_rd2RegCompleteHandler
 10514 ;;		_rdBlkRegCompleteHandler
 10515 ;;		_wr1RegCompleteHandler
 10516 ;;		_wr2RegCompleteHandler
 10517 ;; This function is called by:
 10518 ;;		_I2C_MasterFsm
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           	psect	text95
 10523   002514                     __ptext95:
 10524                           	callstack 0
 10525   002514                     _I2C_DO_RX:
 10526                           	callstack 11
 10527   002514                     
 10528                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 10529   002514  ECF4  F01A         	call	_I2C_MasterGetRxData	;wreg free
 10530   002518  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
 10531   00251C  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
 10532   002520  6EDF               	movwf	indf2,c
 10533   002522  0100               	movlb	0	; () banked
 10534   002524  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10535   002526  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
 10536   002528                     
 10537                           ; BSR set to: 0
 10538                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
 10539   002528  077F               	decf	(_I2C_Status+31)& (0+255),f,b
 10540   00252A  A0D8               	btfss	status,0,c
 10541   00252C  0780               	decf	(_I2C_Status+32)& (0+255),f,b
 10542   00252E  517F               	movf	(_I2C_Status+31)& (0+255),w,b
 10543   002530  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10544   002532  B4D8               	btfsc	status,2,c
 10545   002534  EF9E  F012         	goto	i2u383_41
 10546   002538  EFA0  F012         	goto	i2u383_40
 10547   00253C                     i2u383_41:
 10548   00253C  EFA5  F012         	goto	i2l575
 10549   002540                     i2u383_40:
 10550   002540                     
 10551                           ; BSR set to: 0
 10552                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
 10553   002540  ECE0  F01A         	call	_I2C_MasterSendAck	;wreg free
 10554   002544                     
 10555                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
 10556   002544  0E05               	movlw	5
 10557   002546  EFDC  F012         	goto	i2l576
 10558   00254A                     i2l575:
 10559                           
 10560                           ; BSR set to: 0
 10561                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
 10562   00254A  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
 10563                           
 10564                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10565   00254C  EFB0  F012         	goto	i2l6351
 10566   002550                     i2l6341:
 10567                           
 10568                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
 10569   002550  ECBD  F01A         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 10570   002554  EFDC  F012         	goto	i2l576
 10571   002558                     i2l6345:
 10572                           
 10573                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
 10574   002558  ECC1  F01A         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 10575   00255C  EFDC  F012         	goto	i2l576
 10576   002560                     i2l6351:
 10577                           
 10578                           ; BSR set to: 0
 10579   002560  C06C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10580   002564  C06D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10581   002568  D802               	call	i2u384_48
 10582   00256A  EFC0  F012         	goto	i2u384_49
 10583   00256E                     i2u384_48:
 10584   00256E  0005               	push	
 10585   002570  6EFA               	movwf	pclath,c
 10586   002572  5160               	movf	_I2C_Status& (0+255),w,b
 10587   002574  6EFD               	movwf	tosl,c
 10588   002576  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 10589   002578  6EFE               	movwf	tosh,c
 10590   00257A  6AFF               	clrf	tosu,c
 10591   00257C  50FA               	movf	pclath,w,c
 10592   00257E  0012               	return		;indir
 10593   002580                     i2u384_49:
 10594   002580  6E0D               	movwf	??_I2C_DO_RX^0,c
 10595   002582  6A0E               	clrf	(??_I2C_DO_RX+1)^0,c
 10596                           
 10597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10598                           ; Switch size 1, requested type "simple"
 10599                           ; Number of cases is 1, Range of values is 0 to 0
 10600                           ; switch strategies available:
 10601                           ; Name         Instructions Cycles
 10602                           ; simple_byte            4     3 (average)
 10603                           ;	Chosen strategy is simple_byte
 10604   002584  500E               	movf	(??_I2C_DO_RX+1)^0,w,c
 10605   002586  0A00               	xorlw	0	; case 0
 10606   002588  B4D8               	btfsc	status,2,c
 10607   00258A  EFC9  F012         	goto	i2l9391
 10608   00258E  EFAC  F012         	goto	i2l6345
 10609   002592                     i2l9391:
 10610                           
 10611                           ; Switch size 1, requested type "simple"
 10612                           ; Number of cases is 4, Range of values is 1 to 4
 10613                           ; switch strategies available:
 10614                           ; Name         Instructions Cycles
 10615                           ; simple_byte           13     7 (average)
 10616                           ;	Chosen strategy is simple_byte
 10617   002592  500D               	movf	??_I2C_DO_RX^0,w,c
 10618   002594  0A01               	xorlw	1	; case 1
 10619   002596  B4D8               	btfsc	status,2,c
 10620   002598  EFAC  F012         	goto	i2l6345
 10621   00259C  0A03               	xorlw	3	; case 2
 10622   00259E  B4D8               	btfsc	status,2,c
 10623   0025A0  EFA8  F012         	goto	i2l6341
 10624   0025A4  0A01               	xorlw	1	; case 3
 10625   0025A6  B4D8               	btfsc	status,2,c
 10626   0025A8  EFA8  F012         	goto	i2l6341
 10627   0025AC  0A07               	xorlw	7	; case 4
 10628   0025AE  B4D8               	btfsc	status,2,c
 10629   0025B0  EFAC  F012         	goto	i2l6345
 10630   0025B4  EFAC  F012         	goto	i2l6345
 10631   0025B8                     i2l576:
 10632   0025B8  0012               	return		;funcret
 10633   0025BA                     __end_of_I2C_DO_RX:
 10634                           	callstack 0
 10635                           
 10636 ;; *************** function _I2C_DO_TX *****************
 10637 ;; Defined at:
 10638 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;		None
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      enum E3134
 10645 ;; Registers used:
 10646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10656 ;;Total ram usage:        2 bytes
 10657 ;; Hardware stack levels used: 1
 10658 ;; Hardware stack levels required when called: 3
 10659 ;; This function calls:
 10660 ;;		NULL
 10661 ;;		_I2C_CallbackReturnReset
 10662 ;;		_I2C_CallbackReturnStop
 10663 ;;		_I2C_DO_SEND_RESTART_READ
 10664 ;;		_I2C_DO_SEND_RESTART_WRITE
 10665 ;;		_I2C_DO_SEND_STOP
 10666 ;;		_I2C_MasterIsNack
 10667 ;;		_I2C_MasterSendTxData
 10668 ;;		_rd1RegCompleteHandler
 10669 ;;		_rd2RegCompleteHandler
 10670 ;;		_rdBlkRegCompleteHandler
 10671 ;;		_wr1RegCompleteHandler
 10672 ;;		_wr2RegCompleteHandler
 10673 ;; This function is called by:
 10674 ;;		_I2C_MasterFsm
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text96
 10679   002248                     __ptext96:
 10680                           	callstack 0
 10681   002248                     _I2C_DO_TX:
 10682                           	callstack 11
 10683   002248                     
 10684                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
 10685   002248  EC4D  F01A         	call	_I2C_MasterIsNack	;wreg free
 10686   00224C  0900               	iorlw	0
 10687   00224E  B4D8               	btfsc	status,2,c
 10688   002250  EF2C  F011         	goto	i2u380_41
 10689   002254  EF2E  F011         	goto	i2u380_40
 10690   002258                     i2u380_41:
 10691   002258  EF69  F011         	goto	i2l559
 10692   00225C                     i2u380_40:
 10693   00225C  EF3C  F011         	goto	i2l6311
 10694   002260                     i2l6297:
 10695                           
 10696                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 10697   002260  ECD5  F01A         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 10698   002264  EF85  F011         	goto	i2l562
 10699   002268                     i2l6301:
 10700                           
 10701                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 10702   002268  ECD1  F01A         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 10703   00226C  EF85  F011         	goto	i2l562
 10704   002270                     i2l6305:
 10705                           
 10706                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
 10707   002270  ECC9  F01A         	call	_I2C_DO_SEND_STOP	;wreg free
 10708   002274  EF85  F011         	goto	i2l562
 10709   002278                     i2l6311:
 10710   002278  C072  F00A         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 10711   00227C  C073  F00B         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 10712   002280  D802               	call	i2u381_48
 10713   002282  EF4D  F011         	goto	i2u381_49
 10714   002286                     i2u381_48:
 10715   002286  0005               	push	
 10716   002288  6EFA               	movwf	pclath,c
 10717   00228A  0100               	movlb	0	; () banked
 10718   00228C  5166               	movf	(_I2C_Status+6)& (0+255),w,b
 10719   00228E  6EFD               	movwf	tosl,c
 10720   002290  5167               	movf	(_I2C_Status+7)& (0+255),w,b
 10721   002292  6EFE               	movwf	tosh,c
 10722   002294  6AFF               	clrf	tosu,c
 10723   002296  50FA               	movf	pclath,w,c
 10724   002298  0012               	return		;indir
 10725   00229A                     i2u381_49:
 10726   00229A  6E0D               	movwf	??_I2C_DO_TX^0,c
 10727   00229C  6A0E               	clrf	(??_I2C_DO_TX+1)^0,c
 10728                           
 10729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10730                           ; Switch size 1, requested type "simple"
 10731                           ; Number of cases is 1, Range of values is 0 to 0
 10732                           ; switch strategies available:
 10733                           ; Name         Instructions Cycles
 10734                           ; simple_byte            4     3 (average)
 10735                           ;	Chosen strategy is simple_byte
 10736   00229E  500E               	movf	(??_I2C_DO_TX+1)^0,w,c
 10737   0022A0  0A00               	xorlw	0	; case 0
 10738   0022A2  B4D8               	btfsc	status,2,c
 10739   0022A4  EF56  F011         	goto	i2l9393
 10740   0022A8  EF38  F011         	goto	i2l6305
 10741   0022AC                     i2l9393:
 10742                           
 10743                           ; Switch size 1, requested type "simple"
 10744                           ; Number of cases is 4, Range of values is 1 to 4
 10745                           ; switch strategies available:
 10746                           ; Name         Instructions Cycles
 10747                           ; simple_byte           13     7 (average)
 10748                           ;	Chosen strategy is simple_byte
 10749   0022AC  500D               	movf	??_I2C_DO_TX^0,w,c
 10750   0022AE  0A01               	xorlw	1	; case 1
 10751   0022B0  B4D8               	btfsc	status,2,c
 10752   0022B2  EF38  F011         	goto	i2l6305
 10753   0022B6  0A03               	xorlw	3	; case 2
 10754   0022B8  B4D8               	btfsc	status,2,c
 10755   0022BA  EF30  F011         	goto	i2l6297
 10756   0022BE  0A01               	xorlw	1	; case 3
 10757   0022C0  B4D8               	btfsc	status,2,c
 10758   0022C2  EF34  F011         	goto	i2l6301
 10759   0022C6  0A07               	xorlw	7	; case 4
 10760   0022C8  B4D8               	btfsc	status,2,c
 10761   0022CA  EF38  F011         	goto	i2l6305
 10762   0022CE  EF38  F011         	goto	i2l6305
 10763   0022D2                     i2l559:
 10764                           
 10765                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
 10766   0022D2  0100               	movlb	0	; () banked
 10767   0022D4  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
 10768   0022D6                     
 10769                           ; BSR set to: 0
 10770                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 10771   0022D6  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
 10772   0022DA  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
 10773   0022DE  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10774   0022E0  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
 10775   0022E2  50DF               	movf	indf2,w,c
 10776   0022E4  ECD9  F01A         	call	_I2C_MasterSendTxData
 10777   0022E8                     
 10778                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 10779   0022E8  0100               	movlb	0	; () banked
 10780   0022EA  077F               	decf	(_I2C_Status+31)& (0+255),f,b
 10781   0022EC  A0D8               	btfss	status,0,c
 10782   0022EE  0780               	decf	(_I2C_Status+32)& (0+255),f,b
 10783   0022F0  517F               	movf	(_I2C_Status+31)& (0+255),w,b
 10784   0022F2  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10785   0022F4  A4D8               	btfss	status,2,c
 10786   0022F6  EF7F  F011         	goto	i2u382_41
 10787   0022FA  EF81  F011         	goto	i2u382_40
 10788   0022FE                     i2u382_41:
 10789   0022FE  EF84  F011         	goto	i2l6319
 10790   002302                     i2u382_40:
 10791   002302                     
 10792                           ; BSR set to: 0
 10793   002302  0E06               	movlw	6
 10794   002304  EF85  F011         	goto	i2l562
 10795   002308                     i2l6319:
 10796                           
 10797                           ; BSR set to: 0
 10798   002308  0E03               	movlw	3
 10799   00230A                     i2l562:
 10800   00230A  0012               	return		;funcret
 10801   00230C                     __end_of_I2C_DO_TX:
 10802                           	callstack 0
 10803                           
 10804 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 10805 ;; Defined at:
 10806 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;		None
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;		None
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      enum E3134
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10824 ;;Total ram usage:        0 bytes
 10825 ;; Hardware stack levels used: 1
 10826 ;; Hardware stack levels required when called: 1
 10827 ;; This function calls:
 10828 ;;		_I2C_MasterSendTxData
 10829 ;; This function is called by:
 10830 ;;		_I2C_MasterFsm
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           	psect	text97
 10835   0034AE                     __ptext97:
 10836                           	callstack 0
 10837   0034AE                     _I2C_DO_SEND_ADR_WRITE:
 10838                           	callstack 13
 10839   0034AE                     
 10840                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
 10841   0034AE  0100               	movlb	0	; () banked
 10842   0034B0  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
 10843   0034B2                     
 10844                           ; BSR set to: 0
 10845                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 10846   0034B2  517C               	movf	(_I2C_Status+28)& (0+255),w,b
 10847   0034B4  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
 10848   0034B6  ECD9  F01A         	call	_I2C_MasterSendTxData
 10849   0034BA                     
 10850                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
 10851   0034BA  0E03               	movlw	3
 10852   0034BC  0012               	return		;funcret
 10853   0034BE                     __end_of_I2C_DO_SEND_ADR_WRITE:
 10854                           	callstack 0
 10855                           
 10856 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 10857 ;; Defined at:
 10858 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;		None
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;		None
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  1    wreg      enum E3134
 10865 ;; Registers used:
 10866 ;;		wreg, status,0, cstack
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10876 ;;Total ram usage:        0 bytes
 10877 ;; Hardware stack levels used: 1
 10878 ;; Hardware stack levels required when called: 1
 10879 ;; This function calls:
 10880 ;;		_I2C_MasterSendTxData
 10881 ;; This function is called by:
 10882 ;;		_I2C_MasterFsm
 10883 ;; This function uses a non-reentrant model
 10884 ;;
 10885                           
 10886                           	psect	text98
 10887   0034BE                     __ptext98:
 10888                           	callstack 0
 10889   0034BE                     _I2C_DO_SEND_ADR_READ:
 10890                           	callstack 13
 10891   0034BE                     
 10892                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
 10893   0034BE  0100               	movlb	0	; () banked
 10894   0034C0  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
 10895   0034C2                     
 10896                           ; BSR set to: 0
 10897                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 10898   0034C2  80D8               	bsf	status,0,c
 10899   0034C4  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 10900   0034C6  ECD9  F01A         	call	_I2C_MasterSendTxData
 10901   0034CA                     
 10902                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
 10903   0034CA  0E05               	movlw	5
 10904   0034CC  0012               	return		;funcret
 10905   0034CE                     __end_of_I2C_DO_SEND_ADR_READ:
 10906                           	callstack 0
 10907                           
 10908 ;; *************** function _I2C_DO_IDLE *****************
 10909 ;; Defined at:
 10910 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;		None
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;		None
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  1    wreg      enum E3134
 10917 ;; Registers used:
 10918 ;;		wreg, status,2
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10928 ;;Total ram usage:        0 bytes
 10929 ;; Hardware stack levels used: 1
 10930 ;; This function calls:
 10931 ;;		Nothing
 10932 ;; This function is called by:
 10933 ;;		_I2C_MasterFsm
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text99
 10938   0034F4                     __ptext99:
 10939                           	callstack 0
 10940   0034F4                     _I2C_DO_IDLE:
 10941                           	callstack 14
 10942   0034F4                     
 10943                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
 10944   0034F4  0100               	movlb	0	; () banked
 10945   0034F6  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
 10946   0034F8                     
 10947                           ; BSR set to: 0
 10948                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
 10949   0034F8  0E00               	movlw	0
 10950   0034FA  6F82               	movwf	(_I2C_Status+34)& (0+255),b
 10951   0034FC                     
 10952                           ; BSR set to: 0
 10953                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
 10954   0034FC  0E0E               	movlw	14
 10955   0034FE                     
 10956                           ; BSR set to: 0
 10957   0034FE  0012               	return		;funcret
 10958   003500                     __end_of_I2C_DO_IDLE:
 10959                           	callstack 0
 10960                           
 10961 ;; *************** function _I2C_DO_TX_EMPTY *****************
 10962 ;; Defined at:
 10963 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;		None
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;		None
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  1    wreg      enum E3134
 10970 ;; Registers used:
 10971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10981 ;;Total ram usage:        2 bytes
 10982 ;; Hardware stack levels used: 1
 10983 ;; Hardware stack levels required when called: 3
 10984 ;; This function calls:
 10985 ;;		NULL
 10986 ;;		_I2C_CallbackReturnReset
 10987 ;;		_I2C_CallbackReturnStop
 10988 ;;		_I2C_DO_SEND_RESTART
 10989 ;;		_I2C_DO_SEND_STOP
 10990 ;;		_I2C_MasterSetIrq
 10991 ;;		_rd1RegCompleteHandler
 10992 ;;		_rd2RegCompleteHandler
 10993 ;;		_rdBlkRegCompleteHandler
 10994 ;;		_wr1RegCompleteHandler
 10995 ;;		_wr2RegCompleteHandler
 10996 ;; This function is called by:
 10997 ;;		_I2C_MasterFsm
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001                           	psect	text100
 11002   0027E4                     __ptext100:
 11003                           	callstack 0
 11004   0027E4                     _I2C_DO_TX_EMPTY:
 11005                           	callstack 11
 11006   0027E4                     
 11007                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
 11008   0027E4  0100               	movlb	0	; () banked
 11009   0027E6  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
 11010                           
 11011                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11012   0027E8  EF03  F014         	goto	i2l6375
 11013   0027EC                     i2l6359:
 11014                           
 11015                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
 11016   0027EC  ECCD  F01A         	call	_I2C_DO_SEND_RESTART	;wreg free
 11017   0027F0  EF2F  F014         	goto	i2l593
 11018   0027F4                     i2l6363:
 11019                           
 11020                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
 11021   0027F4  ECF2  F01A         	call	_I2C_MasterSetIrq	;wreg free
 11022   0027F8                     
 11023                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
 11024   0027F8  0E03               	movlw	3
 11025   0027FA  EF2F  F014         	goto	i2l593
 11026   0027FE                     i2l6369:
 11027                           
 11028                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
 11029   0027FE  ECC9  F01A         	call	_I2C_DO_SEND_STOP	;wreg free
 11030   002802  EF2F  F014         	goto	i2l593
 11031   002806                     i2l6375:
 11032                           
 11033                           ; BSR set to: 0
 11034   002806  C06C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11035   00280A  C06D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11036   00280E  D802               	call	i2u385_48
 11037   002810  EF13  F014         	goto	i2u385_49
 11038   002814                     i2u385_48:
 11039   002814  0005               	push	
 11040   002816  6EFA               	movwf	pclath,c
 11041   002818  5160               	movf	_I2C_Status& (0+255),w,b
 11042   00281A  6EFD               	movwf	tosl,c
 11043   00281C  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 11044   00281E  6EFE               	movwf	tosh,c
 11045   002820  6AFF               	clrf	tosu,c
 11046   002822  50FA               	movf	pclath,w,c
 11047   002824  0012               	return		;indir
 11048   002826                     i2u385_49:
 11049   002826  6E0D               	movwf	??_I2C_DO_TX_EMPTY^0,c
 11050   002828  6A0E               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 11051                           
 11052                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11053                           ; Switch size 1, requested type "simple"
 11054                           ; Number of cases is 1, Range of values is 0 to 0
 11055                           ; switch strategies available:
 11056                           ; Name         Instructions Cycles
 11057                           ; simple_byte            4     3 (average)
 11058                           ;	Chosen strategy is simple_byte
 11059   00282A  500E               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 11060   00282C  0A00               	xorlw	0	; case 0
 11061   00282E  B4D8               	btfsc	status,2,c
 11062   002830  EF1C  F014         	goto	i2l9395
 11063   002834  EFFF  F013         	goto	i2l6369
 11064   002838                     i2l9395:
 11065                           
 11066                           ; Switch size 1, requested type "simple"
 11067                           ; Number of cases is 4, Range of values is 1 to 4
 11068                           ; switch strategies available:
 11069                           ; Name         Instructions Cycles
 11070                           ; simple_byte           13     7 (average)
 11071                           ;	Chosen strategy is simple_byte
 11072   002838  500D               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 11073   00283A  0A01               	xorlw	1	; case 1
 11074   00283C  B4D8               	btfsc	status,2,c
 11075   00283E  EFFF  F013         	goto	i2l6369
 11076   002842  0A03               	xorlw	3	; case 2
 11077   002844  B4D8               	btfsc	status,2,c
 11078   002846  EFF6  F013         	goto	i2l6359
 11079   00284A  0A01               	xorlw	1	; case 3
 11080   00284C  B4D8               	btfsc	status,2,c
 11081   00284E  EFF6  F013         	goto	i2l6359
 11082   002852  0A07               	xorlw	7	; case 4
 11083   002854  B4D8               	btfsc	status,2,c
 11084   002856  EFFA  F013         	goto	i2l6363
 11085   00285A  EFFF  F013         	goto	i2l6369
 11086   00285E                     i2l593:
 11087   00285E  0012               	return		;funcret
 11088   002860                     __end_of_I2C_DO_TX_EMPTY:
 11089                           	callstack 0
 11090                           
 11091 ;; *************** function _I2C_MasterSetIrq *****************
 11092 ;; Defined at:
 11093 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
 11094 ;; Parameters:    Size  Location     Type
 11095 ;;		None
 11096 ;; Auto vars:     Size  Location     Type
 11097 ;;		None
 11098 ;; Return value:  Size  Location     Type
 11099 ;;                  1    wreg      void 
 11100 ;; Registers used:
 11101 ;;		None
 11102 ;; Tracked objects:
 11103 ;;		On entry : 0/0
 11104 ;;		On exit  : 0/0
 11105 ;;		Unchanged: 0/0
 11106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11111 ;;Total ram usage:        0 bytes
 11112 ;; Hardware stack levels used: 1
 11113 ;; This function calls:
 11114 ;;		Nothing
 11115 ;; This function is called by:
 11116 ;;		_I2C_DO_TX_EMPTY
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text101
 11121   0035E4                     __ptext101:
 11122                           	callstack 0
 11123   0035E4                     _I2C_MasterSetIrq:
 11124                           	callstack 13
 11125   0035E4                     
 11126                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
 11127   0035E4  869E               	bsf	158,3,c	;volatile
 11128   0035E6  0012               	return		;funcret
 11129   0035E8                     __end_of_I2C_MasterSetIrq:
 11130                           	callstack 0
 11131                           
 11132 ;; *************** function _I2C_MasterIsNack *****************
 11133 ;; Defined at:
 11134 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;		None
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;		None
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  1    wreg      _Bool 
 11141 ;; Registers used:
 11142 ;;		wreg
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;Total ram usage:        0 bytes
 11153 ;; Hardware stack levels used: 1
 11154 ;; This function calls:
 11155 ;;		Nothing
 11156 ;; This function is called by:
 11157 ;;		_I2C_MasterFsm
 11158 ;;		_I2C_DO_TX
 11159 ;; This function uses a non-reentrant model
 11160 ;;
 11161                           
 11162                           	psect	text102
 11163   00349A                     __ptext102:
 11164                           	callstack 0
 11165   00349A                     _I2C_MasterIsNack:
 11166                           	callstack 14
 11167   00349A                     
 11168                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
 11169   00349A  BCC5               	btfsc	197,6,c	;volatile
 11170   00349C  EF52  F01A         	goto	i2u375_41
 11171   0034A0  EF55  F01A         	goto	i2u375_40
 11172   0034A4                     i2u375_41:
 11173   0034A4  0E01               	movlw	1
 11174   0034A6  EF56  F01A         	goto	i2u375_46
 11175   0034AA                     i2u375_40:
 11176   0034AA  0E00               	movlw	0
 11177   0034AC                     i2u375_46:
 11178   0034AC  0012               	return		;funcret
 11179   0034AE                     __end_of_I2C_MasterIsNack:
 11180                           	callstack 0
 11181                           
 11182 ;; *************** function _I2C_MasterSendTxData *****************
 11183 ;; Defined at:
 11184 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  data            1    wreg     unsigned char 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  data            1    0[COMRAM] unsigned char 
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  1    wreg      void 
 11191 ;; Registers used:
 11192 ;;		wreg
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;Total ram usage:        1 bytes
 11203 ;; Hardware stack levels used: 1
 11204 ;; This function calls:
 11205 ;;		Nothing
 11206 ;; This function is called by:
 11207 ;;		_I2C_DO_SEND_ADR_READ
 11208 ;;		_I2C_DO_SEND_ADR_WRITE
 11209 ;;		_I2C_DO_TX
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           	psect	text103
 11214   0035B2                     __ptext103:
 11215                           	callstack 0
 11216   0035B2                     _I2C_MasterSendTxData:
 11217                           	callstack 13
 11218                           
 11219                           ;incstack = 0
 11220                           ;I2C_MasterSendTxData@data stored from wreg
 11221   0035B2  6E01               	movwf	I2C_MasterSendTxData@data^0,c
 11222   0035B4                     
 11223                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
 11224   0035B4  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 11225   0035B8  0012               	return		;funcret
 11226   0035BA                     __end_of_I2C_MasterSendTxData:
 11227                           	callstack 0
 11228                           
 11229 ;; *************** function _I2C_MasterSendAck *****************
 11230 ;; Defined at:
 11231 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
 11232 ;; Parameters:    Size  Location     Type
 11233 ;;		None
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;		None
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  1    wreg      void 
 11238 ;; Registers used:
 11239 ;;		None
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11249 ;;Total ram usage:        0 bytes
 11250 ;; Hardware stack levels used: 1
 11251 ;; This function calls:
 11252 ;;		Nothing
 11253 ;; This function is called by:
 11254 ;;		_I2C_DO_RX
 11255 ;;		_I2C_DO_RX_ACK
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259                           	psect	text104
 11260   0035C0                     __ptext104:
 11261                           	callstack 0
 11262   0035C0                     _I2C_MasterSendAck:
 11263                           	callstack 13
 11264   0035C0                     
 11265                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
 11266   0035C0  9AC5               	bcf	197,5,c	;volatile
 11267                           
 11268                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
 11269   0035C2  88C5               	bsf	197,4,c	;volatile
 11270   0035C4  0012               	return		;funcret
 11271   0035C6                     __end_of_I2C_MasterSendAck:
 11272                           	callstack 0
 11273                           
 11274 ;; *************** function _I2C_MasterGetRxData *****************
 11275 ;; Defined at:
 11276 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;		None
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;		None
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      unsigned char 
 11283 ;; Registers used:
 11284 ;;		wreg, status,2
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11294 ;;Total ram usage:        0 bytes
 11295 ;; Hardware stack levels used: 1
 11296 ;; This function calls:
 11297 ;;		Nothing
 11298 ;; This function is called by:
 11299 ;;		_I2C_DO_RX
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303                           	psect	text105
 11304   0035E8                     __ptext105:
 11305                           	callstack 0
 11306   0035E8                     _I2C_MasterGetRxData:
 11307                           	callstack 13
 11308   0035E8                     
 11309                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
 11310   0035E8  50C9               	movf	201,w,c	;volatile
 11311   0035EA  0012               	return		;funcret
 11312   0035EC                     __end_of_I2C_MasterGetRxData:
 11313                           	callstack 0
 11314                           
 11315 ;; *************** function _I2C_MasterSendNack *****************
 11316 ;; Defined at:
 11317 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;		None
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;		None
 11322 ;; Return value:  Size  Location     Type
 11323 ;;                  1    wreg      void 
 11324 ;; Registers used:
 11325 ;;		None
 11326 ;; Tracked objects:
 11327 ;;		On entry : 0/0
 11328 ;;		On exit  : 0/0
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;Total ram usage:        0 bytes
 11336 ;; Hardware stack levels used: 1
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		_I2C_DO_RX_NACK_STOP
 11341 ;;		_I2C_DO_RX_NACK_RESTART
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345                           	psect	text106
 11346   0035C6                     __ptext106:
 11347                           	callstack 0
 11348   0035C6                     _I2C_MasterSendNack:
 11349                           	callstack 13
 11350   0035C6                     
 11351                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
 11352   0035C6  8AC5               	bsf	197,5,c	;volatile
 11353                           
 11354                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
 11355   0035C8  88C5               	bsf	197,4,c	;volatile
 11356   0035CA  0012               	return		;funcret
 11357   0035CC                     __end_of_I2C_MasterSendNack:
 11358                           	callstack 0
 11359                           
 11360 ;; *************** function _I2C_MasterStartRx *****************
 11361 ;; Defined at:
 11362 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
 11363 ;; Parameters:    Size  Location     Type
 11364 ;;		None
 11365 ;; Auto vars:     Size  Location     Type
 11366 ;;		None
 11367 ;; Return value:  Size  Location     Type
 11368 ;;                  1    wreg      void 
 11369 ;; Registers used:
 11370 ;;		None
 11371 ;; Tracked objects:
 11372 ;;		On entry : 0/0
 11373 ;;		On exit  : 0/0
 11374 ;;		Unchanged: 0/0
 11375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11380 ;;Total ram usage:        0 bytes
 11381 ;; Hardware stack levels used: 1
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_I2C_DO_RCEN
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text107
 11390   0035EC                     __ptext107:
 11391                           	callstack 0
 11392   0035EC                     _I2C_MasterStartRx:
 11393                           	callstack 13
 11394   0035EC                     
 11395                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
 11396   0035EC  86C5               	bsf	197,3,c	;volatile
 11397   0035EE  0012               	return		;funcret
 11398   0035F0                     __end_of_I2C_MasterStartRx:
 11399                           	callstack 0
 11400                           
 11401 ;; *************** function _I2C_CallbackReturnReset *****************
 11402 ;; Defined at:
 11403 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;  funPtr          2    9[COMRAM] PTR void 
 11406 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11407 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;		None
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  1    wreg      enum E363
 11412 ;; Registers used:
 11413 ;;		wreg
 11414 ;; Tracked objects:
 11415 ;;		On entry : 0/0
 11416 ;;		On exit  : 0/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11423 ;;Total ram usage:        2 bytes
 11424 ;; Hardware stack levels used: 1
 11425 ;; This function calls:
 11426 ;;		Nothing
 11427 ;; This function is called by:
 11428 ;;		_I2C_Open
 11429 ;;		_I2C_DO_TX
 11430 ;;		_I2C_DO_RX
 11431 ;;		_I2C_DO_TX_EMPTY
 11432 ;;		_I2C_DO_ADDRESS_NACK
 11433 ;;		_I2C_DO_RX_EMPTY
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437                           	psect	text108
 11438   0035F0                     __ptext108:
 11439                           	callstack 0
 11440   0035F0                     _I2C_CallbackReturnReset:
 11441                           	callstack 13
 11442   0035F0                     
 11443                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
 11444   0035F0  0E05               	movlw	5
 11445   0035F2  0012               	return		;funcret
 11446   0035F4                     __end_of_I2C_CallbackReturnReset:
 11447                           	callstack 0
 11448                           
 11449 ;; *************** function _I2C_CallbackReturnStop *****************
 11450 ;; Defined at:
 11451 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 11452 ;; Parameters:    Size  Location     Type
 11453 ;;  funPtr          2    9[COMRAM] PTR void 
 11454 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11455 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;		None
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      enum E363
 11460 ;; Registers used:
 11461 ;;		wreg
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;Total ram usage:        2 bytes
 11472 ;; Hardware stack levels used: 1
 11473 ;; This function calls:
 11474 ;;		Nothing
 11475 ;; This function is called by:
 11476 ;;		_I2C_Open
 11477 ;;		_I2C_SetCallback
 11478 ;;		i2_I2C_SetCallback
 11479 ;;		_I2C_DO_TX
 11480 ;;		_I2C_DO_RX
 11481 ;;		_I2C_DO_TX_EMPTY
 11482 ;;		_I2C_DO_ADDRESS_NACK
 11483 ;;		_I2C_DO_RX_EMPTY
 11484 ;; This function uses a non-reentrant model
 11485 ;;
 11486                           
 11487                           	psect	text109
 11488   0035F4                     __ptext109:
 11489                           	callstack 0
 11490   0035F4                     _I2C_CallbackReturnStop:
 11491                           	callstack 13
 11492   0035F4                     
 11493                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
 11494   0035F4  0E01               	movlw	1
 11495   0035F6  0012               	return		;funcret
 11496   0035F8                     __end_of_I2C_CallbackReturnStop:
 11497                           	callstack 0
 11498                           
 11499 ;; *************** function _rdBlkRegCompleteHandler *****************
 11500 ;; Defined at:
 11501 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 11502 ;; Parameters:    Size  Location     Type
 11503 ;;  ptr             2    9[COMRAM] PTR void 
 11504 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11505 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;		None
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1    wreg      enum E363
 11510 ;; Registers used:
 11511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/0
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11519 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;Total ram usage:        3 bytes
 11522 ;; Hardware stack levels used: 1
 11523 ;; Hardware stack levels required when called: 2
 11524 ;; This function calls:
 11525 ;;		i2_I2C_SetBuffer
 11526 ;;		i2_I2C_SetDataCompleteCallback
 11527 ;; This function is called by:
 11528 ;;		_I2C_ReadDataBlock
 11529 ;;		_I2C_DO_TX
 11530 ;;		_I2C_DO_RX
 11531 ;;		_I2C_DO_TX_EMPTY
 11532 ;;		_I2C_DO_ADDRESS_NACK
 11533 ;;		_I2C_DO_RX_EMPTY
 11534 ;; This function uses a non-reentrant model
 11535 ;;
 11536                           
 11537                           	psect	text110
 11538   002F6E                     __ptext110:
 11539                           	callstack 0
 11540   002F6E                     _rdBlkRegCompleteHandler:
 11541                           	callstack 11
 11542   002F6E                     
 11543                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 11544   002F6E  EE20 F002          	lfsr	2,2
 11545   002F72  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 11546   002F74  26D9               	addwf	fsr2l,f,c
 11547   002F76  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 11548   002F78  22DA               	addwfc	fsr2h,f,c
 11549   002F7A  50DF               	movf	indf2,w,c
 11550   002F7C  6E0C               	movwf	??_rdBlkRegCompleteHandler^0,c
 11551   002F7E  C00C  F001         	movff	??_rdBlkRegCompleteHandler,i2I2C_SetBuffer@buffer
 11552   002F82  6A02               	clrf	(i2I2C_SetBuffer@buffer+1)^0,c
 11553   002F84  C00A  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 11554   002F88  C00B  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 11555   002F8C  CFDE F003          	movff	postinc2,i2I2C_SetBuffer@bufferSize
 11556   002F90  CFDD F004          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
 11557   002F94  ECCD  F019         	call	i2_I2C_SetBuffer	;wreg free
 11558   002F98                     
 11559                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11560   002F98  0E00               	movlw	0
 11561   002F9A  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11562   002F9C  0E00               	movlw	0
 11563   002F9E  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11564   002FA0  0E00               	movlw	0
 11565   002FA2  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11566   002FA4  0E00               	movlw	0
 11567   002FA6  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11568   002FA8  EC2C  F01A         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11569   002FAC                     
 11570                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 11571   002FAC  0E02               	movlw	2
 11572   002FAE  0012               	return		;funcret
 11573   002FB0                     __end_of_rdBlkRegCompleteHandler:
 11574                           	callstack 0
 11575                           
 11576 ;; *************** function _wr1RegCompleteHandler *****************
 11577 ;; Defined at:
 11578 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  ptr             2    9[COMRAM] PTR void 
 11581 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11582 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11583 ;; Auto vars:     Size  Location     Type
 11584 ;;		None
 11585 ;; Return value:  Size  Location     Type
 11586 ;;                  1    wreg      enum E363
 11587 ;; Registers used:
 11588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11589 ;; Tracked objects:
 11590 ;;		On entry : 0/0
 11591 ;;		On exit  : 0/0
 11592 ;;		Unchanged: 0/0
 11593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11598 ;;Total ram usage:        2 bytes
 11599 ;; Hardware stack levels used: 1
 11600 ;; Hardware stack levels required when called: 2
 11601 ;; This function calls:
 11602 ;;		i2_I2C_SetBuffer
 11603 ;;		i2_I2C_SetDataCompleteCallback
 11604 ;; This function is called by:
 11605 ;;		_I2C_Write1ByteRegister
 11606 ;;		_I2C_DO_TX
 11607 ;;		_I2C_DO_RX
 11608 ;;		_I2C_DO_TX_EMPTY
 11609 ;;		_I2C_DO_ADDRESS_NACK
 11610 ;;		_I2C_DO_RX_EMPTY
 11611 ;; This function uses a non-reentrant model
 11612 ;;
 11613                           
 11614                           	psect	text111
 11615   00322E                     __ptext111:
 11616                           	callstack 0
 11617   00322E                     _wr1RegCompleteHandler:
 11618                           	callstack 11
 11619   00322E                     
 11620                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 11621   00322E  C00A  F001         	movff	wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11622   003232  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11623   003236  0E00               	movlw	0
 11624   003238  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11625   00323A  0E01               	movlw	1
 11626   00323C  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11627   00323E  ECCD  F019         	call	i2_I2C_SetBuffer	;wreg free
 11628   003242                     
 11629                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11630   003242  0E00               	movlw	0
 11631   003244  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11632   003246  0E00               	movlw	0
 11633   003248  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11634   00324A  0E00               	movlw	0
 11635   00324C  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11636   00324E  0E00               	movlw	0
 11637   003250  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11638   003252  EC2C  F01A         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11639   003256                     
 11640                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 11641   003256  0E04               	movlw	4
 11642   003258  0012               	return		;funcret
 11643   00325A                     __end_of_wr1RegCompleteHandler:
 11644                           	callstack 0
 11645                           
 11646 ;; *************** function _rd2RegCompleteHandler *****************
 11647 ;; Defined at:
 11648 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;  ptr             2    9[COMRAM] PTR void 
 11651 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11652 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;		None
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  1    wreg      enum E363
 11657 ;; Registers used:
 11658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11659 ;; Tracked objects:
 11660 ;;		On entry : 0/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11668 ;;Total ram usage:        2 bytes
 11669 ;; Hardware stack levels used: 1
 11670 ;; Hardware stack levels required when called: 2
 11671 ;; This function calls:
 11672 ;;		i2_I2C_SetBuffer
 11673 ;;		i2_I2C_SetDataCompleteCallback
 11674 ;; This function is called by:
 11675 ;;		_I2C_Read2ByteRegister
 11676 ;;		_I2C_DO_TX
 11677 ;;		_I2C_DO_RX
 11678 ;;		_I2C_DO_TX_EMPTY
 11679 ;;		_I2C_DO_ADDRESS_NACK
 11680 ;;		_I2C_DO_RX_EMPTY
 11681 ;; This function uses a non-reentrant model
 11682 ;;
 11683                           
 11684                           	psect	text112
 11685   00325A                     __ptext112:
 11686                           	callstack 0
 11687   00325A                     _rd2RegCompleteHandler:
 11688                           	callstack 11
 11689   00325A                     
 11690                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 11691   00325A  C00A  F001         	movff	rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11692   00325E  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11693   003262  0E00               	movlw	0
 11694   003264  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11695   003266  0E02               	movlw	2
 11696   003268  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11697   00326A  ECCD  F019         	call	i2_I2C_SetBuffer	;wreg free
 11698   00326E                     
 11699                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11700   00326E  0E00               	movlw	0
 11701   003270  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11702   003272  0E00               	movlw	0
 11703   003274  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11704   003276  0E00               	movlw	0
 11705   003278  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11706   00327A  0E00               	movlw	0
 11707   00327C  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11708   00327E  EC2C  F01A         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11709   003282                     
 11710                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 11711   003282  0E02               	movlw	2
 11712   003284  0012               	return		;funcret
 11713   003286                     __end_of_rd2RegCompleteHandler:
 11714                           	callstack 0
 11715                           
 11716 ;; *************** function _rd1RegCompleteHandler *****************
 11717 ;; Defined at:
 11718 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;  ptr             2    9[COMRAM] PTR void 
 11721 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11722 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11723 ;; Auto vars:     Size  Location     Type
 11724 ;;		None
 11725 ;; Return value:  Size  Location     Type
 11726 ;;                  1    wreg      enum E363
 11727 ;; Registers used:
 11728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11729 ;; Tracked objects:
 11730 ;;		On entry : 0/0
 11731 ;;		On exit  : 0/0
 11732 ;;		Unchanged: 0/0
 11733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11738 ;;Total ram usage:        2 bytes
 11739 ;; Hardware stack levels used: 1
 11740 ;; Hardware stack levels required when called: 2
 11741 ;; This function calls:
 11742 ;;		i2_I2C_SetBuffer
 11743 ;;		i2_I2C_SetDataCompleteCallback
 11744 ;; This function is called by:
 11745 ;;		_I2C_Read1ByteRegister
 11746 ;;		_I2C_DO_TX
 11747 ;;		_I2C_DO_RX
 11748 ;;		_I2C_DO_TX_EMPTY
 11749 ;;		_I2C_DO_ADDRESS_NACK
 11750 ;;		_I2C_DO_RX_EMPTY
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754                           	psect	text113
 11755   003286                     __ptext113:
 11756                           	callstack 0
 11757   003286                     _rd1RegCompleteHandler:
 11758                           	callstack 11
 11759   003286                     
 11760                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 11761   003286  C00A  F001         	movff	rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11762   00328A  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11763   00328E  0E00               	movlw	0
 11764   003290  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11765   003292  0E01               	movlw	1
 11766   003294  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11767   003296  ECCD  F019         	call	i2_I2C_SetBuffer	;wreg free
 11768   00329A                     
 11769                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11770   00329A  0E00               	movlw	0
 11771   00329C  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11772   00329E  0E00               	movlw	0
 11773   0032A0  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11774   0032A2  0E00               	movlw	0
 11775   0032A4  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11776   0032A6  0E00               	movlw	0
 11777   0032A8  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11778   0032AA  EC2C  F01A         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11779   0032AE                     
 11780                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 11781   0032AE  0E02               	movlw	2
 11782   0032B0  0012               	return		;funcret
 11783   0032B2                     __end_of_rd1RegCompleteHandler:
 11784                           	callstack 0
 11785                           
 11786 ;; *************** function _wr2RegCompleteHandler *****************
 11787 ;; Defined at:
 11788 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 11789 ;; Parameters:    Size  Location     Type
 11790 ;;  ptr             2    9[COMRAM] PTR void 
 11791 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11792 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;		None
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      enum E363
 11797 ;; Registers used:
 11798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11808 ;;Total ram usage:        2 bytes
 11809 ;; Hardware stack levels used: 1
 11810 ;; Hardware stack levels required when called: 2
 11811 ;; This function calls:
 11812 ;;		i2_I2C_SetBuffer
 11813 ;;		i2_I2C_SetDataCompleteCallback
 11814 ;; This function is called by:
 11815 ;;		_I2C_Write2ByteRegister
 11816 ;;		_I2C_DO_TX
 11817 ;;		_I2C_DO_RX
 11818 ;;		_I2C_DO_TX_EMPTY
 11819 ;;		_I2C_DO_ADDRESS_NACK
 11820 ;;		_I2C_DO_RX_EMPTY
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           	psect	text114
 11825   0032B2                     __ptext114:
 11826                           	callstack 0
 11827   0032B2                     _wr2RegCompleteHandler:
 11828                           	callstack 11
 11829   0032B2                     
 11830                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 11831   0032B2  C00A  F001         	movff	wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11832   0032B6  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11833   0032BA  0E00               	movlw	0
 11834   0032BC  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11835   0032BE  0E02               	movlw	2
 11836   0032C0  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11837   0032C2  ECCD  F019         	call	i2_I2C_SetBuffer	;wreg free
 11838   0032C6                     
 11839                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11840   0032C6  0E00               	movlw	0
 11841   0032C8  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11842   0032CA  0E00               	movlw	0
 11843   0032CC  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11844   0032CE  0E00               	movlw	0
 11845   0032D0  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11846   0032D2  0E00               	movlw	0
 11847   0032D4  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11848   0032D6  EC2C  F01A         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11849   0032DA                     
 11850                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 11851   0032DA  0E04               	movlw	4
 11852   0032DC  0012               	return		;funcret
 11853   0032DE                     __end_of_wr2RegCompleteHandler:
 11854                           	callstack 0
 11855                           
 11856 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
 11857 ;; Defined at:
 11858 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 11859 ;; Parameters:    Size  Location     Type
 11860 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 11861 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11862 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11863 ;;  ptr             2    7[COMRAM] PTR void 
 11864 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11865 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11866 ;; Auto vars:     Size  Location     Type
 11867 ;;		None
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  1    wreg      void 
 11870 ;; Registers used:
 11871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11872 ;; Tracked objects:
 11873 ;;		On entry : 0/0
 11874 ;;		On exit  : 0/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11881 ;;Total ram usage:        4 bytes
 11882 ;; Hardware stack levels used: 1
 11883 ;; Hardware stack levels required when called: 1
 11884 ;; This function calls:
 11885 ;;		i2_I2C_SetCallback
 11886 ;; This function is called by:
 11887 ;;		_rd1RegCompleteHandler
 11888 ;;		_rd2RegCompleteHandler
 11889 ;;		_wr1RegCompleteHandler
 11890 ;;		_wr2RegCompleteHandler
 11891 ;;		_rdBlkRegCompleteHandler
 11892 ;; This function uses a non-reentrant model
 11893 ;;
 11894                           
 11895                           	psect	text115
 11896   003458                     __ptext115:
 11897                           	callstack 0
 11898   003458                     i2_I2C_SetDataCompleteCallback:
 11899                           	callstack 11
 11900   003458                     
 11901                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 11902   003458  C006  F001         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
 11903   00345C  C007  F002         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
 11904   003460  C008  F003         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
 11905   003464  C009  F004         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
 11906   003468  0E00               	movlw	0
 11907   00346A  ECDF  F015         	call	i2_I2C_SetCallback
 11908   00346E  0012               	return		;funcret
 11909   003470                     __end_ofi2_I2C_SetDataCompleteCallback:
 11910                           	callstack 0
 11911                           
 11912 ;; *************** function i2_I2C_SetCallback *****************
 11913 ;; Defined at:
 11914 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 11915 ;; Parameters:    Size  Location     Type
 11916 ;;  idx             1    wreg     enum E3152
 11917 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 11918 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11919 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11920 ;;  ptr             2    2[COMRAM] PTR void 
 11921 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11922 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11923 ;; Auto vars:     Size  Location     Type
 11924 ;;  idx             1    4[COMRAM] enum E3152
 11925 ;; Return value:  Size  Location     Type
 11926 ;;                  1    wreg      void 
 11927 ;; Registers used:
 11928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11929 ;; Tracked objects:
 11930 ;;		On entry : 0/0
 11931 ;;		On exit  : 0/0
 11932 ;;		Unchanged: 0/0
 11933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11937 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11938 ;;Total ram usage:        5 bytes
 11939 ;; Hardware stack levels used: 1
 11940 ;; This function calls:
 11941 ;;		Nothing
 11942 ;; This function is called by:
 11943 ;;		i2_I2C_SetDataCompleteCallback
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947                           	psect	text116
 11948   002BBE                     __ptext116:
 11949                           	callstack 0
 11950   002BBE                     i2_I2C_SetCallback:
 11951                           	callstack 11
 11952                           
 11953                           ;incstack = 0
 11954                           ;i2I2C_SetCallback@idx stored from wreg
 11955   002BBE  6E05               	movwf	i2I2C_SetCallback@idx^0,c
 11956   002BC0                     
 11957                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
 11958   002BC0  5001               	movf	i2I2C_SetCallback@cb^0,w,c
 11959   002BC2  1002               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
 11960   002BC4  B4D8               	btfsc	status,2,c
 11961   002BC6  EFE7  F015         	goto	i2u363_41
 11962   002BCA  EFE9  F015         	goto	i2u363_40
 11963   002BCE                     i2u363_41:
 11964   002BCE  EFFF  F015         	goto	i2l5985
 11965   002BD2                     i2u363_40:
 11966   002BD2                     
 11967                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
 11968   002BD2  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 11969   002BD4  0D02               	mullw	2
 11970   002BD6  50F3               	movf	243,w,c
 11971   002BD8  0F60               	addlw	low _I2C_Status
 11972   002BDA  6ED9               	movwf	fsr2l,c
 11973   002BDC  6ADA               	clrf	fsr2h,c
 11974   002BDE  C001  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
 11975   002BE2  C002  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
 11976                           
 11977                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
 11978   002BE6  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 11979   002BE8  0D02               	mullw	2
 11980   002BEA  50F3               	movf	243,w,c
 11981   002BEC  0F6C               	addlw	low (_I2C_Status+12)
 11982   002BEE  6ED9               	movwf	fsr2l,c
 11983   002BF0  6ADA               	clrf	fsr2h,c
 11984   002BF2  C003  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
 11985   002BF6  C004  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
 11986                           
 11987                           ;mcc_generated_files/i2c_master.c: 310:     }
 11988   002BFA  EF11  F016         	goto	i2l540
 11989   002BFE                     i2l5985:
 11990                           
 11991                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 11992   002BFE  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 11993   002C00  0D02               	mullw	2
 11994   002C02  50F3               	movf	243,w,c
 11995   002C04  0F60               	addlw	low _I2C_Status
 11996   002C06  6ED9               	movwf	fsr2l,c
 11997   002C08  6ADA               	clrf	fsr2h,c
 11998   002C0A  0EF4               	movlw	low _I2C_CallbackReturnStop
 11999   002C0C  6EDE               	movwf	postinc2,c
 12000   002C0E  0E35               	movlw	high _I2C_CallbackReturnStop
 12001   002C10  6EDD               	movwf	postdec2,c
 12002                           
 12003                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 12004   002C12  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 12005   002C14  0D02               	mullw	2
 12006   002C16  50F3               	movf	243,w,c
 12007   002C18  0F6C               	addlw	low (_I2C_Status+12)
 12008   002C1A  6ED9               	movwf	fsr2l,c
 12009   002C1C  6ADA               	clrf	fsr2h,c
 12010   002C1E  6ADE               	clrf	postinc2,c
 12011   002C20  6ADD               	clrf	postdec2,c
 12012   002C22                     i2l540:
 12013   002C22  0012               	return		;funcret
 12014   002C24                     __end_ofi2_I2C_SetCallback:
 12015                           	callstack 0
 12016                           
 12017 ;; *************** function i2_I2C_SetBuffer *****************
 12018 ;; Defined at:
 12019 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 12020 ;; Parameters:    Size  Location     Type
 12021 ;;  buffer          2    0[COMRAM] PTR void 
 12022 ;;		 -> I2C_Read1ByteRegister@returnValue$data(3), I2C_Read2ByteRegister@returnValue$data(3), I2C_Write1ByteRegister@dat
      +a$data(3), I2C_Write2ByteRegister@data$data(3), 
 12023 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock$data(3), I2C_Write2ByteRegister@reg(1), 
 12024 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
 12025 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
 12026 ;;  bufferSize      2    2[COMRAM] unsigned int 
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;Total ram usage:        4 bytes
 12043 ;; Hardware stack levels used: 1
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		_rd1RegCompleteHandler
 12048 ;;		_rd2RegCompleteHandler
 12049 ;;		_wr1RegCompleteHandler
 12050 ;;		_wr2RegCompleteHandler
 12051 ;;		_rdBlkRegCompleteHandler
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           
 12055                           	psect	text117
 12056   00339A                     __ptext117:
 12057                           	callstack 0
 12058   00339A                     i2_I2C_SetBuffer:
 12059                           	callstack 12
 12060   00339A                     
 12061                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
 12062   00339A  0100               	movlb	0	; () banked
 12063   00339C  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
 12064   00339E  EFD3  F019         	goto	i2u372_41
 12065   0033A2  EFD5  F019         	goto	i2u372_40
 12066   0033A6                     i2u372_41:
 12067   0033A6  EFDE  F019         	goto	i2l517
 12068   0033AA                     i2u372_40:
 12069   0033AA                     
 12070                           ; BSR set to: 0
 12071                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
 12072   0033AA  C001  F07D         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
 12073   0033AE  C002  F07E         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
 12074   0033B2                     
 12075                           ; BSR set to: 0
 12076                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
 12077   0033B2  C003  F07F         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
 12078   0033B6  C004  F080         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 12079   0033BA                     
 12080                           ; BSR set to: 0
 12081                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
 12082   0033BA  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
 12083   0033BC                     i2l517:
 12084                           
 12085                           ; BSR set to: 0
 12086   0033BC  0012               	return		;funcret
 12087   0033BE                     __end_ofi2_I2C_SetBuffer:
 12088                           	callstack 0
 12089                           
 12090 ;; *************** function _I2C_MasterStop *****************
 12091 ;; Defined at:
 12092 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 12093 ;; Parameters:    Size  Location     Type
 12094 ;;		None
 12095 ;; Auto vars:     Size  Location     Type
 12096 ;;		None
 12097 ;; Return value:  Size  Location     Type
 12098 ;;                  1    wreg      void 
 12099 ;; Registers used:
 12100 ;;		None
 12101 ;; Tracked objects:
 12102 ;;		On entry : 0/0
 12103 ;;		On exit  : 0/0
 12104 ;;		Unchanged: 0/0
 12105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12110 ;;Total ram usage:        0 bytes
 12111 ;; Hardware stack levels used: 1
 12112 ;; This function calls:
 12113 ;;		Nothing
 12114 ;; This function is called by:
 12115 ;;		_I2C_DO_SEND_STOP
 12116 ;; This function uses a non-reentrant model
 12117 ;;
 12118                           
 12119                           	psect	text118
 12120   0035F8                     __ptext118:
 12121                           	callstack 0
 12122   0035F8                     _I2C_MasterStop:
 12123                           	callstack 12
 12124   0035F8                     
 12125                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 12126   0035F8  84C5               	bsf	197,2,c	;volatile
 12127   0035FA  0012               	return		;funcret
 12128   0035FC                     __end_of_I2C_MasterStop:
 12129                           	callstack 0
 12130                           
 12131 ;; *************** function _I2C_MasterEnableRestart *****************
 12132 ;; Defined at:
 12133 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 12134 ;; Parameters:    Size  Location     Type
 12135 ;;		None
 12136 ;; Auto vars:     Size  Location     Type
 12137 ;;		None
 12138 ;; Return value:  Size  Location     Type
 12139 ;;                  1    wreg      void 
 12140 ;; Registers used:
 12141 ;;		None
 12142 ;; Tracked objects:
 12143 ;;		On entry : 0/0
 12144 ;;		On exit  : 0/0
 12145 ;;		Unchanged: 0/0
 12146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12151 ;;Total ram usage:        0 bytes
 12152 ;; Hardware stack levels used: 1
 12153 ;; This function calls:
 12154 ;;		Nothing
 12155 ;; This function is called by:
 12156 ;;		_I2C_DO_SEND_RESTART_READ
 12157 ;;		_I2C_DO_SEND_RESTART_WRITE
 12158 ;;		_I2C_DO_SEND_RESTART
 12159 ;;		_I2C_DO_RX_EMPTY
 12160 ;; This function uses a non-reentrant model
 12161 ;;
 12162                           
 12163                           	psect	text119
 12164   0035FC                     __ptext119:
 12165                           	callstack 0
 12166   0035FC                     _I2C_MasterEnableRestart:
 12167                           	callstack 12
 12168   0035FC                     
 12169                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 12170   0035FC  82C5               	bsf	197,1,c	;volatile
 12171   0035FE  0012               	return		;funcret
 12172   003600                     __end_of_I2C_MasterEnableRestart:
 12173                           	callstack 0
 12174                           
 12175                           	psect	text120
 12176   000000                     __ptext120:
 12177                           	callstack 0
 12178   000000                     
 12179                           	psect	rparam
 12180   000000                     
 12181                           	psect	temp
 12182   000041                     btemp:
 12183                           	callstack 0
 12184   000041                     	ds	1
 12185   000000                     int$flags	set	btemp
 12186   000000                     wtemp8	set	btemp+1
 12187   000000                     ttemp5	set	btemp+1
 12188   000000                     ttemp6	set	btemp+4
 12189   000000                     ttemp7	set	btemp+8
 12190                           
 12191                           	psect	config
 12192                           
 12193                           ; Padding undefined space
 12194   300000                     	org	3145728
 12195   300000  FF                 	db	255
 12196                           
 12197                           ;Config register CONFIG1H @ 0x300001
 12198                           ;	Oscillator Selection bits
 12199                           ;	FOSC = HS, HS oscillator
 12200                           ;	Fail-Safe Clock Monitor Enable bit
 12201                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12202                           ;	Internal/External Oscillator Switchover bit
 12203                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12204   300001                     	org	3145729
 12205   300001  02                 	db	2
 12206                           
 12207                           ;Config register CONFIG2L @ 0x300002
 12208                           ;	Power-up Timer Enable bit
 12209                           ;	PWRTEN = OFF, PWRT disabled
 12210                           ;	Brown-out Reset Enable bits
 12211                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12212                           ;	Brown Out Reset Voltage bits
 12213                           ;	BORV = 18, VBOR set to 1.8 V nominal
 12214   300002                     	org	3145730
 12215   300002  1F                 	db	31
 12216                           
 12217                           ;Config register CONFIG2H @ 0x300003
 12218                           ;	Watchdog Timer Enable bit
 12219                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 12220                           ;	Watchdog Timer Postscale Select bits
 12221                           ;	WDTPS = 32768, 1:32768
 12222   300003                     	org	3145731
 12223   300003  1E                 	db	30
 12224                           
 12225                           ; Padding undefined space
 12226   300004                     	org	3145732
 12227   300004  FF                 	db	255
 12228                           
 12229                           ;Config register CONFIG3H @ 0x300005
 12230                           ;	CCP2 MUX bit
 12231                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 12232                           ;	PORTB A/D Enable bit
 12233                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 12234                           ;	Low-Power Timer1 Oscillator Enable bit
 12235                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12236                           ;	HFINTOSC Fast Start-up
 12237                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 12238                           ;	MCLR Pin Enable bit
 12239                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12240   300005                     	org	3145733
 12241   300005  8B                 	db	139
 12242                           
 12243                           ;Config register CONFIG4L @ 0x300006
 12244                           ;	Stack Full/Underflow Reset Enable bit
 12245                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12246                           ;	Single-Supply ICSP Enable bit
 12247                           ;	LVP = ON, Single-Supply ICSP enabled
 12248                           ;	Extended Instruction Set Enable bit
 12249                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12250                           ;	Background Debugger Enable bit
 12251                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 12252   300006                     	org	3145734
 12253   300006  85                 	db	133
 12254                           
 12255                           ; Padding undefined space
 12256   300007                     	org	3145735
 12257   300007  FF                 	db	255
 12258                           
 12259                           ;Config register CONFIG5L @ 0x300008
 12260                           ;	Code Protection Block 0
 12261                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12262                           ;	Code Protection Block 1
 12263                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12264                           ;	Code Protection Block 2
 12265                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12266                           ;	Code Protection Block 3
 12267                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12268   300008                     	org	3145736
 12269   300008  0F                 	db	15
 12270                           
 12271                           ;Config register CONFIG5H @ 0x300009
 12272                           ;	Boot Block Code Protection bit
 12273                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12274                           ;	Data EEPROM Code Protection bit
 12275                           ;	CPD = OFF, Data EEPROM not code-protected
 12276   300009                     	org	3145737
 12277   300009  C0                 	db	192
 12278                           
 12279                           ;Config register CONFIG6L @ 0x30000A
 12280                           ;	Write Protection Block 0
 12281                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12282                           ;	Write Protection Block 1
 12283                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12284                           ;	Write Protection Block 2
 12285                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12286                           ;	Write Protection Block 3
 12287                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 12288   30000A                     	org	3145738
 12289   30000A  0F                 	db	15
 12290                           
 12291                           ;Config register CONFIG6H @ 0x30000B
 12292                           ;	Configuration Register Write Protection bit
 12293                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12294                           ;	Boot Block Write Protection bit
 12295                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12296                           ;	Data EEPROM Write Protection bit
 12297                           ;	WRTD = OFF, Data EEPROM not write-protected
 12298   30000B                     	org	3145739
 12299   30000B  E0                 	db	224
 12300                           
 12301                           ;Config register CONFIG7L @ 0x30000C
 12302                           ;	Table Read Protection Block 0
 12303                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12304                           ;	Table Read Protection Block 1
 12305                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12306                           ;	Table Read Protection Block 2
 12307                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12308                           ;	Table Read Protection Block 3
 12309                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12310   30000C                     	org	3145740
 12311   30000C  0F                 	db	15
 12312                           
 12313                           ;Config register CONFIG7H @ 0x30000D
 12314                           ;	Boot Block Table Read Protection bit
 12315                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12316   30000D                     	org	3145741
 12317   30000D  40                 	db	64
 12318                           tosu	equ	0xFFF
 12319                           tosh	equ	0xFFE
 12320                           tosl	equ	0xFFD
 12321                           stkptr	equ	0xFFC
 12322                           pclatu	equ	0xFFB
 12323                           pclath	equ	0xFFA
 12324                           pcl	equ	0xFF9
 12325                           tblptru	equ	0xFF8
 12326                           tblptrh	equ	0xFF7
 12327                           tblptrl	equ	0xFF6
 12328                           tablat	equ	0xFF5
 12329                           prodh	equ	0xFF4
 12330                           prodl	equ	0xFF3
 12331                           indf0	equ	0xFEF
 12332                           postinc0	equ	0xFEE
 12333                           postdec0	equ	0xFED
 12334                           preinc0	equ	0xFEC
 12335                           plusw0	equ	0xFEB
 12336                           fsr0h	equ	0xFEA
 12337                           fsr0l	equ	0xFE9
 12338                           wreg	equ	0xFE8
 12339                           indf1	equ	0xFE7
 12340                           postinc1	equ	0xFE6
 12341                           postdec1	equ	0xFE5
 12342                           preinc1	equ	0xFE4
 12343                           plusw1	equ	0xFE3
 12344                           fsr1h	equ	0xFE2
 12345                           fsr1l	equ	0xFE1
 12346                           bsr	equ	0xFE0
 12347                           indf2	equ	0xFDF
 12348                           postinc2	equ	0xFDE
 12349                           postdec2	equ	0xFDD
 12350                           preinc2	equ	0xFDC
 12351                           plusw2	equ	0xFDB
 12352                           fsr2h	equ	0xFDA
 12353                           fsr2l	equ	0xFD9
 12354                           status	equ	0xFD8

Data Sizes:
    Strings     133
    Constant    32
    Data        45
    BSS         131
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      64
    BANK0           160     38     160
    BANK1           256     36      72
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), lightSwitch(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), lightSwitch(), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SendString@str	PTR unsigned char  size(2) Largest target is 10
		 -> datestr(BANK0[10]), STR_1(CODE[7]), STR_2(CODE[7]), timestr(BANK0[10]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$3529	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_RX$3529$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$3534	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$3541$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$3523	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX$3523$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$3528	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$3535	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX_EMPTY$3535$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$3540	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    i2c_fsmStateTable	const PTR FTN()enum E3134[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_MasterFsm$3522	const PTR FTN()enum E3134 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_Status$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_Status$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> bufferBlock$data(COMRAM[3]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[3]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[3]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@data$data(COMRAM[3]), I2C_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), manual_Override(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), manual_Override(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), manual_homelight(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), manual_homelight(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), manual_Doorlight(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), manual_Doorlight(), 

    LAT_Reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllllll[1]), LATB(ABS[1]), LATC(ABS[1]), LATD(BITBIGSFRlllllll[1]), 
		 -> LATE(BITBIGSFRlllllll[1]), 

    LCD4B_SENDCHAR@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    LCD4B_SENDCMD@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    LCD4B_SENDSTR@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    LCD4B_SENDSTR@str	PTR unsigned char  size(1) Largest target is 10
		 -> datestr(BANK0[10]), LCDtemp(BANK0[4]), timestr(BANK0[10]), 

    LCD4B_SENDSTR@str_old	PTR unsigned char  size(1) Largest target is 10
		 -> datestr(BANK0[10]), LCDtemp(BANK0[4]), timestr(BANK0[10]), 

    LCD4B_SENDSTRPOS@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    LCD4B_SENDSTRPOS@str	PTR unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), STR_5(CODE[7]), STR_6(CODE[7]), 

    LCD4B_SET@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    PINSTART@pinconfig	PTR const struct . size(2) Largest target is 1
		 -> LCD4B_SET@pinptr(BANK1[1]), LCD4B_SET@pinptr_2461(BANK1[1]), 

    PINWRITE@pinconfig	PTR const struct . size(2) Largest target is 1
		 -> LCD4B_SENDCHAR@pinptr(BANK1[1]), LCD4B_SENDCHARPOS@pinptr(COMRAM[1]), LCD4B_SENDCMD@pinptr(BANK1[1]), LCD4B_SET@pinptr(BANK1[1]), 
		 -> LCD4B_SET@pinptr_2461(BANK1[1]), send4bit@pinobj(COMRAM[1]), sendenable@pinEN(BANK1[1]), 

    PORT_Reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllllh[1]), PORTB(BITBIGSFRlllllh[1]), PORTC(BITBIGSFRlllllh[1]), PORTD(BITBIGSFRlllllh[1]), 
		 -> PORTE(BITBIGSFRlllllh[1]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 51
		 -> STR_10(CODE[51]), STR_11(CODE[44]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    S183$data	PTR unsigned char  size(2) Largest target is 0

    S3040$buffer	PTR unsigned char  size(2) Largest target is 0

    S3040$source	PTR const unsigned char  size(2) Largest target is 0

    S921$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S921$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S921$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S921$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    sendenable@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    setcursor4bit@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    sp__DateArray	PTR unsigned char  size(1) Largest target is 3
		 -> _Date(COMRAM[3]), 

    sp__memset	PTR void  size(2) Largest target is 0

    sp__PrintDateUART	PTR unsigned char  size(1) Largest target is 10
		 -> datestr(BANK0[10]), 

    sp__PrintTimeUART	PTR unsigned char  size(1) Largest target is 10
		 -> timestr(BANK0[10]), 

    sp__TimeArray	PTR unsigned char  size(1) Largest target is 3
		 -> _Time(COMRAM[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> LCDtemp(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 10
		 -> datestr(BANK0[10]), LCDtemp(BANK0[4]), STR_1(CODE[7]), STR_2(CODE[7]), 
		 -> timestr(BANK0[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> datestr(BANK0[10]), LCDtemp(BANK0[4]), STR_1(CODE[7]), STR_2(CODE[7]), 
		 -> timestr(BANK0[10]), 

    TRIS_Reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllhll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(BITBIGSFRlllhll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 51
		 -> STR_10(CODE[51]), STR_11(CODE[44]), STR_3(CODE[3]), STR_7(CODE[3]), 
		 -> STR_8(CODE[3]), STR_9(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 51
		 -> STR_10(CODE[51]), STR_11(CODE[44]), STR_3(CODE[3]), STR_7(CODE[3]), 
		 -> STR_8(CODE[3]), STR_9(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 51
		 -> STR_10(CODE[51]), STR_11(CODE[44]), STR_3(CODE[3]), STR_7(CODE[3]), 
		 -> STR_8(CODE[3]), STR_9(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INT2_CallBack->_manual_Doorlight
    _INT1_CallBack->_manual_homelight
    _INT0_CallBack->_manual_Override
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _ReadTemp->_I2C_Read1ByteRegister
    _TimeArray->_GetDataAndTime
    _EUSART_SendString->_strlen
    _DateArray->_GetDataAndTime
    _GetDataAndTime->_I2C_Read1ByteRegister
    _PINSTART->_PINWRITE
    _LCD4B_SENDCMD->_PINWRITE
    _LCD4B_SENDCHAR->_PINWRITE
    _sendenable->_PINWRITE
    _PINWRITE->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___aldiv
    _vfpfcnvrt->_abs
    _abs->___almod
    _EXTEEPROM_WriteByte->_I2C_Write1ByteRegister
    _I2C_Write1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Write1ByteRegister->_I2C_SetDataCompleteCallback
    _EXTEEPROM_ReadByte->_I2C_Read1ByteRegister
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterWrite->_I2C_MasterOperation

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LCD4B_SENDSTRPOS
    _LCD4B_SET->_LCD4B_SENDCMD
    _PINSTART->_PINWRITE
    _LCD4B_SENDSTRPOS->_setcursor4bit
    _setcursor4bit->_LCD4B_SENDCMD
    _LCD4B_SENDCMD->_sendenable
    _LCD4B_SENDSTR->_LCD4B_SENDCHAR
    _LCD4B_SENDCHAR->_sendenable
    _sendenable->_PINWRITE
    _PINWRITE->_printf

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  257111
                                             34 BANK1      2     2      0
                  _ADC_GetConversion
            _ADC_SetInterruptHandler
                 _EXTEEPROM_ReadByte
                _EXTEEPROM_WriteByte
                     _GetDataAndTime
             _I2C_Write1ByteRegister
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
                     _LCD4B_SENDCHAR
                      _LCD4B_SENDSTR
                   _LCD4B_SENDSTRPOS
                          _LCD4B_SET
                      _PrintDateUART
                      _PrintTimeUART
                           _ReadTemp
                  _SYSTEM_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6   11217
                                              0 BANK1     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1207
                     _ADC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     633
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     211
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadTemp                                             2     2      0    7993
                                             12 BANK0      2     2      0
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _PrintTimeUART                                        2     0      2    8725
                                             19 BANK0      2     0      2
                  _EUSART_SendString
                          _TimeArray
 ---------------------------------------------------------------------------------
 (2) _TimeArray                                            0     0      0    7925
                     _GetDataAndTime
 ---------------------------------------------------------------------------------
 (1) _PrintDateUART                                        2     0      2    8725
                                             19 BANK0      2     0      2
                          _DateArray
                  _EUSART_SendString
 ---------------------------------------------------------------------------------
 (2) _EUSART_SendString                                    4     2      2     800
                                              4 BANK0      4     2      2
                       _EUSART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DateArray                                            0     0      0    7925
                     _GetDataAndTime
 ---------------------------------------------------------------------------------
 (3) _GetDataAndTime                                       7     0      7    7925
                                             12 BANK0      7     0      7
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _LCD4B_SET                                            8     7      1   58772
                                             24 BANK1      7     6      1
                      _LCD4B_SENDCMD
                           _PINSTART
 ---------------------------------------------------------------------------------
 (2) _PINSTART                                             8     6      2   24186
                                             10 BANK1      8     6      2
                           _PINWRITE
                             _printf
 ---------------------------------------------------------------------------------
 (1) _LCD4B_SENDSTRPOS                                     5     1      4   66152
                                             30 BANK1      4     0      4
                     _LCD4B_SENDCHAR
                      _setcursor4bit
 ---------------------------------------------------------------------------------
 (2) _setcursor4bit                                        6     3      3   34032
                                             24 BANK1      6     3      3
                      _LCD4B_SENDCMD
 ---------------------------------------------------------------------------------
 (2) _LCD4B_SENDCMD                                       10     8      2   32668
                                             14 BANK1     10     8      2
                           _PINWRITE
                         _sendenable
 ---------------------------------------------------------------------------------
 (1) _LCD4B_SENDSTR                                        5     3      2   31706
                                             24 BANK1      4     2      2
                     _LCD4B_SENDCHAR
                      _PrintDateUART (ARG)
                      _PrintTimeUART (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD4B_SENDCHAR                                      10     8      2   30188
                                             14 BANK1     10     8      2
                           _PINWRITE
                         _sendenable
 ---------------------------------------------------------------------------------
 (3) _sendenable                                           4     3      1   14360
                                             10 BANK1      4     3      1
                           _PINWRITE
 ---------------------------------------------------------------------------------
 (3) _PINWRITE                                             9     6      3   13211
                                             37 BANK0      1     1      0
                                              2 BANK1      8     5      3
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               5     4      1   10013
                                             36 BANK0      1     0      1
                                              0 BANK1      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    9546
                                             30 BANK0      6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    11      5    8387
                                             14 BANK0     16    11      5
                            ___aldiv
                            ___almod
                            ___lldiv
                            ___llmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1639
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     289
                                             10 BANK0      4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     683
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     713
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8    1063
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8    1103
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _EXTEEPROM_WriteByte                                  3     1      2    7984
                                             12 BANK0      3     1      2
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _I2C_Write1ByteRegister                               3     1      2    7531
                                              9 BANK0      3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _EXTEEPROM_ReadByte                                   3     2      1    8111
                                             12 BANK0      3     2      1
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1    7925
                                              9 BANK0      3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2629
                                              5 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1872
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    2259
                                              5 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4    1117
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0     189
                                              2 BANK0      2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _I2C_SetInterruptHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0      68
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0      68
                                              0 BANK0      2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      37
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManagerLow                       5     5      0       0
                                             27 COMRAM     5     5      0
                            _ADC_ISR
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
                        _lightSwitch *
 ---------------------------------------------------------------------------------
 (13) _lightSwitch                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManagerHigh                     10    10      0   24357
                                             17 COMRAM    10    10      0
                                NULL *
                      _I2C_MasterIsr *
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (15) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT2_CallBack                                       0     0      0       0
                                NULL *
       _INT2_DefaultInterruptHandler *
                   _manual_Doorlight *
 ---------------------------------------------------------------------------------
 (17) _manual_Doorlight                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0       0
                                NULL *
       _INT1_DefaultInterruptHandler *
                   _manual_homelight *
 ---------------------------------------------------------------------------------
 (17) _manual_homelight                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT0_CallBack                                       0     0      0       0
                                NULL *
       _INT0_DefaultInterruptHandler *
                    _manual_Override *
 ---------------------------------------------------------------------------------
 (17) _manual_Override                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C_MasterIsr                                       0     0      0   24357
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (16) _I2C_MasterFsm                                       3     3      0   24357
                                             14 COMRAM     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i2_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_TX_EMPTY                                     2     2      0    6066
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_TX                                           2     2      0    6097
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (17) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (18) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_SEND_ADR_WRITE                               0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_SEND_ADR_READ                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterSendTxData                                1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RX                                           2     2      0    6066
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_ADDRESS_NACK                                 2     2      0    6066
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (18) _wr2RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (18) _wr1RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (18) _rdBlkRegCompleteHandler                             3     1      2    1173
                                              9 COMRAM     3     1      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (18) _rd2RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (18) _rd1RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (19) i2_I2C_SetDataCompleteCallback                       4     0      4     699
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (20) i2_I2C_SetCallback                                   5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (19) i2_I2C_SetBuffer                                     4     0      4     412
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (18) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (19) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (19) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _I2C_CallbackReturnReset                             2     0      2     325
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_SetInterruptHandler
   _EXTEEPROM_ReadByte
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterEnableIrq
         _I2C_MasterOpen
         _I2C_SetInterruptHandler
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
   _EXTEEPROM_WriteByte
     _I2C_Write1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _GetDataAndTime
     _I2C_Read1ByteRegister
   _I2C_Write1ByteRegister
   _INT0_SetInterruptHandler
   _INT1_SetInterruptHandler
   _INT2_SetInterruptHandler
   _LCD4B_SENDCHAR
     _PINWRITE
       _printf
         _vfprintf
           _vfpfcnvrt
             ___aldiv
             ___almod
             ___lldiv
             ___llmod
             _abs
               ___almod (ARG)
             _fputc
               _putch
     _sendenable
       _PINWRITE
   _LCD4B_SENDSTR
     _LCD4B_SENDCHAR
     _PrintDateUART (ARG)
       _DateArray
         _GetDataAndTime
       _EUSART_SendString
         _EUSART_Write
         _strlen
     _PrintTimeUART (ARG)
       _EUSART_SendString
       _TimeArray
         _GetDataAndTime
     _strlen (ARG)
   _LCD4B_SENDSTRPOS
     _LCD4B_SENDCHAR
     _setcursor4bit
       _LCD4B_SENDCMD
         _PINWRITE
         _sendenable
   _LCD4B_SET
     _LCD4B_SENDCMD
     _PINSTART
       _PINWRITE
       _printf
   _PrintDateUART
   _PrintTimeUART
   _ReadTemp
     _I2C_Read1ByteRegister
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _sprintf
     _vfprintf

 _INTERRUPT_InterruptManagerLow (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _lightSwitch *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
             i2_I2C_SetCallback
         _rd2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i2_I2C_MasterClearIrq *
   _INT0_ISR *
     _INT0_CallBack
       NULL(Fake) *
       _INT0_DefaultInterruptHandler *
       _manual_Override *
   _INT1_ISR *
     _INT1_CallBack
       NULL(Fake) *
       _INT1_DefaultInterruptHandler *
       _manual_homelight *
   _INT2_ISR *
     _INT2_CallBack
       NULL(Fake) *
       _INT2_DefaultInterruptHandler *
       _manual_Doorlight *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     24      48       7       28.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     26      A0       5      100.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      40       1       68.1%
BITBIGSFRlh         1C      0       0      38        0.0%
BITBIGSFRllllll     1C      0       0      49        0.0%
BITBIGSFRllhhhl      7      0       0      42        0.0%
BITBIGSFRllhhhh      7      0       0      41        0.0%
BITBIGSFRhh          7      0       0      36        0.0%
BITBIGSFRllhhhh      6      0       0      40        0.0%
BITBIGSFRlllllh      4      0       0      47        0.0%
BITBIGSFRlllhh       4      0       0      45        0.0%
BITBIGSFRlllhll      4      0       0      46        0.0%
BITBIGSFRllhlh       3      0       0      43        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      37        0.0%
BITBIGSFRllllll      1      0       0      48        0.0%
BITBIGSFRllhlll      1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     128      50        0.0%
DATA                 0      0     128       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan 01 23:53:13 2024

                       ??_I2C_DO_SEND_ADR_READ 0001                        __end_of_manual_Override 2766  
                                            l9 3484                        ??_I2C_DO_SEND_ADR_WRITE 0002  
                                  _SSPSTATbits 0FC7                                             l12 3426  
                                           l33 2A1C                                             l41 30C4  
                                           l50 2CE6                                             l60 33F6  
                                           l37 30F2                                             l53 2C84  
                                           l47 2D48                                             l95 27E2  
                                           _dt 0021                                             bsr 0FE0  
                       __end_of_GetDataAndTime 2A1E                             _EXTEEPROM_ReadByte 3410  
                        ??_I2C_DO_SEND_RESTART 0001                                            l113 28D2  
                                          l225 3096                                            l510 3560  
                                          l504 2F6C                                            l520 343E  
                                          l360 33FC                                            l336 2F28  
                                          l192 3508                                            l363 340E  
                                          l540 2A86                                            l701 35CE  
                                          l517 3398                                            l381 3544  
                                          l189 3350                                            l710 35DE  
                                          l526 3456                                            l535 3558  
                                          l375 353A                                            l800 332C  
                                          l378 3530                                            l490 3498  
                                          l707 35D6                                            l662 35DA  
                                          l494 265A                                            l815 2FCC  
                                          l751 34DA                                            l680 35D2  
                                          l818 2FEE                                            l498 3120  
                                          l659 33DE                                            l828 354E  
                                          l872 351C                                            l859 3526  
                                          l891 302C                                            l885 3512  
                   ??_INT0_SetInterruptHandler 00DA                                            _abs 302E  
                                          _lcd 00CC                                __end_of_ADC_ISR 3150  
                       fp__I2C_DO_RX_NACK_STOP 0000                 ?_EUSART_SetFramingErrorHandler 00D8  
              __end_of_ADC_SetInterruptHandler 3550                                 _LCD4B_SENDCHAR 1AE4  
                              ??_setcursor4bit 011B                                            tosl 0FFD  
                                          wreg 0FE8                                  _INT0_CallBack 3202  
                 ?_ADC_DefaultInterruptHandler 0001                   ??_I2C_SetAddressNackCallback 00E1  
                          ?_EXTEEPROM_ReadByte 00E4                         _I2C_Write1ByteRegister 2860  
                     ??_I2C_CallbackReturnStop 000C                                   _I2C_DO_RESET 34DC  
                                _INT1_CallBack 31D6                                 fp__lightSwitch 0000  
                                         l1111 1810                                           l1104 1F32  
                                         l1115 193E                                           l1107 177C  
                                         ?_abs 00E2                        ??_rd2RegCompleteHandler 000C  
                                         l1126 1AE2                                           l1118 195A  
                                         l1152 2DFE                                           l1160 2B56  
                                         l1137 1C86                                           l1129 1AFE  
                                         l1226 2512                                           l1219 2502  
                                         l1092 1DEC                                           l1271 2158  
                                         l1179 2944                                           l1284 2246  
                                         l1612 26D4                                           l1189 246C  
                                         l1619 26E4                                           l6001 25E0  
                                         l6011 2602                                           l6003 25E8  
                                         l6021 262A                                           l6013 260A  
                                         l6005 25EA                                           l1925 1562  
                                         l6031 264E                                           l6023 2632  
                                         l6015 2612                                           l6007 25F2  
                                         l1952 304A                                           l6033 2652  
                                         l6025 263A                                           l6017 261A  
                                         l6009 25FA                                           l6041 3376  
                                         l6121 27B0                                           l6113 276A  
                                         l6051 355A                                           l6027 2646  
                                         l6019 2622                                           l6035 2658  
                                         l6043 3386                                           l6123 27C6  
                                         l6115 2770                                           l1955 3062  
                                         l1948 2E9E                                           l1876 2EE4  
                                         l6061 310C                                           l6029 264A  
                                         l6045 338E                                           l6125 27CA  
                                         l6117 2788                                           l1982 3374  
                                         l6063 3118                                           l6055 30F4  
                                         l6047 3396                                           l6039 3428  
                                         l6127 27DE                                           l6119 279C  
                                         l1967 23C6                                           l1991 2E52  
                                         l6065 311C                                           l6057 30FA  
                                         l6049 3440                                           l1985 3600  
                                         l6059 3108                                           l6251 2A08  
                                         l6411 3514                                           l6261 2E12  
                                         l6253 2A0A                                           l6501 2CE8  
                                         l6413 350A                                           l6263 2E44  
                                         l6503 2D00                                           l6407 3546  
                                         l6271 3532                                           l6511 3486  
                                         l6257 2E00                                           l6249 29B4  
                                         l6505 2D26                                           l6273 3528  
                                         l6409 351E                                           l6513 3496  
                                         l6521 3094                                           l9001 15B0  
                                         l6259 2E0C                                           l6267 33FC  
                                         l6507 2D2C                                           l6275 353C  
                                         l6531 3004                                           l6523 3500  
                                         l6515 3064                                           l9011 1624  
                                         l9003 15CC                                           l6269 340A  
                                         l6701 2CC4                                           l6541 302A  
                                         l6533 3006                                           l6525 2FF0  
                                         l6509 34CE                                           l6517 3080  
                                         l9021 166E                                           l9013 162E  
                                         l9005 15DC                                           l6471 28A4  
                                         l6463 2864                                           l6703 2CC8  
                                         l6711 2C24                                           l6543 3308  
                                         l6551 2EFA                                           l6535 3016  
                                         l6527 2FF4                                           l6519 308A  
                                         l9031 16CA                                           l9023 1680  
                                         l9015 1640                                           l9007 15F8  
                                         l6473 28BA                                           l6465 2864  
                                         l8401 24B8                                           l6481 30E6  
                                         l6705 2CD8                                           l6721 2C46  
                                         l6713 2C28                                           l6545 331C  
                                         l6553 2F08                                           l6537 3018  
                                         l6529 3002                                           l9041 1728  
                                         l9033 16DC                                           l9025 168E  
                                         l9017 164A                                           l9009 1608  
                                         l5931 3550                                           l6475 28BE  
                                         l6467 287C                                           l8411 24FC  
                                         l8403 24C2                                           l6483 30EA  
                                         l6707 2CE4                                           l6491 30A6  
                                         l6731 2C66                                           l6723 2C4E  
                                         l6715 2C32                                           l6547 331E  
                                         l6555 2F16                                           l6539 301A  
                                         l9043 173C                                           l9035 16F2  
                                         l9027 16A6                                           l9019 165E  
                                         l5933 35DC                                           l6469 2890  
                                         l8421 2074                                           l8413 204C  
                                         l8405 24E0                                           l8501 2696  
                                         l6485 30EE                                           l6477 30C6  
                                         l6493 30B8                                           l6733 2C76  
                                         l6725 2C52                                           l6717 2C3A  
                                         l6741 33E4                                           l6557 2F24  
                                         l6549 2EE6                                           l9045 1744  
                                         l9037 1704                                           l9029 16B4  
                                         l5919 35D0                                           l5951 2F34  
                                         l5943 35CC                                           l5935 33BE  
                                         l8431 20BC                                           l8423 2082  
                                         l8415 2052                                           l8407 24F0  
                                         l8503 26B4                                           l8511 2320  
                                         l6479 30D4                                           l6495 30BC  
                                         l6735 2C82                                           l6727 2C5A  
                                         l6719 2C3E                                           l6743 33F4  
                                         l6751 3336                                           l9039 171A  
                                         l5945 35D4                                           l5961 2F60  
                                         l5953 2F42                                           l5937 33CC  
                                         l8441 2106                                           l8433 20C4  
                                         l8425 2092                                           l8417 2060  
                                         l8409 24F2                                           l8505 26C4  
                                         l8513 2332                                           l8601 1428  
                                         l6497 30C0                                           l6489 3098  
                                         l6729 2C62                                           l6761 334A  
                                         l6753 333A                                           l6771 2FC8  
                                         l5947 35D8                                           l5963 2F64  
                                         l5955 2F44                                           l5939 33DC  
                                         l5971 2A36                                           l6675 3474  
                                         l8451 2138                                           l8443 2116  
                                         l8435 20D0                                           l8427 2096  
                                         l8419 2070                                           l8507 26CE  
                                         l8523 302E                                           l8515 233C  
                                         l8611 14E4                                           l8603 1462  
                                         l8531 10D6                                           l6691 2CA0  
                                         l6683 2C86                                           l6739 33E4  
                                         l6763 334C                                           l6755 333E  
                                         l6747 332E                                           l6773 2FCA  
                                         l5957 2F48                                           l5965 2F68  
                                         l5949 2F2E                                           l5973 2A62  
                                         l6677 3414                                           l8453 2148  
                                         l8445 2118                                           l8437 20DE  
                                         l8429 20A6                                           l8461 216E  
                                         l8525 303E                                           l8517 235A  
                                         l8509 230C                                           l8613 14E8  
                                         l8605 1496                                           l8541 110A  
                                         l8533 10E2                                           l8701 28D8  
                                         l6693 2CA8                                           l6685 2C8A  
                                         l6765 334E                                           l6757 3342  
                                         l6749 3332                                           l6775 2FDA  
                                         l5959 2F58                                           l5991 25D2  
                                         l6679 3424                                           l8447 2122  
                                         l8439 20E8                                           l8471 21B6  
                                         l8463 217E                                           l8391 246E  
                                         l8519 2390                                           l8607 14AE  
                                         l8551 1172                                           l8543 1112  
                                         l8535 10E6                                           l8623 153A  
                                         l8527 10A8                                           l8711 2924  
                                         l8703 28F2                                           l6695 2CB0  
                                         l6687 2C94                                           l6759 3346  
                        __end_of_LCD4B_SENDCMD 1AE4                                           l6769 2FB4  
                                         l5993 25D6                                           l5969 2A22  
                                         l8449 2128                                           l8481 2206  
                                         l8473 21BE                                           l8465 2182  
                                         l8457 215A                                           l8393 2480  
                                         l8609 14C2                                           l8617 14FE  
                                         l8561 1228                                           l8553 1194  
                                         l8537 10F0                                           l8529 10CE  
                                         l8713 292C                                           l8705 2910  
                                         l8801 1BF0                                           l8721 1952  
                                         l6697 2CB4                                           l6689 2C9C  
                                         l5995 25D8                                           l5987 25BE  
                                         l8483 2210                                           l8475 21CA  
                                         l8467 2190                                           l8459 2160  
                                         l8395 2496                                           l8619 152C  
                                         l8571 12C4                                           l8563 1232  
                                         l8555 11CA                                           l8539 1104  
                                         l8547 111A                                           l8715 2942  
                                         l8707 2912                                           l8803 1C2A  
                                         l8811 1C84                                           l8731 19A4  
                                         l8723 195E                                           l6699 2CBC  
                                         l5997 25DA                                           l5989 25C4  
                                         l8477 21D8                                           l8485 2216  
                                         l8469 21A0                                           l8397 249E  
                                         l8493 265C                                           l8581 1322  
                                         l8573 12DC                                           l8565 1236  
                                         l9381 112E                                           l8549 1154  
                                         l8653 2E54                                           l8709 2914  
                                         l8805 1C56                                           l8741 1A18  
                                         l8725 1990                                           l8821 1CBE  
                                         l8901 1850                                           l5999 25DC  
                                         l8487 2226                                           l8479 21F6  
                                         l8399 24AA                                           l8495 2674  
                                         l8591 13B8                                           l8583 1344  
                                         l8575 12EC                                           l8567 124A  
                                         l9383 1212                                           l8559 11FE  
                                         l8655 2E5C                                           l8663 3352  
                                         l8671 1DF4                                           l8807 1C5C  
                                         l8743 1A1E                                           l8727 1992  
                                         l8719 1940                                           l9375 1DB2  
                                         l8823 1CC2                                           l8815 1C88  
                                         l8911 1892                                           l8903 1852  
                                         l8489 2236                                           l8497 267C  
                                         l9385 1400                                           l8577 12FC  
                                         l8585 1348                                           l8569 1290  
                                         l8657 2E76                                           l8665 335A  
                                         l8681 1EA4                                           l8673 1E24  
                                         l8809 1C78                                           l8761 1AD4  
                                         l8753 1A4C                                           l8745 1A3A  
                                         l8737 19AE                                           l8729 1994  
                                         l9377 2444                                           l8825 1CD0  
                                         l8833 1D86                                           l8817 1C88  
                                         l8921 18F8                                           l8913 18A0  
                                         l8905 185E                                           l8499 2688  
                                         l9387 151E                                           l8595 13EC  
                                         l8579 130C                                           l8587 135E  
                                         l8659 2E94                                           l9379 1F18  
                                         l8683 1EFA                                           l8675 1E36  
                                         l8771 1B02                                           l8755 1A86  
                                         l8747 1A42                                           l8739 19E8  
                                         l8763 1AE0                                           l8851 23D0  
                                         l8827 1D2C                                           l8835 1DC8  
                                         l8819 1CAC                                           l8923 1906  
                                         l8915 18C0                                           l8907 1864  
                                         l8597 1416                                           l8589 1380  
                                         l8677 1E3C                                           l8669 1DEE  
                                         l8773 1B34                                           l8757 1AB2  
                                         l8853 23E6                                           l8829 1D82  
                                         l8837 1DE8                                           l8925 1914  
                                         l8917 18DC                                           l8909 1880  
                                         l8941 2ED8                                           l8933 2EA0  
                                         l8599 1424                                           l8679 1E48  
                                         l8687 1F04                                           l8791 1BC2  
                                         l8775 1B36                                           l8767 1AE4  
                                         l8759 1AB8                                           l8855 23FC  
                                         l8863 2430                                           l8847 23C8  
                                         l8951 2B1C                                           l8927 1922  
                                         l8919 18EA                                           l8935 2EAE  
                                         l8689 1F2E                                           l8697 28D4  
                                         l8793 1BDE                                           l8785 1B52  
                                         l8777 1B38                                           l8769 1AF6  
                                         l8961 2DAE                                           l8857 2412  
                                         l8865 246A                                           l8849 23C8  
                                         l8953 2B34                                           l8945 2AF2  
                                         l8929 1930                                           l8881 17B4  
                                         l8873 1766                                           l8937 2EB6  
                                         l8699 28D4                                           l8795 1BE6  
                                         l8787 1B8C                                           l8779 1B48  
                                         l8971 2DEC                                           l8963 2DC2  
                                         l8859 2428                                           l8955 2B38  
                                         l8947 2B04                                           l8891 1806  
                                         l8883 17B6                                           l8875 1778  
                                         l8939 2EBE                                           l8789 1BBC  
                                         l8973 2DFE                                           l8965 2DD2  
                                         l8957 2DAA                                           l8949 2B08  
                                         l8885 17C2                                           l8877 1780  
                                         l8967 2DD6                                           l8959 2DAA  
                                         l8887 17E2                                           l8879 17B2  
                                         STR_1 108E                                           STR_2 1095  
                                         l8969 2DE8                                           l8897 1814  
                                         l8889 17FA                                           STR_3 10A3  
                                         STR_4 1087                                           l8899 184E  
                                         STR_5 1095                                           STR_6 1080  
                                         l8997 1564                                           STR_7 10A0  
                                         l8999 15A0                                           STR_9 109C  
                                         _LATA 0F89                                           _LATB 0F8A  
                                         _LATC 0F8B                                           _LATD 0F8C  
                                         _LATE 0F8D                                           u4140 2FDA  
                        __end_of_LCD4B_SENDSTR 2E00                                           u4141 2FD6  
                                         u3600 2F42                                           u3601 2F3E  
                                         u3610 2F58                                           u3611 2F54  
                                         u3620 2A36                                           u5300 20BC  
                                         u3621 2A32                                           u5301 20B8  
                                         u5310 20DE                                           u5311 20DA  
                                         u6007 1614                                           u3640 25D2  
                                         u5320 2106                                           u5400 2674  
                                         u3641 25CE                                           u5321 2102  
                                         u5401 2670                                           u6017 169A  
                                         u3650 3386                                           u3730 2788  
                                         u5330 2138                                           u5250 2496  
                                         u5410 2696                                           u3651 3382  
                                         u3731 2784                                           u5331 2134  
                                         u5251 2492                                           u5411 2692  
                                         u6027 1750                                           u3660 3108  
                                         u3740 27DE                                           u5340 216E  
                                         u5260 24B8                                           u5420 26B4  
                                         u5500 1190                                           u3661 3104  
                                         u3741 27DA                                           u5341 216A  
                                         u5261 24B4                                           u5421 26B0  
                                         u5501 118C                                           u6037 1888  
                                         u3590 33CC                                           u5350 2190  
                                         u5270 24E0                                           u5430 2320  
                                         u5510 1246                                           u3591 33C8  
                                         u5351 218C                                           u5271 24DC  
                                         u5431 231C                                           u5511 1240  
                                         u6047 18A8                                           u3920 287C  
                                         u5280 2060                                           u5360 21B6  
                                         u5440 2332                                           u5600 14BE  
                                         u5520 1248                                           u3921 2878  
                                         u5281 205C                                           u5361 21B2  
                                         u5441 232E                                           u5601 14BA  
                                         u6057 18CC                                           u3761 2A14  
                                         u3930 28D2                                           u5290 2082  
                                         u5370 21D8                                           u5450 235A  
                                         u5610 14FA                                           u5530 12DC  
                                         u3770 2E34                                           u3931 28CE  
                                         u5291 207E                                           u5371 21D4  
                                         u5451 2356                                           u5611 14F6  
                                         u5531 12D8                                           u6067 2926  
                                         u5380 21F6                                           u5460 2390  
                                         u5540 12EC                                           u5620 2E94  
                                         u3780 2E44                                           u5700 1A3A  
                                         u3940 30D4                                           u5381 21F2  
                                         u5461 238C                                           u5541 12E8  
                                         u5621 2E90                                           u3781 2E40  
                                         u5701 1A36                                           u3941 30D0  
                                         u5390 2226                                           u5470 303E  
                                         u5550 12FC                                           u5630 1E10  
                                         u3790 340A                                           u5391 2222  
                                         u5471 303A                                           u5551 12F8  
                                         u5631 1E08                                           u3951 30DE  
                                         u3791 3406                                           u5560 130C  
                                         u5480 10CE                                           u5640 1E24  
                                         u5720 1AD4                                           u3960 30A6  
                                         u5561 1308                                           u5481 10CA  
                                         u5641 1E20                                           u3777 2E2A  
                                         u5721 1AD0                                           u3961 30A2  
                                         u5570 135A                                           u5490 1172  
                                         u5650 1E36                                           u5730 1AF6  
                                         u5714 1AA0                                           u5571 1356  
                                         u5491 116E                                           u5651 1E32  
                                         u5731 1AF2                                           u5715 1A9C  
                                         u3971 30B0                                           u5580 137C  
                                         u5820 1D9E                                           u5804 1CF0  
                                         u3980 2D22                                           u5581 1378  
                                         u5821 1D98                                           u5805 1CEC  
                                         u5590 14AE                                           u5638 1E14  
                                         u5750 1BDE                                           u5830 1DA0  
                                         u5814 1D4C                                           u3990 2D48  
                                         u5591 14AA                                           u5751 1BDA  
                                         u5815 1D48                                           u3991 2D44  
                                         u5911 1638                                           u5664 1E68  
                                         u5744 1BAA                                           u5680 1952  
                                         u5840 1778                                           u5920 1680  
                                         u5665 1E64                                           u5745 1BA6  
                                         u5681 194E                                           u5841 1774  
                                         u5921 167C                                           u5674 1EC4  
                                         u5770 1C78                                           u5850 1880  
                                         u5930 173C                                           u5675 1EC0  
                                         u5771 1C74                                           u5851 187C  
                                         u3987 2D18                                           u5931 1738  
                                         u5764 1C44                                           u5860 2B04  
                                         u5780 1CAC                                           u5765 1C40  
                                         u5861 2B00                                           u5781 1CA8  
                                         u5694 1A06                                           u5870 2B56  
                                         u5790 1CBE                                           u5695 1A02  
                                         u5871 2B52                                           u5791 1CBA  
                                         u5880 2DD2                                           u5881 2DCE  
                                         u5890 2DFE                                           u5891 2DFA  
                                         u5987 15BC                                           u5997 15E8  
                                         _WPUB 0F7C                                  _INT2_CallBack 31AA  
                          LCD4B_SENDCHAR@F3689 008E                        ??_wr2RegCompleteHandler 000C  
                                         abs@a 00E2                                           _dbuf 0124  
                                         _main 1564                       ?_I2C_CallbackReturnReset 000A  
                                         _prec 002A                                           fsr0h 0FEA  
                                         fsr1h 0FE2                                           indf0 0FEF  
                                         fsr2h 0FDA                                           fsr0l 0FE9  
                                         indf2 0FDF                                           fsr1l 0FE1  
                                         fsr2l 0FD9                               __end_of_I2C_Open 265C  
                                         btemp 0041                          ?i2_I2C_MasterClearIrq 0001  
                    ?_INT2_SetInterruptHandler 00D8                                           prodh 0FF4  
                                         prodl 0FF3                                           start 0066  
                      _I2C_SetInterruptHandler 3550                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                         ??_EXTEEPROM_ReadByte 00E5                                   ___param_bank 0000  
                                        ??_abs 00E4                               ?_I2C_MasterClose 0001  
                             __end_of_INT0_ISR 357A                               __end_of_INT1_ISR 3572  
                             __end_of_INT2_ISR 356A                                   ?_lightSwitch 0001  
                                ?_EUSART_Write 0001                               ?_I2C_MasterStart 0001  
                          fp__manual_homelight 0000                                  _I2C_DO_RX_ACK 358A  
                             ?_I2C_MasterWrite 0001                                ?_GetDataAndTime 00E4  
                __end_of_OSCILLATOR_Initialize 350A                            LCD4B_SENDCMD@i_2487 0115  
                              __end_of___aldiv 215A                                __end_of___almod 2248  
                                        ?_main 0001                         __end_of_LCD4B_SENDCHAR 1C88  
                                        _EEADR 0FA9                                          STR_10 1021  
                                        STR_11 1054                                          _ANSEL 0F7E  
                              __end_of___lldiv 2514                          _I2C_Read1ByteRegister 2766  
                              __end_of___llmod 26E6                                          i2l152 32B0  
                                        i2l161 32DC                                          i2l155 3284  
                                        i2l164 2FAE                                          i2l158 3258  
                                        i1l831 3602                                          i2l520 346E  
                                        i1l825 314E                                          i2l611 35B0  
                                        i2l540 2C22                                          i2l620 3598  
                                        i2l517 33BC                                          i1l773 004E  
                                        i2l550 34FE                                          i2l614 35A8  
                                        i2l710 35E2                                          i2l623 3590  
                                        i2l543 35BE                                          i2l632 34E6  
                                        i2l713 35E6                                          i2l553 34CC  
                                        i2l617 35A0                                          i2l562 230A  
                                        i2l626 3588                                          i2l547 29B2  
                                        i2l556 34BC                                          i2l629 3580  
                                        i2l646 35F6                                          i2l638 2BBC  
                                        i1l974 2AB0                                          i2l671 35FE  
                                        i2l559 22D2                                          i2l575 254A  
                                        i1l983 2AE8                                          i2l576 25B8  
                                        i2l760 1FC8                                          i2l649 35F2  
                                        i2l665 35EA                                          i2l593 285E  
                                        i2l761 2020                                          i1l977 2AB6  
                                        i2l762 2000                                          i1l986 2AEE  
                                        i2l683 35FA                                          i2l587 34F2  
                                        i2l692 35CA                                          i2l668 35B8  
                                        i2l852 3578                                          i2l756 1F80  
                                        i1l988 2AF0                                          i2l677 35EE  
                                        i2l686 34AC                                          i2l862 3608  
                                        i2l758 1FA4                                          i2l766 2020  
                                        i2l856 322C                                          i2l689 35C4  
                                        i2l865 3570                                          i2l882 31D4  
                                        i2l875 3606                                          i2l869 3200  
                                        i2l878 3568                                          i2l888 3604  
                                        _RCREG 0FAE                                          _RCSTA 0FAB  
                                 vfpfcnvrt@fmt 00E8                                          _SPBRG 0FAF  
                                        _PORTA 0F80                                          _PORTB 0F81  
                                        _PORTC 0F82                                          _PORTD 0F83  
                                        _PORTE 0F84                               __end_of_PINSTART 1DEE  
                            ??_I2C_DO_TX_EMPTY 000D                                          _TRISA 0F92  
                                        _TRISB 0F93                                 ?_INT0_CallBack 0001  
                                        _TRISC 0F94                                          _TRISD 0F95  
                                        _TRISE 0F96                               __end_of_PINWRITE 1F34  
                                        _TXREG 0FAD                                          _TXSTA 0FAC  
                                send4bit@F3726 002F                                          __Date 0035  
                                        __Time 0032                              __end_of_I2C_DO_RX 25BA  
                            __end_of_I2C_DO_TX 230C                                 ?_INT1_CallBack 0001  
                     __end_of_manual_homelight 317E                                          _flags 002E  
                          _EXTEEPROM_WriteByte 3470                            LCD4B_SENDCMD@pinptr 0117  
               ??_INT1_DefaultInterruptHandler 0001                                          _fputc 230C  
                            __end_of_I2C_Close 3122                               fp__I2C_MasterIsr 0000  
               I2C_MasterOperation@returnValue 00D9                                          _timer 0084  
                                        _width 0028                                          _putch 3600  
                               ?_INT2_CallBack 0001                        _I2C_MasterEnableRestart 35FC  
                     _INT1_SetInterruptHandler 3514                                          pclath 0FFA  
                                        pclatu 0FFB                                          tablat 0FF5  
                             ?_I2C_SetCallback 00D8                   I2C_SetAddressNackCallback@cb 00DD  
                                        plusw0 0FEB                                          plusw2 0FDB  
                                        ttemp5 0042                                          ttemp6 0045  
                                        ttemp7 0049                                          status 0FD8  
                                        wtemp8 0042                                __end_of_sprintf 2EE6  
                            ?_I2C_DO_SEND_STOP 0001                           LCD4B_SENDCHAR@i_2509 0115  
               ?_INTERRUPT_InterruptManagerLow 0001                               _LCD4B_SENDSTRPOS 2AF2  
                            __end_of_LCD4B_SET 1940                             ??_I2C_DO_SEND_STOP 0001  
                     fp__rd1RegCompleteHandler 0000                                __initialization 2D4A  
                        i2I2C_SetBuffer@buffer 0001                           ?_EXTEEPROM_WriteByte 00E4  
                                 __end_of_main 1766                       fp__wr1RegCompleteHandler 0000  
                                _doorlightauto 00CA                               ?_manual_Override 0001  
                    ?_I2C_DO_SEND_RESTART_READ 0001                                 ??_EUSART_Write 00D8  
                             __end_of_ReadTemp 33F8                                 ?_I2C_DO_RX_ACK 0001  
                         LCD4B_SENDCHAR@pinptr 0117                                      ??_ADC_ISR 001C  
                                       ??_main 0122                              ?_I2C_MasterIsNack 0001  
                              ?_LCD4B_SENDCHAR 010E                                  __activetblptr 0003  
                            ?_I2C_MasterSetIrq 0001                             ??_I2C_MasterIsNack 0001  
                           ??_I2C_MasterSetIrq 0001              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 0FC2                                         _ADCON1 0FC1  
                                       _ADCON2 0FC0                     _EUSART_OverrunErrorHandler 0146  
              __end_of_I2C_CallbackReturnReset 35F4                                         ?_fputc 00D8  
                             ___llmod@dividend 00D8                                         _ADRESH 0FC4  
                                       _EEADRH 0FAA                                         _ADRESL 0FC3  
                                       _EEDATA 0FA8                                         _EECON2 0FA7  
              i2I2C_SetDataCompleteCallback@cb 0006                  I2C_SetDataCompleteCallback@cb 00DD  
                                       ?_putch 0001                                         _ANSELH 0F7F  
                                       i2l1003 2764                                         i2l1011 32DE  
                                       i2l1013 3306                                         i2l1006 3150  
                                       i2l1008 317C                                         i1l5041 3124  
                                       i1l5043 3136                                         i1l5039 3122  
                                       i1l5313 002E                                         i1l5315 003C  
                                       i1l5317 004A                                         i2l5031 356A  
                                       i1l4871 2AC8                                         i2l5033 356C  
                                       i1l4873 2AD8                                         i1l4865 2A88  
                                       i2l5027 3572                                         i2l5035 3562  
                                       i1l4867 2A9A                                         i2l5029 3574  
                                       i2l5037 3564                                         i1l4869 2AB8  
                                       i2l6103 339A                                         i2l6111 3458  
                                       i2l6105 33AA                                         i2l6201 357A  
                                       i2l6107 33B2                                         i2l6131 3286  
                                       i2l6203 357E                                         i2l7011 1F78  
                                       i2l6109 33BA                                         i2l6133 329A  
                                       i2l6141 326E                                         i2l4453 34F4  
                                       i2l6301 2268                                         i2l4541 34E8  
                                       i2l6213 359A                                         i2l4621 2730  
                                       i2l7021 1FD6                                         i2l7013 1F8E  
                                       i2l6071 35F8                                         i2l6135 32AE  
                                       i2l6143 3282                                         i2l6151 3256  
                                       i2l6223 35F0                                         i2l4455 34F8  
                                       i2l6311 2278                                         i2l4543 34EC  
                                       i2l6215 359E                                         i2l6207 3582  
                                       i2l4631 274C                                         i2l4623 2738  
                                       i2l4615 26E6                                         i2l7023 1FE4  
                                       i2l7015 1F9C                                         i2l7007 1F5C  
                                       i2l4385 35EC                                         i2l6073 35C6  
                                       i2l4393 35E4                                         i2l4457 34FC  
                                       i2l6313 22D6                                         i2l6305 2270  
                                       i2l4545 34F0                                         i2l6209 3586  
                                       i2l6401 2B74                                         i2l4633 2754  
                                       i2l4625 2738                                         i2l4617 26FA  
                                       i2l4641 3150                                         i2l7025 200E  
                                       i2l7017 1FB2                                         i2l7009 1F6A  
                                       i2l6155 32B2                                         i2l6139 325A  
                                       i2l6147 322E                                         i2l6163 2F6E  
                                       i2l6219 35F4                                         i2l6171 349A  
                                       i2l6315 22E8                                         i2l6331 2528  
                                       i2l4635 2754                                         i2l4619 270A  
                                       i2l4643 3176                                         i2l4811 31E8  
                                       i2l7019 1FC0                                         i2l6069 35FC  
                                       i2l6157 32C6                                         i2l6149 3242  
                                       i2l6165 2F98                                         i2l6317 2302  
                                       i2l6341 2550                                         i2l6333 2540  
                                       i2l4581 34E0                                         i2l4629 273C  
                                       i2l4805 3202                                         i2l4645 32DE  
                                       i2l4813 31AA                                         i2l6159 32DA  
                                       i2l6167 2FAC                                         i2l6175 35B4  
                                       i2l6319 2308                                         i2l6351 2560  
                                       i2l6335 2544                                         i2l6327 2514  
                                       i2l6183 35A2                                         i2l6191 3596  
                                       i2l4583 34E4                                         i2l4639 275C  
                                       i2l4807 3214                                         i2l4647 3300  
                                       i2l4815 31BC                                         i2l6281 34CA  
                                       i2l6345 2558                                         i2l6329 2522  
                                       i2l6177 35AA                                         i2l6185 35A6  
                                       i2l4809 31D6                                         i2l6195 35E8  
                                       i2l6363 27F4                                         i2l6179 35AE  
                                       i2l4579 34DC                                         i2l6365 27F8  
                                       i2l6357 27E4                                         i2l6277 34BE  
                                       i2l6285 34AE                                         i2l6293 2248  
                                       i2l6189 3592                                         i2l6381 358A  
                                       i2l6199 35C0                                         i2l6359 27EC  
                                       i2l6375 2806                                         i2l6279 34C2  
                                       i2l6287 34B2                                         i2l6383 358E  
                                       i2l6391 2B64                                         i2l6369 27FE  
                                       i2l6289 34BA                                         i2l6297 2260  
                                       i2l4697 35E0                                         i2l6561 294A  
                                       i2l6395 2B6C                                         i2l6387 2B58  
                                       i2l6563 295A                                         i2l6389 2B5C  
                                       i2l6565 296E                                         _TABLAT 0FF5  
                                       i2l6567 2974                                         i2l6559 2946  
                                       i2l5981 2BC0                                         i2l5983 2BD2  
                                       i2l6767 35BA                                         i2l5985 2BFE  
                                       i2l9391 2592                                         i2l9393 22AC  
                                       i2l9395 2838                                         i2l9389 2BA6  
                                       _OSCCON 0FD3                         ??i2_I2C_MasterClearIrq 0001  
                                vfpfcnvrt@done 00EF                      ??_I2C_SetInterruptHandler 00DA  
                                       _SPBRGH 0FB0                                         _SSPADD 0FC8  
                                       _SSPBUF 0FC9                                LCD4B_SENDCHAR@i 0113  
                          _I2C_MasterEnableIrq 35CC                            _I2C_MasterGetRxData 35E8  
                        ??_EXTEEPROM_WriteByte 00E6                                   vfprintf@cfmt 00FB  
                                    ??___aldiv 00E0                                      ??___almod 00E0  
                                _I2C_MasterFsm 2946                                  _I2C_MasterIsr 35BA  
                                    ??___lldiv 00E0                                      ??___llmod 00E0  
                                       clear_0 2D82                                         clear_1 2D8E  
                                       clear_2 2D9A                              I2C_SetCallback@cb 00D8  
                      fp__I2C_DO_SEND_ADR_READ 0000                         ?_I2C_Read1ByteRegister 00E1  
                                       isa$std 0001                                         _printf 3352  
                                _I2C_SetBuffer 3376                                ??_INT0_CallBack 0002  
                                       _strlen 2E00                   __end_of_I2C_MasterDisableIrq 35D8  
                                       fputc@c 00D8                          __end_of_PrintDateUART 2CE8  
                         ?_I2C_MasterEnableIrq 0001           __end_of_INT2_DefaultInterruptHandler 3606  
                 _INT2_DefaultInterruptHandler 3604                            _I2C_DO_ADDRESS_NACK 2B58  
                                 __pdataCOMRAM 0040                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001                                ??_INT1_CallBack 0002  
           __end_of_I2C_SetAddressNackCallback 3458                     _I2C_SetAddressNackCallback 3440  
                            ?_manual_Doorlight 0001                                   __mediumconst 0000  
                                       tblptrh 0FF7                                         tblptrl 0FF6  
                                       tblptru 0FF8                      ??_I2C_MasterEnableRestart 0001  
                              sendenable@F3731 008D                       ADC_GetConversion@channel 00DC  
                                       putch@c 0001                                ??_INT2_CallBack 0002  
                             __end_of_vfprintf 2EA0                             ??_manual_Doorlight 0001  
     INT2_SetInterruptHandler@InterruptHandler 00D8       INT1_SetInterruptHandler@InterruptHandler 00D8  
     INT0_SetInterruptHandler@InterruptHandler 00D8        ADC_SetInterruptHandler@InterruptHandler 00D8  
      I2C_SetInterruptHandler@InterruptHandler 00D8                                      ??_sprintf 00FC  
                            __end_of_DateArray 30F4                                LCD4B_SET@pinptr 011E  
                                 ReadTemp@addr 00E4               ??_INTERRUPT_InterruptManagerHigh 0012  
              ?_INTERRUPT_InterruptManagerHigh 0001                              _SYSTEM_Initialize 332E  
                                 ReadTemp@temp 00E5                                     __accesstop 0060  
                      __end_of__initialization 2DA0                                      ?_INT0_ISR 0001  
                                    ?_INT1_ISR 0001                                      ?_INT2_ISR 0001  
                          _I2C_MasterOperation 2F2A                             ?_SYSTEM_Initialize 0001  
                              sendenable@pinEN 010D                                  ___rparam_used 0001  
                         ?_I2C_DO_ADDRESS_NACK 0001                          __end_of_PrintTimeUART 2C86  
                      _rdBlkRegCompleteHandler 2F6E                                      ?_PINSTART 010A  
                   fp__rdBlkRegCompleteHandler 0000                                  _homelightauto 00CB  
                                    ?_PINWRITE 0102                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                 ?_I2C_MasterIsr 0001  
                              ??_I2C_DO_RX_ACK 0001                                   __pidataBANK0 317E  
                       _I2C_CallbackReturnStop 35F4                            ??_SYSTEM_Initialize 00DA  
                                __end_of_fputc 23C8                                  __end_of_putch 3602  
                               ?_I2C_SetBuffer 00D8                  __end_of_I2C_DO_SEND_ADR_WRITE 34BE  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                          LCD4B_SENDSTRPOS@lcd 011E                            LCD4B_SENDSTRPOS@row 0120  
                          LCD4B_SENDSTRPOS@str 011F                          ??_I2C_MasterEnableIrq 00D8  
                                  PINSTART@ret 0111                          ??_I2C_MasterGetRxData 0001  
                      ?_I2C_Write1ByteRegister 00E1                                     ??_I2C_Open 00DA  
                          LCD4B_SENDSTR@length 011B                         LCD4B_SENDSTRPOS@column 0121  
             __end_of_INT2_SetInterruptHandler 3514                     __end_of_I2C_MasterClearIrq 35E0  
              fp__INT2_DefaultInterruptHandler 0000                  ?_INT2_DefaultInterruptHandler 0001  
              ??_EUSART_SetOverrunErrorHandler 00DA                                        ??_fputc 00DC  
                    __end_of_SYSTEM_Initialize 3352                                    PINWRITE@log 0104  
                                  PINWRITE@ret 00FD                                        ??_putch 00D8  
                            _I2C_MasterSendAck 35C0                                     __pbssBANK0 0060  
                                   __pbssBANK1 0124                           __end_of_EUSART_Write 3410  
                                ??_I2C_DO_IDLE 0001                                  ??_I2C_DO_RCEN 0001  
                __end_of_rd2RegCompleteHandler 3286                   __end_of_I2C_MasterSendTxData 35BA  
                            __end_of_TimeArray 30C6                             ?_I2C_MasterSendAck 0001  
                                    ?_ReadTemp 0001                          _INT0_InterruptHandler 003C  
                                   ??_INT0_ISR 0002                              _I2C_MasterStartRx 35EC  
                                   ??_INT1_ISR 0002                                     ??_INT2_ISR 0002  
                                   __pnvCOMRAM 0038                          ??_I2C_DO_ADDRESS_NACK 000D  
                __end_of_wr2RegCompleteHandler 32DE                            _I2C_DO_RX_NACK_STOP 3582  
                        _rd1RegCompleteHandler 3286                             ?_I2C_MasterStartRx 0001  
                   __end_of_I2C_MasterSendNack 35CC                          _wr1RegCompleteHandler 322E  
                                   ??_PINSTART 010C                            ??_I2C_MasterSendAck 0001  
                                   ??_PINWRITE 0105                       rd1RegCompleteHandler@ptr 000A  
                             ??_GetDataAndTime 00EB                    __end_of_I2C_DO_SEND_RESTART 35A2  
                              _I2C_DO_TX_EMPTY 27E4                            I2C_SetBuffer@buffer 00D8  
                          ??_I2C_MasterStartRx 0001                                        _ADC_ISR 3122  
                                      _BAUDCON 0FB8                          ??_I2C_MasterOperation 00D8  
                                      ?_printf 00FC               i2I2C_SetDataCompleteCallback@ptr 0008  
               I2C_SetDataCompleteCallback@ptr 00DF                 __end_of_I2C_Write1ByteRegister 28D4  
                                      ?_strlen 00D8                       ??_I2C_DO_RX_NACK_RESTART 0001  
            __end_of_I2C_DO_SEND_RESTART_WRITE 35AA                           ?_I2C_DO_RX_NACK_STOP 0001  
                   ??_INT1_SetInterruptHandler 00DA                       __end_of_LCD4B_SENDSTRPOS 2B58  
                                      _LAT_Reg 00B6                                        _LCDtemp 00A8  
                                      _TBLPTRH 0FF7                                        _TBLPTRL 0FF6  
                                      _TBLPTRU 0FF8                      __end_of_I2C_MasterSendAck 35C6  
                                      _OSCTUNE 0F9B                          __end_of_setcursor4bit 246E  
                     ??_EUSART_SetErrorHandler 00DA                                        _SSPCON1 0FC6  
                                      _SSPCON2 0FC5                              ?_manual_homelight 0001  
                                      _SSPSTAT 0FC7                      __end_of_I2C_MasterStartRx 35F0  
                         I2C_Close@returnValue 00D8                   ?_I2C_SetDataCompleteCallback 00DD  
                                    _I2C_DO_RX 2514                                      _I2C_DO_TX 2248  
                           ??_manual_homelight 0001               __end_of_I2C_DO_SEND_RESTART_READ 35B2  
                 I2C_Read1ByteRegister@address 00E2                                     ??_ReadTemp 00E4  
                                    _I2C_Close 30F4                               LCD4B_SENDCMD@cmd 010F  
                             LCD4B_SENDCMD@lcd 010E                               LCD4B_SENDCMD@ret 0112  
                    ??_rdBlkRegCompleteHandler 000C                      ?_INT0_SetInterruptHandler 00D8  
                         _I2C_MasterDisableIrq 35D4                              ??i2_I2C_SetBuffer 0005  
                              ??_I2C_MasterFsm 000F                                ??_I2C_MasterIsr 0012  
                         _ADC_InterruptHandler 003E                                        __Hparam 0000  
                      _ADC_SetInterruptHandler 3546                                        __Lparam 0000  
                          __end_of_I2C_DO_IDLE 3500                            __end_of_I2C_DO_RCEN 34F4  
                                      ___aldiv 204C                                        ___almod 215A  
                             ??_LCD4B_SENDCHAR 0110                                      _LCD4B_SET 1766  
                                      ___lldiv 246E                                ??_I2C_SetBuffer 00DC  
                                      ___llmod 265C                                      ?_vfprintf 00F6  
                      I2C_SetBuffer@bufferSize 00DA                                   __psmallconst 1000  
                             LCD4B_SENDSTR@lcd 0118                               LCD4B_SENDSTR@str 0119  
                                   LCD4B_SET@i 011B                                 _I2C_MasterOpen 33BE  
                                      __pcinit 2D4A                                 _I2C_MasterStop 35F8  
                               _I2C_Initialize 3486                                        __ramtop 1000  
                                      _datestr 0094                                        __ptext0 1564  
                                      __ptext1 2EA0                                        __ptext2 332E  
                                      __ptext3 3064                                        __ptext4 3500  
                                      __ptext5 34CE                                        __ptext6 3486  
                                      __ptext7 2FF0                                        __ptext8 350A  
                                      __ptext9 3514                          ??_I2C_DO_RX_NACK_STOP 0001  
                        _OSCILLATOR_Initialize 3500                               ___aldiv@dividend 00D8  
                           I2C_SetCallback@idx 00DC                       ??_PIN_MANAGER_Initialize 00D8  
                I2C_CallbackReturnReset@funPtr 000A                             I2C_SetCallback@ptr 00DA  
                     wr1RegCompleteHandler@ptr 000A                      I2C_Write1ByteRegister@reg 00E1  
                     fp__I2C_DO_SEND_ADR_WRITE 0000                                        _timestr 009E  
                                      _sprintf 2EA0                                 __pintcode_body 1F34  
                         end_of_initialization 2DA0                       _INT2_SetInterruptHandler 350A  
                                   ?_I2C_DO_RX 0001                                     ?_I2C_DO_TX 0001  
               ??_INT2_DefaultInterruptHandler 0001          __end_of_EUSART_SetOverrunErrorHandler 3532  
                _EUSART_SetOverrunErrorHandler 3528                                        fputc@fp 00DA  
                                   ?_I2C_Close 0001                                        int_func 1F34  
                       ?_rd1RegCompleteHandler 000A                           EUSART_SendString@len 00DE  
                      __end_of_I2C_DO_TX_EMPTY 2860                           EUSART_SendString@str 00DC  
                                   _sendenable 28D4                          ?_I2C_MasterDisableIrq 0001  
                            _EUSART_Initialize 2EE6                         ?_wr1RegCompleteHandler 000A  
                              ___lldiv@divisor 00DC                                ___lldiv@counter 00E0  
                     fp__rd2RegCompleteHandler 0000                             ?_EUSART_Initialize 0001  
                            __end_of_vfpfcnvrt 1564                                      _RCSTAbits 0FAB  
                             ___aldiv@quotient 00E2                                        postdec1 0FE5  
                                      postdec2 0FDD                        ??_I2C_Read1ByteRegister 00E2  
                       __end_of_I2C_MasterOpen 33E0                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 0FEE                                        postinc1 0FE6  
                                      postinc2 0FDE                               vfpfcnvrt@convarg 00F1  
                       __end_of_I2C_MasterStop 35FC                         __end_of_I2C_Initialize 349A  
                                   ?_LCD4B_SET 0118                                     ??_vfprintf 00FB  
                    fp__I2C_CallbackReturnStop 0000                                        strlen@a 00DA  
                                      strlen@s 00D8                            ??_EUSART_Initialize 00DA  
                        _INT1_InterruptHandler 003A                __end_of_rdBlkRegCompleteHandler 2FB0  
                         _I2C_MasterSendTxData 35B2                                fp__I2C_DO_RESET 0000  
                            _EUSART_SendString 2CE8                             fp__manual_Override 0000  
          __end_of_ADC_DefaultInterruptHandler 3604                    _ADC_DefaultInterruptHandler 3602  
                  ?_I2C_SetAddressNackCallback 00DD                             ?_EUSART_SendString 00DC  
                    EXTEEPROM_ReadByte@Byteadd 00E4                         LCD4B_SENDCHARPOS@F3699 0030  
                                _LCD4B_SENDCMD 1940                                  _LCD4B_SENDSTR 2DAA  
                          ??_EUSART_SendString 00DE                      __end_of_EUSART_Initialize 2F2A  
                ??_ADC_DefaultInterruptHandler 001C                                    _I2C_DO_IDLE 34F4  
                                  _I2C_DO_RCEN 34E8                     rdBlkRegCompleteHandler@ptr 000A  
                                    _DateArray 30C6                    __end_of_EXTEEPROM_WriteByte 3486  
                    ??_ADC_SetInterruptHandler 00DA                  I2C_Write1ByteRegister@address 00E3  
                                    _TXSTAbits 0FAC                        ?_I2C_CallbackReturnStop 000A  
                           LCD4B_SENDCMD@F3681 008F                       _I2C_DO_SEND_RESTART_READ 35AA  
                  fp__I2C_DO_SEND_RESTART_READ 0000                             LCD4B_SENDCHAR@data 010F  
                            i2_I2C_SetCallback 2BBE                   I2C_CallbackReturnStop@funPtr 000A  
                              ?_I2C_MasterOpen 0001                   __end_of_INTERRUPT_Initialize 34DC  
                              ?_I2C_MasterStop 0001                                ?_I2C_Initialize 0001  
                      _I2C_CallbackReturnReset 35F0                       I2C_Read1ByteRegister@reg 00E1  
                   fp__I2C_CallbackReturnReset 0000           __end_of_INT0_DefaultInterruptHandler 360A  
                 _INT0_DefaultInterruptHandler 3608                     _EUSART_DefaultErrorHandler 0000  
                           ?i2_I2C_SetCallback 0001                                    vfpfcnvrt@ap 00E9  
                                  vfpfcnvrt@cp 00F0                                    vfpfcnvrt@fp 00E6  
              ??i2_I2C_SetDataCompleteCallback 000A                                  __pidataCOMRAM 360A  
                                 _EUSART_Write 33F8                                 _ADC_Initialize 3308  
                    __end_of_EUSART_SendString 2D4A                          ?_I2C_MasterSendTxData 0001  
                       ?_OSCILLATOR_Initialize 0001                    ??_I2C_DO_SEND_RESTART_WRITE 0001  
                               __end_of_printf 3376                          __end_of_INT0_CallBack 322E  
                          ??i2_I2C_SetCallback 0005                                 __end_of_strlen 2E54  
                          start_initialization 2D4A                                  sendenable@lcd 010A  
                                sendenable@ret 010C                                    __end_of_abs 3064  
                        __end_of_INT1_CallBack 3202                                  ?_I2C_DO_RESET 0001  
                     ?_I2C_SetInterruptHandler 00D8                          __end_of_INT2_CallBack 31D6  
                               ?_LCD4B_SENDCMD 010E                                 ?_LCD4B_SENDSTR 0118  
                                  ??_I2C_DO_RX 000D                                    ??_I2C_DO_TX 000D  
                            ??_I2C_MasterClose 00D8                         ??_I2C_MasterDisableIrq 00D8  
                                  ??_I2C_Close 00D8                              ??_I2C_MasterStart 00D8  
                                   ?_DateArray 0001                              ??_I2C_MasterWrite 00DA  
               __end_of_I2C_CallbackReturnStop 35F8                                ___llmod@divisor 00DC  
                       _I2C_DO_RX_NACK_RESTART 357A                                    ?_sendenable 010A  
                             ?_I2C_DO_TX_EMPTY 0001                                ___llmod@counter 00E0  
                           _I2C_MasterClearIrq 35DC                               setcursor4bit@col 011A  
                             setcursor4bit@lcd 0118                              PINSTART@pinconfig 010A  
                             setcursor4bit@ret 011D                               setcursor4bit@row 0119  
                    __end_ofi2_I2C_SetCallback 2C24                                 LCD4B_SET@F3672 0091  
                               LCD4B_SET@F3675 0090                                 LCD4B_SENDCMD@i 0113  
               ?_EUSART_SetOverrunErrorHandler 00D8                                      _TimeArray 3098  
                                  vfprintf@fmt 00F8                     _EUSART_FramingErrorHandler 00FE  
                       _EUSART_SetErrorHandler 353C                                    ??_LCD4B_SET 0119  
                         LCD4B_SENDSTR@str_old 011A                    __end_of_I2C_MasterEnableIrq 35D0  
                          ?_I2C_MasterClearIrq 0001                         __end_of_ADC_Initialize 332E  
                  __end_of_I2C_MasterGetRxData 35EC                                    __pdataBANK0 00AC  
                        __end_of_I2C_DO_RX_ACK 3592                                  ??_lightSwitch 001C  
                                     ?_ADC_ISR 0001                     __end_of_EXT_INT_Initialize 302E  
                   EXTEEPROM_WriteByte@Byteadd 00E4                               _I2C_DO_SEND_STOP 3592  
              fp__INT0_DefaultInterruptHandler 0000                  ?_INT0_DefaultInterruptHandler 0001  
                            ??_I2C_SetCallback 00DC                                       ??_printf 00FD  
                          I2C_Open@returnValue 00DB                             _I2C_MasterSendNack 35C6  
                                     ??_strlen 00DA                       ?_I2C_MasterEnableRestart 0001  
                            _i2c_fsmStateTable 1001                         fp__I2C_DO_SEND_RESTART 0000  
                        _I2C_DO_SEND_ADR_WRITE 34AE                                    __pbssCOMRAM 0021  
                            ?_LCD4B_SENDSTRPOS 011E               __end_of_INT0_SetInterruptHandler 3528  
                                __pcstackBANK0 00D8                                  __pcstackBANK1 0100  
                               ??_I2C_DO_RESET 0001                            ?_I2C_MasterSendNack 0001  
                           ??_LCD4B_SENDSTRPOS 00FE                                i2_I2C_SetBuffer 339A  
                 __end_of_I2C_DO_SEND_ADR_READ 34CE                           ??_I2C_MasterClearIrq 00D8  
                  __end_of_I2C_DO_ADDRESS_NACK 2BBE                              ??_manual_Override 0001  
                                _EEPROMreading 0092                               _I2C_MasterIsNack 349A  
                    _I2C_DO_SEND_RESTART_WRITE 35A2                          _INT2_InterruptHandler 0038  
                                 LCD4B_SET@lcd 0118                               _I2C_MasterSetIrq 35E4  
                                    __pnvBANK0 00FE                                      __pnvBANK1 0144  
                        _rd2RegCompleteHandler 325A                                     ?_TimeArray 0001  
                       _PIN_MANAGER_Initialize 3064                          _wr2RegCompleteHandler 32B2  
                    ??_I2C_CallbackReturnReset 000C                    __end_of_I2C_MasterOperation 2F6E  
                         ??_I2C_MasterSendNack 0001                       rd2RegCompleteHandler@ptr 000A  
                                    __pintcode 0008                                       ?___aldiv 00D8  
                                     ?___almod 00D8                                      __ptext100 27E4  
                                    __ptext101 35E4                                      __ptext110 2F6E  
                                    __ptext102 349A                                      __ptext111 322E  
                                    __ptext103 35B2                                      __ptext120 0000  
                                    __ptext112 325A                                      __ptext104 35C0  
                                    __ptext113 3286                                      __ptext105 35E8  
                                    __ptext114 32B2                                      __ptext106 35C6  
                                    __ptext115 3458                                      __ptext107 35EC  
                                    __ptext116 2BBE                                      __ptext108 35F0  
                                    __ptext117 339A                                      __ptext109 35F4  
                                    __ptext118 35F8                                      __ptext119 35FC  
                                     ?___lldiv 00D8                                       ?___llmod 00D8  
                              ?_ADC_Initialize 0001                         ??_I2C_MasterSendTxData 0001  
                                  __pintcodelo 0018                      __end_of_i2c_fsmStateTable 1021  
                             ___almod@dividend 00D8                                   fp__I2C_DO_RX 0000  
                                 fp__I2C_DO_TX 0000                                    __smallconst 1000  
                   ??_INT2_SetInterruptHandler 00DA                __end_of_I2C_SetInterruptHandler 355A  
        __end_ofi2_I2C_SetDataCompleteCallback 3470                  i2_I2C_SetDataCompleteCallback 3458  
                      I2C_MasterOperation@read 00D8                                       _I2C_Open 25BA  
                                _PrintDateUART 2C86                            __end_of_lightSwitch 2AF2  
                              ??_LCD4B_SENDCMD 0110                                ??_LCD4B_SENDSTR 00FE  
                                    _lightread 008B                                       ?_sprintf 0100  
                      ??_rd1RegCompleteHandler 000C                           _INTERRUPT_Initialize 34CE  
                      ??_wr1RegCompleteHandler 000C                                ___aldiv@divisor 00DC  
                              ___aldiv@counter 00E0                                    ??_DateArray 00EB  
                                     _INT0_ISR 3572                                       _INT1_ISR 356A  
                                     _INT2_ISR 3562                                       _LATAbits 0F89  
       EUSART_SetErrorHandler@interruptHandler 00D8                      ?_INT1_SetInterruptHandler 00D8  
                                     _IPR1bits 0F9F                                       _IPR2bits 0FA2  
                                     _PIE1bits 0F9D                                       _PIE2bits 0FA0  
                   __end_of_EXTEEPROM_ReadByte 3428                               _manual_Doorlight 32DE  
                            _eusartRxLastError 0031                                       _TCA7temp 0093  
                                     i1u312_20 003C                                       i1u312_21 0038  
                                     i1u313_20 004A                                       i1u313_21 0046  
                                     i1u270_20 2AC8                                       i1u270_21 2AC4  
                                     i1u271_20 2AD8                                       i1u271_21 2AD4  
                                     i1u272_20 2AE8                                       i1u272_21 2AE4  
                                     i1u280_28 313C                                       i1u280_29 314E  
                                     i1u268_20 2A9A                                       i1u268_21 2A96  
                                     i1u269_20 2AB0                                       i1u269_21 2AAC  
                                     i1u279_20 3136                                       i1u279_21 3132  
                                     i2u400_40 295A                                       i2u240_40 32EE  
                                     i2u400_41 2956                                       i2u240_41 32E8  
                                     i2u240_46 32F0                                       i2u401_40 296E  
                                     i2u401_41 296A                                       i2u402_48 299C  
                                     i2u235_40 26FA                                       i2u402_49 29AE  
                                     i2u235_41 26F6                                       i2u236_40 270A  
                                     i2u236_41 2706                                       i2u237_40 271A  
                                     i2u260_48 31EE                                       i2u261_40 31BC  
                                     i2u237_41 2714                                       i2u260_49 3200  
                                     i2u261_41 31B8                                       i2u237_46 271C  
                                     i2u238_40 274C                                       i2u238_41 2748  
                                     i2u239_40 3160                                       i2u262_48 31C2  
                                     i2u239_41 315A                                       i2u262_49 31D4  
                                     i2u239_46 3162                                       i2u440_40 1FD6  
                                     i2u440_41 1FD2                                       i2u257_40 3214  
                                     i2u441_40 1FE4                                       i2u257_41 3210  
                                     i2u441_41 1FE0                                       _PIR1bits 0F9E  
                                     i2u434_40 1F6A                                       i2u434_41 1F66  
              ??_EUSART_SetFramingErrorHandler 00DA                                       i2u363_40 2BD2  
                                     i2u258_48 321A                                       i2u259_40 31E8  
                                     i2u443_40 200E                                       i2u442_48 1FEA  
                                     i2u435_40 1F78                                       i2u363_41 2BCE  
                                     i2u258_49 322C                                       i2u259_41 31E4  
                                     i2u443_41 200A                                       i2u442_49 1FFC  
                                     i2u435_41 1F74                                       _PIR2bits 0FA1  
                                     i2u372_40 33AA                                       i2u380_40 225C  
                                     i2u444_40 201C                                       i2u436_40 1F8E  
                                     i2u372_41 33A6                                       i2u380_41 2258  
                                     i2u444_41 2018                                       i2u436_41 1F8A  
                                     i2u437_40 1F9C                                       i2u437_41 1F98  
                                     i2u382_40 2302                                       i2u381_48 2286  
                                     i2u438_40 1FB2                                       i2u382_41 22FE  
                                     i2u381_49 229A                                       i2u438_41 1FAE  
                                     i2u375_40 34AA                                       i2u383_40 2540  
                                     i2u439_40 1FC0                                       _PINSTART 1C88  
                                     i2u375_41 34A4                                       i2u383_41 253C  
                                     i2u439_41 1FBC                                       i2u375_46 34AC  
                                     i2u384_48 256E                                       i2u384_49 2580  
                                     i2u385_48 2814                                       i2u385_49 2826  
                                     i2u386_48 2B82                                       i2u386_49 2B94  
                                     _PINWRITE 1DEE                                  _PrintTimeUART 2C24  
                        __end_of_I2C_MasterFsm 29B4                          __end_of_I2C_MasterIsr 35C0  
                                     _RCONbits 0FD0                 fp__ADC_DefaultInterruptHandler 0000  
                  __end_of_I2C_DO_RX_NACK_STOP 358A              _EUSART_DefaultOverrunErrorHandler 0000  
              __end_of_I2C_MasterEnableRestart 3600                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                                       _PORT_Reg 00AC  
                __end_of_I2C_Read1ByteRegister 27E4                                      _vfpfcnvrt 10A8  
                        __end_of_I2C_SetBuffer 339A                           LCD4B_SET@pinptr_2461 011D  
                                     _TRIS_Reg 00C0                                     _ADCON0bits 0FC2  
                       ?_I2C_DO_SEND_ADR_WRITE 0001                        __end_ofi2_I2C_SetBuffer 33BE  
                     I2C_MasterSendTxData@data 0001                                 ?_PrintDateUART 00EB  
                            PINWRITE@pinconfig 0102                 ??_INT0_DefaultInterruptHandler 0001  
                     wr2RegCompleteHandler@ptr 000A                              LCD4B_SENDCHAR@lcd 010E  
                            LCD4B_SENDCHAR@ret 0112                                     vfpfcnvrt@c 00F5  
                                  _INTCON2bits 0FF1                                    _INTCON3bits 0FF0  
                   ??_I2C_DO_SEND_RESTART_READ 0001                                      copy_data0 2D5E  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000A  
                    i2I2C_SetBuffer@bufferSize 0003                       _INT0_SetInterruptHandler 351E  
                                   _I2C_Status 0060                                   ?_I2C_DO_IDLE 0001  
                                 ?_I2C_DO_RCEN 0001                                       _ReadTemp 33E0  
                       ?_rd2RegCompleteHandler 000A                                     _EECON1bits 0FA6  
                             ??_I2C_MasterOpen 00D8                         ?_wr2RegCompleteHandler 000A  
                             ??_I2C_MasterStop 0001                               ??_I2C_Initialize 00D8  
                    fp__I2C_DO_RX_NACK_RESTART 0000                                       __Hrparam 0000  
                                  ??_TimeArray 00EB                                 ?_PrintTimeUART 00EB  
                                   vfprintf@ap 00F9                                       __Lrparam 0000  
                                   vfprintf@fp 00F6                              _ADC_GetConversion 2FB0  
                         __end_of_I2C_DO_RESET 34E8                       ??_I2C_Write1ByteRegister 00E3  
                      ??_OSCILLATOR_Initialize 00D8                            _EUSART_ErrorHandler 0144  
                           ?_ADC_GetConversion 00D8                           _I2C_DO_SEND_ADR_READ 34BE  
                                   ?_vfpfcnvrt 00E6                                    _lightSwitch 2A88  
             I2C_Read1ByteRegister@returnValue 00E3                   __end_ofi2_I2C_MasterClearIrq 35E4  
                              _I2C_MasterClose 35D8                            ??_ADC_GetConversion 00DA  
                I2C_SetAddressNackCallback@ptr 00DF                                     sprintf@fmt 0101  
                              I2C_Open@address 00DA                            fp__I2C_DO_SEND_STOP 0000  
                         i2I2C_SetCallback@idx 0005                ??_INTERRUPT_InterruptManagerLow 001C  
                              _I2C_MasterStart 35D0                           i2I2C_SetCallback@ptr 0003  
                              _I2C_MasterWrite 355A                                       __ptext10 351E  
                                     __ptext11 2EE6                                       __ptext20 2C86  
                                     __ptext12 3528                                       __ptext21 2CE8  
                                     __ptext13 3532                                       __ptext30 2DAA  
                                     __ptext22 33F8                                       __ptext14 353C  
                                     __ptext31 2E00                                       __ptext23 30C6  
                                     __ptext15 3308                                       __ptext40 302E  
                                     __ptext32 1AE4                                       __ptext24 29B4  
                                     __ptext16 3546                                       __ptext41 265C  
                                     __ptext33 28D4                                       __ptext25 1766  
                                     __ptext17 33E0                                       __ptext50 3376  
                                     __ptext42 246E                                       __ptext34 1DEE  
                                     __ptext26 1C88                                       __ptext18 2C24  
                                     __ptext51 3440                                       __ptext43 215A  
                                     __ptext35 3352                                       __ptext27 2AF2  
                                     __ptext19 3098                                       __ptext60 30F4  
                                     __ptext52 2A1E                                       __ptext44 204C  
                                     __ptext36 2E54                                       __ptext28 23C8  
                                     __ptext61 35D4                                       __ptext53 25BA  
                                     __ptext45 3470                                       __ptext37 10A8  
                                     __ptext29 1940                                       __ptext70 3562  
                                     __ptext62 35D8                                       __ptext54 3550  
                                     __ptext46 2860                                       __ptext38 230C  
                                     __ptext71 31AA                                       __ptext63 35DC  
                                     __ptext55 33BE                                       __ptext47 3410  
                                     __ptext39 3600                                       __ptext80 3608  
                                     __ptext72 3604                                       __ptext64 2FB0  
                                     __ptext56 35CC                                       __ptext48 2766  
                                     __ptext81 26E6                                       __ptext73 32DE  
                                     __ptext57 355A                                       __ptext49 3428  
                                     __ptext90 3592                                       __ptext82 35BA  
                                     __ptext74 356A                                       __ptext66 3122  
                                     __ptext58 2F2A                                       __ptext91 359A  
                                     __ptext83 2946                                       __ptext75 31D6  
                                     __ptext67 3602                                       __ptext59 35D0  
                                     __ptext92 35A2                                       __ptext84 35E0  
                                     __ptext76 3606                                       __ptext68 2A88  
                                     __ptext93 35AA                                       __ptext85 2B58  
                                     __ptext77 3150                                       __ptext94 34E8  
                                     __ptext86 34DC                                       __ptext78 3572  
                                     __ptext95 2514                                       __ptext87 357A  
                                     __ptext79 3202                                       __ptext96 2248  
                                     __ptext88 3582                                       __ptext97 34AE  
                                     __ptext89 358A                                       __ptext98 34BE  
                                     __ptext99 34F4                                  _setcursor4bit 23C8  
          __end_of_I2C_SetDataCompleteCallback 3440                 ?i2_I2C_SetDataCompleteCallback 0006  
                  _I2C_SetDataCompleteCallback 3428                                ___almod@divisor 00DC  
                      ?_I2C_DO_RX_NACK_RESTART 0001                                ___almod@counter 00E0  
                                     _autocont 0040                       __end_of_I2C_DO_SEND_STOP 359A  
                                 ??_sendenable 010B                      __end_of_ADC_GetConversion 2FF0  
                      ?_EUSART_SetErrorHandler 00D8                                _I2C_SetCallback 2A1E  
                       EXTEEPROM_ReadByte@Eadd 00E5                  ??_I2C_SetDataCompleteCallback 00E1  
                   I2C_Write1ByteRegister@data 00E2                         EXTEEPROM_ReadByte@read 00E6  
EUSART_SetOverrunErrorHandler@interruptHandler 00D8                               _manual_homelight 3150  
                                     isa$xinst 0000                                       int$flags 0041  
                        ?_I2C_DO_SEND_ADR_READ 0001                                       _vfprintf 2E54  
                                    printf@fmt 00FC          __end_of_EUSART_SetFramingErrorHandler 353C  
                _EUSART_SetFramingErrorHandler 3532                       __end_of_I2C_MasterIsNack 34AE  
         __end_of_INT1_DefaultInterruptHandler 3608                   _INT1_DefaultInterruptHandler 3606  
                              ??_PrintDateUART 00ED                                _manual_Override 26E6  
                     __end_of_I2C_MasterSetIrq 35E8                               ?i2_I2C_SetBuffer 0001  
                                   _INTCONbits 0FF2                             __end_of_sendenable 2946  
                               ?_setcursor4bit 0118                         ??_INTERRUPT_Initialize 00D8  
               __end_of_I2C_DO_RX_NACK_RESTART 3582                             _EXT_INT_Initialize 2FF0  
                     ?_ADC_SetInterruptHandler 00D8                                       intlevel1 0000  
                                     intlevel2 0000                                      sprintf@ap 0106  
                          i2I2C_SetCallback@cb 0001                               ___lldiv@dividend 00D8  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 3546  
                          _I2C_DO_SEND_RESTART 359A                            ?_EXT_INT_Initialize 0001  
                              ??_PrintTimeUART 00ED                        EXTEEPROM_WriteByte@Eadd 00E6  
                       fp__I2C_DO_ADDRESS_NACK 0000                               ??_ADC_Initialize 00DA  
                      EXTEEPROM_WriteByte@data 00E5                            fp__manual_Doorlight 0000  
                                     printf@ap 0100  EUSART_SetFramingErrorHandler@interruptHandler 00D8  
                      __end_of_I2C_MasterClose 35DC                             fp__I2C_DO_TX_EMPTY 0000  
                                  ??_vfpfcnvrt 00EB                        __end_of_I2C_MasterStart 35D4  
                      __end_of_I2C_MasterWrite 3562         __end_of_INTERRUPT_InterruptManagerHigh 204C  
               _INTERRUPT_InterruptManagerHigh 0008                           ?_I2C_DO_SEND_RESTART 0001  
                         ??_EXT_INT_Initialize 00DA                                       sprintf@f 0108  
                                     sprintf@s 0100                                 _GetDataAndTime 29B4  
              fp__INT1_DefaultInterruptHandler 0000                  ?_INT1_DefaultInterruptHandler 0001  
                     __end_of_manual_Doorlight 3308                               ___lldiv@quotient 00E1  
             __end_of_INT1_SetInterruptHandler 351E                                   ___aldiv@sign 00E1  
                                  _SSPCON1bits 0FC6                                    _SSPCON2bits 0FC5  
        __end_of_INTERRUPT_InterruptManagerLow 0066                  _INTERRUPT_InterruptManagerLow 0018  
                           EUSART_Write@txData 00D8                        __end_of_I2C_SetCallback 2A88  
               __end_of_PIN_MANAGER_Initialize 3098                                   ___almod@sign 00E1  
                __end_of_rd1RegCompleteHandler 32B2                               fp__I2C_DO_RX_ACK 0000  
                __end_of_wr1RegCompleteHandler 325A                          _MSSP_InterruptHandler 002C  
                         i2_I2C_MasterClearIrq 35E0  
