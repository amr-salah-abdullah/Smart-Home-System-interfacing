

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 03 14:41:02 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1,inline
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1,inline
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1,inline
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1,inline
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1,inline
   143                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1,inline
   145                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   146                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   147                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   148   000000                     
   149                           ; Generated 21/07/2023 GMT
   150                           ; 
   151                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   152                           ; All rights reserved.
   153                           ; 
   154                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   155                           ; 
   156                           ; Redistribution and use in source and binary forms, with or without modification, are
   157                           ; permitted provided that the following conditions are met:
   158                           ; 
   159                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   160                           ;        conditions and the following disclaimer.
   161                           ; 
   162                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   163                           ;        of conditions and the following disclaimer in the documentation and/or other
   164                           ;        materials provided with the distribution. Publication is not required when
   165                           ;        this file is used in an embedded application.
   166                           ; 
   167                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   168                           ;        software without specific prior written permission.
   169                           ; 
   170                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   171                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   172                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   173                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   174                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   175                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   176                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   177                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   178                           ; 
   179                           ; 
   180                           ; Code-generator required, PIC18F46K20 Definitions
   181                           ; 
   182                           ; SFR Addresses
   183   000000                     
   184 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   185   000000                     
   186 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   187   000000                     
   188 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   189   000000                     
   190                           	psect	idataCOMRAM
   191   003626                     __pidataCOMRAM:
   192                           	callstack 0
   193                           
   194                           ;initializer for _autocont
   195   003626  01                 	db	1
   196                           
   197                           	psect	idataBANK0
   198   00314E                     __pidataBANK0:
   199                           	callstack 0
   200                           
   201                           ;initializer for _PORT_Reg
   202   00314E  80                 	db	128
   203   00314F  0F                 	db	15
   204   003150  81                 	db	129
   205   003151  0F                 	db	15
   206   003152  82                 	db	130
   207   003153  0F                 	db	15
   208   003154  83                 	db	131
   209   003155  0F                 	db	15
   210   003156  84                 	db	132
   211   003157  0F                 	db	15
   212                           
   213                           ;initializer for _LAT_Reg
   214   003158  89                 	db	137
   215   003159  0F                 	db	15
   216   00315A  8A                 	db	138
   217   00315B  0F                 	db	15
   218   00315C  8B                 	db	139
   219   00315D  0F                 	db	15
   220   00315E  8C                 	db	140
   221   00315F  0F                 	db	15
   222   003160  8D                 	db	141
   223   003161  0F                 	db	15
   224                           
   225                           ;initializer for _TRIS_Reg
   226   003162  92                 	db	146
   227   003163  0F                 	db	15
   228   003164  93                 	db	147
   229   003165  0F                 	db	15
   230   003166  94                 	db	148
   231   003167  0F                 	db	15
   232   003168  95                 	db	149
   233   003169  0F                 	db	15
   234   00316A  96                 	db	150
   235   00316B  0F                 	db	15
   236                           
   237                           ;initializer for _doorlightauto
   238   00316C  01                 	db	1
   239                           
   240                           ;initializer for _homelightauto
   241   00316D  01                 	db	1
   242                           
   243                           ;initializer for _lcd
   244   00316E  00                 	db	0
   245   00316F  03                 	db	3
   246   003170  01                 	db	1
   247   003171  03                 	db	3
   248   003172  02                 	db	2
   249   003173  03                 	db	3
   250   003174  04                 	db	4
   251   003175  05                 	db	5
   252   003176  03                 	db	3
   253   003177  03                 	db	3
   254   003178  03                 	db	3
   255   003179  03                 	db	3
   256                           
   257                           	psect	smallconst
   258   001000                     __psmallconst:
   259                           	callstack 0
   260   001000  00                 	db	0
   261   001001                     _i2c_fsmStateTable:
   262                           	callstack 0
   263   001001  10                 	db	low _I2C_DO_IDLE
   264   001002  35                 	db	high _I2C_DO_IDLE
   265   001003  DA                 	db	low _I2C_DO_SEND_ADR_READ
   266   001004  34                 	db	high _I2C_DO_SEND_ADR_READ
   267   001005  CA                 	db	low _I2C_DO_SEND_ADR_WRITE
   268   001006  34                 	db	high _I2C_DO_SEND_ADR_WRITE
   269   001007  50                 	db	low _I2C_DO_TX
   270   001008  22                 	db	high _I2C_DO_TX
   271   001009  1C                 	db	low _I2C_DO_RX
   272   00100A  25                 	db	high _I2C_DO_RX
   273   00100B  04                 	db	low _I2C_DO_RCEN
   274   00100C  35                 	db	high _I2C_DO_RCEN
   275   00100D  EC                 	db	low _I2C_DO_TX_EMPTY
   276   00100E  27                 	db	high _I2C_DO_TX_EMPTY
   277   00100F  C6                 	db	low _I2C_DO_SEND_RESTART_READ
   278   001010  35                 	db	high _I2C_DO_SEND_RESTART_READ
   279   001011  BE                 	db	low _I2C_DO_SEND_RESTART_WRITE
   280   001012  35                 	db	high _I2C_DO_SEND_RESTART_WRITE
   281   001013  B6                 	db	low _I2C_DO_SEND_RESTART
   282   001014  35                 	db	high _I2C_DO_SEND_RESTART
   283   001015  AE                 	db	low _I2C_DO_SEND_STOP
   284   001016  35                 	db	high _I2C_DO_SEND_STOP
   285   001017  A6                 	db	low _I2C_DO_RX_ACK
   286   001018  35                 	db	high _I2C_DO_RX_ACK
   287   001019  9E                 	db	low _I2C_DO_RX_NACK_STOP
   288   00101A  35                 	db	high _I2C_DO_RX_NACK_STOP
   289   00101B  96                 	db	low _I2C_DO_RX_NACK_RESTART
   290   00101C  35                 	db	high _I2C_DO_RX_NACK_RESTART
   291   00101D  F8                 	db	low _I2C_DO_RESET
   292   00101E  34                 	db	high _I2C_DO_RESET
   293   00101F  60                 	db	low _I2C_DO_ADDRESS_NACK
   294   001020  2B                 	db	high _I2C_DO_ADDRESS_NACK
   295   001021                     __end_of_i2c_fsmStateTable:
   296                           	callstack 0
   297   000000                     _ADCON0	set	4034
   298   000000                     _ADRESH	set	4036
   299   000000                     _ADRESL	set	4035
   300   000000                     _PIE2bits	set	4000
   301   000000                     _IPR1bits	set	3999
   302   000000                     _TXREG	set	4013
   303   000000                     _RCREG	set	4014
   304   000000                     _SPBRG	set	4015
   305   000000                     _TXSTA	set	4012
   306   000000                     _RCSTA	set	4011
   307   000000                     _BAUDCON	set	4024
   308   000000                     _EEDATA	set	4008
   309   000000                     _EEADR	set	4009
   310   000000                     _EEADRH	set	4010
   311   000000                     _EECON2	set	4007
   312   000000                     _TRISD	set	3989
   313   000000                     _TRISC	set	3988
   314   000000                     _TRISB	set	3987
   315   000000                     _LATC	set	3979
   316   000000                     _LATB	set	3978
   317   001021                     STR_10:
   318   001021  55                 	db	85	;'U'
   319   001022  73                 	db	115	;'s'
   320   001023  65                 	db	101	;'e'
   321   001024  72                 	db	114	;'r'
   322   001025  20                 	db	32
   323   001026  45                 	db	69	;'E'
   324   001027  6E                 	db	110	;'n'
   325   001028  74                 	db	116	;'t'
   326   001029  65                 	db	101	;'e'
   327   00102A  72                 	db	114	;'r'
   328   00102B  65                 	db	101	;'e'
   329   00102C  64                 	db	100	;'d'
   330   00102D  20                 	db	32
   331   00102E  69                 	db	105	;'i'
   332   00102F  6E                 	db	110	;'n'
   333   001030  76                 	db	118	;'v'
   334   001031  61                 	db	97	;'a'
   335   001032  6C                 	db	108	;'l'
   336   001033  69                 	db	105	;'i'
   337   001034  64                 	db	100	;'d'
   338   001035  20                 	db	32
   339   001036  50                 	db	80	;'P'
   340   001037  49                 	db	73	;'I'
   341   001038  4E                 	db	78	;'N'
   342   001039  20                 	db	32
   343   00103A  4C                 	db	76	;'L'
   344   00103B  6F                 	db	111	;'o'
   345   00103C  63                 	db	99	;'c'
   346   00103D  61                 	db	97	;'a'
   347   00103E  74                 	db	116	;'t'
   348   00103F  69                 	db	105	;'i'
   349   001040  6F                 	db	111	;'o'
   350   001041  6E                 	db	110	;'n'
   351   001042  20                 	db	32
   352   001043  6F                 	db	111	;'o'
   353   001044  72                 	db	114	;'r'
   354   001045  20                 	db	32
   355   001046  4E                 	db	78	;'N'
   356   001047  55                 	db	85	;'U'
   357   001048  4C                 	db	76	;'L'
   358   001049  4C                 	db	76	;'L'
   359   00104A  20                 	db	32
   360   00104B  50                 	db	80	;'P'
   361   00104C  4F                 	db	79	;'O'
   362   00104D  49                 	db	73	;'I'
   363   00104E  4E                 	db	78	;'N'
   364   00104F  54                 	db	84	;'T'
   365   001050  45                 	db	69	;'E'
   366   001051  52                 	db	82	;'R'
   367   001052  0A                 	db	10
   368   001053  00                 	db	0
   369   001054                     STR_11:
   370   001054  55                 	db	85	;'U'
   371   001055  73                 	db	115	;'s'
   372   001056  65                 	db	101	;'e'
   373   001057  72                 	db	114	;'r'
   374   001058  20                 	db	32
   375   001059  45                 	db	69	;'E'
   376   00105A  6E                 	db	110	;'n'
   377   00105B  74                 	db	116	;'t'
   378   00105C  65                 	db	101	;'e'
   379   00105D  72                 	db	114	;'r'
   380   00105E  65                 	db	101	;'e'
   381   00105F  64                 	db	100	;'d'
   382   001060  20                 	db	32
   383   001061  69                 	db	105	;'i'
   384   001062  6E                 	db	110	;'n'
   385   001063  76                 	db	118	;'v'
   386   001064  61                 	db	97	;'a'
   387   001065  6C                 	db	108	;'l'
   388   001066  69                 	db	105	;'i'
   389   001067  64                 	db	100	;'d'
   390   001068  20                 	db	32
   391   001069  4C                 	db	76	;'L'
   392   00106A  6F                 	db	111	;'o'
   393   00106B  67                 	db	103	;'g'
   394   00106C  69                 	db	105	;'i'
   395   00106D  63                 	db	99	;'c'
   396   00106E  20                 	db	32
   397   00106F  6F                 	db	111	;'o'
   398   001070  72                 	db	114	;'r'
   399   001071  20                 	db	32
   400   001072  4E                 	db	78	;'N'
   401   001073  55                 	db	85	;'U'
   402   001074  4C                 	db	76	;'L'
   403   001075  4C                 	db	76	;'L'
   404   001076  20                 	db	32
   405   001077  50                 	db	80	;'P'
   406   001078  4F                 	db	79	;'O'
   407   001079  49                 	db	73	;'I'
   408   00107A  4E                 	db	78	;'N'
   409   00107B  54                 	db	84	;'T'
   410   00107C  45                 	db	69	;'E'
   411   00107D  52                 	db	82	;'R'
   412   00107E  0A                 	db	10
   413   00107F  00                 	db	0
   414   001080                     STR_6:
   415   001080  54                 	db	84	;'T'
   416   001081  45                 	db	69	;'E'
   417   001082  4D                 	db	77	;'M'
   418   001083  50                 	db	80	;'P'
   419   001084  3A                 	db	58	;':'
   420   001085  20                 	db	32
   421   001086  00                 	db	0
   422   001087                     STR_4:
   423   001087  44                 	db	68	;'D'
   424   001088  61                 	db	97	;'a'
   425   001089  74                 	db	116	;'t'
   426   00108A  65                 	db	101	;'e'
   427   00108B  3A                 	db	58	;':'
   428   00108C  20                 	db	32
   429   00108D  00                 	db	0
   430   00108E                     STR_1:
   431   00108E  44                 	db	68	;'D'
   432   00108F  41                 	db	65	;'A'
   433   001090  54                 	db	84	;'T'
   434   001091  45                 	db	69	;'E'
   435   001092  3A                 	db	58	;':'
   436   001093  20                 	db	32
   437   001094  00                 	db	0
   438   001095                     STR_2:
   439   001095  54                 	db	84	;'T'
   440   001096  69                 	db	105	;'i'
   441   001097  6D                 	db	109	;'m'
   442   001098  65                 	db	101	;'e'
   443   001099  3A                 	db	58	;':'
   444   00109A  20                 	db	32
   445   00109B  00                 	db	0
   446   00109C  25                 	db	37
   447   00109D  6C                 	db	108	;'l'
   448   00109E  75                 	db	117	;'u'
   449   00109F  00                 	db	0
   450   0010A0                     STR_7:
   451   0010A0  25                 	db	37
   452   0010A1  69                 	db	105	;'i'
   453   0010A2  00                 	db	0
   454   0010A3                     STR_3:
   455   0010A3  25                 	db	37
   456   0010A4  75                 	db	117	;'u'
   457   0010A5  00                 	db	0
   458   0010A6  00                 	db	0	; dummy byte at the end
   459   000000                     
   460                           	psect	nvCOMRAM
   461   000038                     __pnvCOMRAM:
   462                           	callstack 0
   463   000038                     _INT2_InterruptHandler:
   464                           	callstack 0
   465   000038                     	ds	2
   466   00003A                     _INT1_InterruptHandler:
   467                           	callstack 0
   468   00003A                     	ds	2
   469   00003C                     _INT0_InterruptHandler:
   470                           	callstack 0
   471   00003C                     	ds	2
   472   00003E                     _ADC_InterruptHandler:
   473                           	callstack 0
   474   00003E                     	ds	2
   475                           
   476                           	psect	nvBANK0
   477   0000FE                     __pnvBANK0:
   478                           	callstack 0
   479   0000FE                     _EUSART_FramingErrorHandler:
   480                           	callstack 0
   481   0000FE                     	ds	2
   482                           
   483                           	psect	nvBANK1
   484   000144                     __pnvBANK1:
   485                           	callstack 0
   486   000144                     _EUSART_ErrorHandler:
   487                           	callstack 0
   488   000144                     	ds	2
   489   000146                     _EUSART_OverrunErrorHandler:
   490                           	callstack 0
   491   000146                     	ds	2
   492   000000                     _LATAbits	set	3977
   493   000000                     _ADCON0bits	set	4034
   494   000000                     _SSPSTATbits	set	4039
   495   000000                     _SSPCON2bits	set	4037
   496   000000                     _SSPCON1bits	set	4038
   497   000000                     _RCSTAbits	set	4011
   498   000000                     _TXSTAbits	set	4012
   499   000000                     _WPUB	set	3964
   500   000000                     _ANSEL	set	3966
   501   000000                     _OSCTUNE	set	3995
   502   000000                     _OSCCON	set	4051
   503   000000                     _INTCONbits	set	4082
   504   000000                     _LATA	set	3977
   505   000000                     _LATD	set	3980
   506   000000                     _LATE	set	3981
   507   000000                     _TABLAT	set	4085
   508   000000                     _TBLPTRL	set	4086
   509   000000                     _TBLPTRH	set	4087
   510   000000                     _TBLPTRU	set	4088
   511   000000                     _INTCON3bits	set	4080
   512   000000                     _INTCON2bits	set	4081
   513   000000                     _PIE1bits	set	3997
   514   000000                     _PIR1bits	set	3998
   515   000000                     _PIR2bits	set	4001
   516   000000                     _EECON1bits	set	4006
   517   000000                     _TRISA	set	3986
   518   000000                     _TRISE	set	3990
   519   000000                     _ANSELH	set	3967
   520   000000                     _PORTE	set	3972
   521   000000                     _PORTD	set	3971
   522   000000                     _PORTC	set	3970
   523   000000                     _PORTB	set	3969
   524   000000                     _PORTA	set	3968
   525   000000                     _IPR2bits	set	4002
   526   000000                     _ADCON2	set	4032
   527   000000                     _ADCON1	set	4033
   528   000000                     _SSPCON2	set	4037
   529   000000                     _SSPCON1	set	4038
   530   000000                     _SSPSTAT	set	4039
   531   000000                     _SPBRGH	set	4016
   532   000000                     _RCONbits	set	4048
   533   000000                     _SSPBUF	set	4041
   534   000000                     _SSPADD	set	4040
   535                           
   536                           ; #config settings
   537                           
   538                           	psect	cinit
   539   002C8E                     __pcinit:
   540                           	callstack 0
   541   002C8E                     start_initialization:
   542                           	callstack 0
   543   002C8E                     __initialization:
   544                           	callstack 0
   545                           
   546                           ; Initialize objects allocated to BANK0 (44 bytes)
   547                           ; load TBLPTR registers with __pidataBANK0
   548   002C8E  0E4E               	movlw	low __pidataBANK0
   549   002C90  6EF6               	movwf	tblptrl,c
   550   002C92  0E31               	movlw	high __pidataBANK0
   551   002C94  6EF7               	movwf	tblptrh,c
   552   002C96  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   553   002C98  6EF8               	movwf	tblptru,c
   554   002C9A  EE00  F0AC         	lfsr	0,__pdataBANK0
   555   002C9E  EE10 F02C          	lfsr	1,44
   556   002CA2                     copy_data0:
   557   002CA2  0009               	tblrd		*+
   558   002CA4  CFF5 FFEE          	movff	tablat,postinc0
   559   002CA8  50E5               	movf	postdec1,w,c
   560   002CAA  50E1               	movf	fsr1l,w,c
   561   002CAC  E1FA               	bnz	copy_data0
   562                           
   563                           ; Initialize objects allocated to COMRAM (1 bytes)
   564                           ; load TBLPTR registers with __pidataCOMRAM
   565   002CAE  0E26               	movlw	low __pidataCOMRAM
   566   002CB0  6EF6               	movwf	tblptrl,c
   567   002CB2  0E36               	movlw	high __pidataCOMRAM
   568   002CB4  6EF7               	movwf	tblptrh,c
   569   002CB6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   570   002CB8  6EF8               	movwf	tblptru,c
   571   002CBA  0009               	tblrd		*+	;fetch initializer
   572   002CBC  CFF5 F040          	movff	tablat,__pdataCOMRAM
   573                           
   574                           ; Clear objects allocated to BANK1 (32 bytes)
   575   002CC0  EE01  F024         	lfsr	0,__pbssBANK1
   576   002CC4  0E20               	movlw	32
   577   002CC6                     clear_0:
   578   002CC6  6AEE               	clrf	postinc0,c
   579   002CC8  06E8               	decf	wreg,f,c
   580   002CCA  E1FD               	bnz	clear_0
   581                           
   582                           ; Clear objects allocated to BANK0 (76 bytes)
   583   002CCC  EE00  F060         	lfsr	0,__pbssBANK0
   584   002CD0  0E4C               	movlw	76
   585   002CD2                     clear_1:
   586   002CD2  6AEE               	clrf	postinc0,c
   587   002CD4  06E8               	decf	wreg,f,c
   588   002CD6  E1FD               	bnz	clear_1
   589                           
   590                           ; Clear objects allocated to COMRAM (23 bytes)
   591   002CD8  EE00  F021         	lfsr	0,__pbssCOMRAM
   592   002CDC  0E17               	movlw	23
   593   002CDE                     clear_2:
   594   002CDE  6AEE               	clrf	postinc0,c
   595   002CE0  06E8               	decf	wreg,f,c
   596   002CE2  E1FD               	bnz	clear_2
   597   002CE4                     end_of_initialization:
   598                           	callstack 0
   599   002CE4                     __end_of__initialization:
   600                           	callstack 0
   601   002CE4  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   602   002CE6  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   603   002CE8  0100               	movlb	0
   604   002CEA  EFB2  F00A         	goto	_main	;jump to C main() function
   605                           
   606                           	psect	bssCOMRAM
   607   000021                     __pbssCOMRAM:
   608                           	callstack 0
   609   000021                     _dt:
   610                           	callstack 0
   611   000021                     	ds	7
   612   000028                     _width:
   613                           	callstack 0
   614   000028                     	ds	2
   615   00002A                     _prec:
   616                           	callstack 0
   617   00002A                     	ds	2
   618   00002C                     _MSSP_InterruptHandler:
   619                           	callstack 0
   620   00002C                     	ds	2
   621   00002E                     _flags:
   622                           	callstack 0
   623   00002E                     	ds	1
   624   00002F                     send4bit@F3726:
   625                           	callstack 0
   626   00002F                     	ds	1
   627   000030                     LCD4B_SENDCHARPOS@F3699:
   628                           	callstack 0
   629   000030                     	ds	1
   630   000031                     _eusartRxLastError:
   631                           	callstack 0
   632   000031                     	ds	1
   633   000032                     __Time:
   634                           	callstack 0
   635   000032                     	ds	3
   636   000035                     __Date:
   637                           	callstack 0
   638   000035                     	ds	3
   639                           
   640                           	psect	dataCOMRAM
   641   000040                     __pdataCOMRAM:
   642                           	callstack 0
   643   000040                     _autocont:
   644                           	callstack 0
   645   000040                     	ds	1
   646                           
   647                           	psect	bssBANK0
   648   000060                     __pbssBANK0:
   649                           	callstack 0
   650   000060                     _I2C_Status:
   651                           	callstack 0
   652   000060                     	ds	36
   653   000084                     _timer:
   654                           	callstack 0
   655   000084                     	ds	7
   656   00008B                     _lightread:
   657                           	callstack 0
   658   00008B                     	ds	2
   659   00008D                     sendenable@F3731:
   660                           	callstack 0
   661   00008D                     	ds	1
   662   00008E                     LCD4B_SENDCHAR@F3689:
   663                           	callstack 0
   664   00008E                     	ds	1
   665   00008F                     LCD4B_SENDCMD@F3681:
   666                           	callstack 0
   667   00008F                     	ds	1
   668   000090                     LCD4B_SET@F3675:
   669                           	callstack 0
   670   000090                     	ds	1
   671   000091                     LCD4B_SET@F3672:
   672                           	callstack 0
   673   000091                     	ds	1
   674   000092                     _EEPROMreading:
   675                           	callstack 0
   676   000092                     	ds	1
   677   000093                     _TCA7temp:
   678                           	callstack 0
   679   000093                     	ds	1
   680   000094                     _datestr:
   681                           	callstack 0
   682   000094                     	ds	10
   683   00009E                     _timestr:
   684                           	callstack 0
   685   00009E                     	ds	10
   686   0000A8                     _LCDtemp:
   687                           	callstack 0
   688   0000A8                     	ds	4
   689                           
   690                           	psect	dataBANK0
   691   0000AC                     __pdataBANK0:
   692                           	callstack 0
   693   0000AC                     _PORT_Reg:
   694                           	callstack 0
   695   0000AC                     	ds	10
   696   0000B6                     _LAT_Reg:
   697                           	callstack 0
   698   0000B6                     	ds	10
   699   0000C0                     _TRIS_Reg:
   700                           	callstack 0
   701   0000C0                     	ds	10
   702   0000CA                     _doorlightauto:
   703                           	callstack 0
   704   0000CA                     	ds	1
   705   0000CB                     _homelightauto:
   706                           	callstack 0
   707   0000CB                     	ds	1
   708   0000CC                     _lcd:
   709                           	callstack 0
   710   0000CC                     	ds	12
   711                           
   712                           	psect	bssBANK1
   713   000124                     __pbssBANK1:
   714                           	callstack 0
   715   000124                     _dbuf:
   716                           	callstack 0
   717   000124                     	ds	32
   718                           
   719                           	psect	cstackBANK1
   720   000100                     __pcstackBANK1:
   721                           	callstack 0
   722   000100                     ?_sprintf:
   723                           	callstack 0
   724   000100                     sprintf@s:
   725                           	callstack 0
   726   000100                     printf@ap:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x0
   730   000100                     	ds	1
   731   000101                     sprintf@fmt:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x1
   735   000101                     	ds	1
   736   000102                     PINWRITE@pinconfig:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x2
   740   000102                     	ds	2
   741   000104                     PINWRITE@log:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x4
   745   000104                     	ds	1
   746   000105                     ??_PINWRITE:
   747                           
   748                           ; 1 bytes @ 0x5
   749   000105                     	ds	1
   750   000106                     sprintf@ap:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x6
   754   000106                     	ds	2
   755   000108                     sprintf@f:
   756                           	callstack 0
   757                           
   758                           ; 12 bytes @ 0x8
   759   000108                     	ds	2
   760   00010A                     sendenable@lcd:
   761                           	callstack 0
   762   00010A                     PINSTART@pinconfig:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0xA
   766   00010A                     	ds	1
   767   00010B                     ??_sendenable:
   768                           
   769                           ; 1 bytes @ 0xB
   770   00010B                     	ds	1
   771   00010C                     ??_PINSTART:
   772   00010C                     sendenable@ret:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0xC
   776   00010C                     	ds	1
   777   00010D                     sendenable@pinEN:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0xD
   781   00010D                     	ds	1
   782   00010E                     LCD4B_SENDCMD@lcd:
   783                           	callstack 0
   784   00010E                     LCD4B_SENDCHAR@lcd:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0xE
   788   00010E                     	ds	1
   789   00010F                     LCD4B_SENDCMD@cmd:
   790                           	callstack 0
   791   00010F                     LCD4B_SENDCHAR@data:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0xF
   795   00010F                     	ds	1
   796   000110                     ??_LCD4B_SENDCHAR:
   797   000110                     ??_LCD4B_SENDCMD:
   798                           
   799                           ; 1 bytes @ 0x10
   800   000110                     	ds	1
   801   000111                     PINSTART@ret:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x11
   805   000111                     	ds	1
   806   000112                     LCD4B_SENDCMD@ret:
   807                           	callstack 0
   808   000112                     LCD4B_SENDCHAR@ret:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x12
   812   000112                     	ds	1
   813   000113                     LCD4B_SENDCMD@i:
   814                           	callstack 0
   815   000113                     LCD4B_SENDCHAR@i:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x13
   819   000113                     	ds	2
   820   000115                     LCD4B_SENDCMD@i_2497:
   821                           	callstack 0
   822   000115                     LCD4B_SENDCHAR@i_2519:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x15
   826   000115                     	ds	2
   827   000117                     LCD4B_SENDCMD@pinptr:
   828                           	callstack 0
   829   000117                     LCD4B_SENDCHAR@pinptr:
   830                           	callstack 0
   831                           
   832                           ; 1 bytes @ 0x17
   833   000117                     	ds	1
   834   000118                     LCD4B_SET@lcd:
   835                           	callstack 0
   836   000118                     LCD4B_SENDSTR@lcd:
   837                           	callstack 0
   838   000118                     setcursor4bit@lcd:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x18
   842   000118                     	ds	1
   843   000119                     ??_LCD4B_SET:
   844   000119                     LCD4B_SENDSTR@str:
   845                           	callstack 0
   846   000119                     setcursor4bit@row:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x19
   850   000119                     	ds	1
   851   00011A                     LCD4B_SENDSTR@str_old:
   852                           	callstack 0
   853   00011A                     setcursor4bit@col:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x1A
   857   00011A                     	ds	1
   858   00011B                     ??_setcursor4bit:
   859   00011B                     LCD4B_SENDSTR@length:
   860                           	callstack 0
   861   00011B                     LCD4B_SET@i:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x1B
   865   00011B                     	ds	2
   866   00011D                     LCD4B_SET@pinptr_2471:
   867                           	callstack 0
   868   00011D                     setcursor4bit@ret:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0x1D
   872   00011D                     	ds	1
   873   00011E                     LCD4B_SET@pinptr:
   874                           	callstack 0
   875   00011E                     LCD4B_SENDSTRPOS@lcd:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x1E
   879   00011E                     	ds	1
   880   00011F                     LCD4B_SENDSTRPOS@str:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x1F
   884   00011F                     	ds	1
   885   000120                     LCD4B_SENDSTRPOS@row:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x20
   889   000120                     	ds	1
   890   000121                     LCD4B_SENDSTRPOS@column:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x21
   894   000121                     	ds	1
   895   000122                     ??_main:
   896                           
   897                           ; 1 bytes @ 0x22
   898   000122                     	ds	2
   899                           
   900                           	psect	cstackBANK0
   901   0000D8                     __pcstackBANK0:
   902                           	callstack 0
   903   0000D8                     ?_strlen:
   904                           	callstack 0
   905   0000D8                     ?_ADC_GetConversion:
   906                           	callstack 0
   907   0000D8                     ?___lldiv:
   908                           	callstack 0
   909   0000D8                     ?___aldiv:
   910                           	callstack 0
   911   0000D8                     ?___almod:
   912                           	callstack 0
   913   0000D8                     ?___llmod:
   914                           	callstack 0
   915   0000D8                     EUSART_Write@txData:
   916                           	callstack 0
   917   0000D8                     I2C_Close@returnValue:
   918                           	callstack 0
   919   0000D8                     I2C_MasterOperation@read:
   920                           	callstack 0
   921   0000D8                     EUSART_SetFramingErrorHandler@interruptHandler:
   922                           	callstack 0
   923   0000D8                     EUSART_SetOverrunErrorHandler@interruptHandler:
   924                           	callstack 0
   925   0000D8                     EUSART_SetErrorHandler@interruptHandler:
   926                           	callstack 0
   927   0000D8                     I2C_SetBuffer@buffer:
   928                           	callstack 0
   929   0000D8                     I2C_SetInterruptHandler@InterruptHandler:
   930                           	callstack 0
   931   0000D8                     I2C_SetCallback@cb:
   932                           	callstack 0
   933   0000D8                     ADC_SetInterruptHandler@InterruptHandler:
   934                           	callstack 0
   935   0000D8                     INT0_SetInterruptHandler@InterruptHandler:
   936                           	callstack 0
   937   0000D8                     INT1_SetInterruptHandler@InterruptHandler:
   938                           	callstack 0
   939   0000D8                     INT2_SetInterruptHandler@InterruptHandler:
   940                           	callstack 0
   941   0000D8                     fputc@c:
   942                           	callstack 0
   943   0000D8                     strlen@s:
   944                           	callstack 0
   945   0000D8                     ___lldiv@dividend:
   946                           	callstack 0
   947   0000D8                     ___aldiv@dividend:
   948                           	callstack 0
   949   0000D8                     ___almod@dividend:
   950                           	callstack 0
   951   0000D8                     ___llmod@dividend:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x0
   955   0000D8                     	ds	1
   956   0000D9                     I2C_MasterOperation@returnValue:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x1
   960   0000D9                     	ds	1
   961   0000DA                     ??_ADC_GetConversion:
   962   0000DA                     I2C_Open@address:
   963                           	callstack 0
   964   0000DA                     I2C_SetBuffer@bufferSize:
   965                           	callstack 0
   966   0000DA                     I2C_SetCallback@ptr:
   967                           	callstack 0
   968   0000DA                     fputc@fp:
   969                           	callstack 0
   970   0000DA                     strlen@a:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x2
   974   0000DA                     	ds	1
   975   0000DB                     I2C_Open@returnValue:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x3
   979   0000DB                     	ds	1
   980   0000DC                     ??_fputc:
   981   0000DC                     I2C_SetCallback@idx:
   982                           	callstack 0
   983   0000DC                     ADC_GetConversion@channel:
   984                           	callstack 0
   985   0000DC                     EUSART_SendString@str:
   986                           	callstack 0
   987   0000DC                     ___lldiv@divisor:
   988                           	callstack 0
   989   0000DC                     ___aldiv@divisor:
   990                           	callstack 0
   991   0000DC                     ___almod@divisor:
   992                           	callstack 0
   993   0000DC                     ___llmod@divisor:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x4
   997   0000DC                     	ds	1
   998   0000DD                     I2C_SetDataCompleteCallback@cb:
   999                           	callstack 0
  1000   0000DD                     I2C_SetAddressNackCallback@cb:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x5
  1004   0000DD                     	ds	1
  1005   0000DE                     EUSART_SendString@len:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x6
  1009   0000DE                     	ds	1
  1010   0000DF                     I2C_SetDataCompleteCallback@ptr:
  1011                           	callstack 0
  1012   0000DF                     I2C_SetAddressNackCallback@ptr:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x7
  1016   0000DF                     	ds	1
  1017   0000E0                     ___lldiv@counter:
  1018                           	callstack 0
  1019   0000E0                     ___aldiv@counter:
  1020                           	callstack 0
  1021   0000E0                     ___almod@counter:
  1022                           	callstack 0
  1023   0000E0                     ___llmod@counter:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x8
  1027   0000E0                     	ds	1
  1028   0000E1                     I2C_Read1ByteRegister@reg:
  1029                           	callstack 0
  1030   0000E1                     I2C_Write1ByteRegister@reg:
  1031                           	callstack 0
  1032   0000E1                     ___aldiv@sign:
  1033                           	callstack 0
  1034   0000E1                     ___almod@sign:
  1035                           	callstack 0
  1036   0000E1                     ___lldiv@quotient:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x9
  1040   0000E1                     	ds	1
  1041   0000E2                     ?_abs:
  1042                           	callstack 0
  1043   0000E2                     I2C_Read1ByteRegister@address:
  1044                           	callstack 0
  1045   0000E2                     I2C_Write1ByteRegister@data:
  1046                           	callstack 0
  1047   0000E2                     abs@a:
  1048                           	callstack 0
  1049   0000E2                     ___aldiv@quotient:
  1050                           	callstack 0
  1051                           
  1052                           ; 4 bytes @ 0xA
  1053   0000E2                     	ds	1
  1054   0000E3                     I2C_Read1ByteRegister@returnValue:
  1055                           	callstack 0
  1056   0000E3                     I2C_Write1ByteRegister@address:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0xB
  1060   0000E3                     	ds	1
  1061   0000E4                     ??_abs:
  1062   0000E4                     ?_GetDataAndTime:
  1063                           	callstack 0
  1064   0000E4                     EXTEEPROM_WriteByte@Byteadd:
  1065                           	callstack 0
  1066   0000E4                     EXTEEPROM_ReadByte@Byteadd:
  1067                           	callstack 0
  1068   0000E4                     ReadTemp@addr:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0xC
  1072   0000E4                     	ds	1
  1073   0000E5                     EXTEEPROM_WriteByte@data:
  1074                           	callstack 0
  1075   0000E5                     EXTEEPROM_ReadByte@Eadd:
  1076                           	callstack 0
  1077   0000E5                     ReadTemp@temp:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0xD
  1081   0000E5                     	ds	1
  1082   0000E6                     EXTEEPROM_WriteByte@Eadd:
  1083                           	callstack 0
  1084   0000E6                     EXTEEPROM_ReadByte@read:
  1085                           	callstack 0
  1086   0000E6                     vfpfcnvrt@fp:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0xE
  1090   0000E6                     	ds	2
  1091   0000E8                     vfpfcnvrt@fmt:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x10
  1095   0000E8                     	ds	1
  1096   0000E9                     vfpfcnvrt@ap:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x11
  1100   0000E9                     	ds	2
  1101   0000EB                     ??_vfpfcnvrt:
  1102                           
  1103                           ; 1 bytes @ 0x13
  1104   0000EB                     	ds	2
  1105   0000ED                     PrintDateUART@str:
  1106                           	callstack 0
  1107   0000ED                     PrintTimeUART@str:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x15
  1111   0000ED                     	ds	2
  1112   0000EF                     vfpfcnvrt@done:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x17
  1116   0000EF                     	ds	1
  1117   0000F0                     vfpfcnvrt@cp:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x18
  1121   0000F0                     	ds	1
  1122   0000F1                     vfpfcnvrt@convarg:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x19
  1126   0000F1                     	ds	4
  1127   0000F5                     vfpfcnvrt@c:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x1D
  1131   0000F5                     	ds	1
  1132   0000F6                     ?_vfprintf:
  1133                           	callstack 0
  1134   0000F6                     vfprintf@fp:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x1E
  1138   0000F6                     	ds	2
  1139   0000F8                     vfprintf@fmt:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x20
  1143   0000F8                     	ds	1
  1144   0000F9                     vfprintf@ap:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x21
  1148   0000F9                     	ds	2
  1149   0000FB                     vfprintf@cfmt:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x23
  1153   0000FB                     	ds	1
  1154   0000FC                     ?_printf:
  1155                           	callstack 0
  1156   0000FC                     printf@fmt:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x24
  1160   0000FC                     	ds	1
  1161   0000FD                     PINWRITE@ret:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x25
  1165   0000FD                     	ds	1
  1166   0000FE                     
  1167                           ; 1 bytes @ 0x26
  1168                           
  1169                           	psect	cstackCOMRAM
  1170   000001                     __pcstackCOMRAM:
  1171                           	callstack 0
  1172   000001                     ??_manual_Override:
  1173   000001                     ??_manual_homelight:
  1174   000001                     ??_manual_Doorlight:
  1175   000001                     I2C_MasterSendTxData@data:
  1176                           	callstack 0
  1177   000001                     i2I2C_SetBuffer@buffer:
  1178                           	callstack 0
  1179   000001                     i2I2C_SetCallback@cb:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x0
  1183   000001                     	ds	1
  1184   000002                     
  1185                           ; 1 bytes @ 0x1
  1186   000002                     	ds	1
  1187   000003                     i2I2C_SetBuffer@bufferSize:
  1188                           	callstack 0
  1189   000003                     i2I2C_SetCallback@ptr:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x2
  1193   000003                     	ds	2
  1194   000005                     i2I2C_SetCallback@idx:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x4
  1198   000005                     	ds	1
  1199   000006                     i2I2C_SetDataCompleteCallback@cb:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x5
  1203   000006                     	ds	2
  1204   000008                     i2I2C_SetDataCompleteCallback@ptr:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x7
  1208   000008                     	ds	2
  1209   00000A                     rd1RegCompleteHandler@ptr:
  1210                           	callstack 0
  1211   00000A                     rd2RegCompleteHandler@ptr:
  1212                           	callstack 0
  1213   00000A                     wr1RegCompleteHandler@ptr:
  1214                           	callstack 0
  1215   00000A                     wr2RegCompleteHandler@ptr:
  1216                           	callstack 0
  1217   00000A                     rdBlkRegCompleteHandler@ptr:
  1218                           	callstack 0
  1219   00000A                     I2C_CallbackReturnReset@funPtr:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x9
  1223   00000A                     	ds	2
  1224   00000C                     ??_rdBlkRegCompleteHandler:
  1225   00000C                     
  1226                           ; 1 bytes @ 0xB
  1227   00000C                     	ds	1
  1228   00000D                     ??_I2C_DO_TX:
  1229   00000D                     ??_I2C_DO_RX:
  1230   00000D                     ??_I2C_DO_TX_EMPTY:
  1231   00000D                     ??_I2C_DO_ADDRESS_NACK:
  1232                           
  1233                           ; 1 bytes @ 0xC
  1234   00000D                     	ds	2
  1235   00000F                     ??_I2C_MasterFsm:
  1236                           
  1237                           ; 1 bytes @ 0xE
  1238   00000F                     	ds	3
  1239   000012                     ??_INTERRUPT_InterruptManagerHigh:
  1240                           
  1241                           ; 1 bytes @ 0x11
  1242   000012                     	ds	10
  1243   00001C                     ??_INTERRUPT_InterruptManagerLow:
  1244                           
  1245                           ; 1 bytes @ 0x1B
  1246   00001C                     	ds	5
  1247                           
  1248 ;;
  1249 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1250 ;;
  1251 ;; *************** function _main *****************
  1252 ;; Defined at:
  1253 ;;		line 41 in file "main.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;Total ram usage:        2 bytes
  1272 ;; Hardware stack levels required when called: 20
  1273 ;; This function calls:
  1274 ;;		_ADC_GetConversion
  1275 ;;		_ADC_SetInterruptHandler
  1276 ;;		_DatetoString
  1277 ;;		_EXTEEPROM_ReadByte
  1278 ;;		_EXTEEPROM_WriteByte
  1279 ;;		_GetDataAndTime
  1280 ;;		_I2C_Write1ByteRegister
  1281 ;;		_INT0_SetInterruptHandler
  1282 ;;		_INT1_SetInterruptHandler
  1283 ;;		_INT2_SetInterruptHandler
  1284 ;;		_LCD4B_SENDCHAR
  1285 ;;		_LCD4B_SENDSTR
  1286 ;;		_LCD4B_SENDSTRPOS
  1287 ;;		_LCD4B_SET
  1288 ;;		_PrintDateUART
  1289 ;;		_PrintTimeUART
  1290 ;;		_ReadTemp
  1291 ;;		_SYSTEM_Initialize
  1292 ;;		_TimetoString
  1293 ;;		_sprintf
  1294 ;; This function is called by:
  1295 ;;		Startup code after reset
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text0
  1300   001564                     __ptext0:
  1301                           	callstack 0
  1302   001564                     _main:
  1303                           	callstack 11
  1304   001564                     
  1305                           ;main.c: 44:     SYSTEM_Initialize();
  1306   001564  ECA5  F019         	call	_SYSTEM_Initialize	;wreg free
  1307                           
  1308                           ;main.c: 46:     ADC_SetInterruptHandler(lightSwitch);
  1309   001568  0E90               	movlw	low _lightSwitch
  1310   00156A  0100               	movlb	0	; () banked
  1311   00156C  6FD8               	movwf	ADC_SetInterruptHandler@InterruptHandler& (0+255),b
  1312   00156E  0E2A               	movlw	high _lightSwitch
  1313   001570  6FD9               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1314   001572  ECB1  F01A         	call	_ADC_SetInterruptHandler	;wreg free
  1315                           
  1316                           ;main.c: 49:     INT0_SetInterruptHandler(manual_Override);
  1317   001576  0EEE               	movlw	low _manual_Override
  1318   001578  0100               	movlb	0	; () banked
  1319   00157A  6FD8               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  1320   00157C  0E26               	movlw	high _manual_Override
  1321   00157E  6FD9               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1322   001580  EC9D  F01A         	call	_INT0_SetInterruptHandler	;wreg free
  1323                           
  1324                           ;main.c: 50:     INT1_SetInterruptHandler(manual_homelight);
  1325   001584  0E20               	movlw	low _manual_homelight
  1326   001586  0100               	movlb	0	; () banked
  1327   001588  6FD8               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  1328   00158A  0E31               	movlw	high _manual_homelight
  1329   00158C  6FD9               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1330   00158E  EC98  F01A         	call	_INT1_SetInterruptHandler	;wreg free
  1331                           
  1332                           ;main.c: 51:     INT2_SetInterruptHandler(manual_Doorlight);
  1333   001592  0EAE               	movlw	low _manual_Doorlight
  1334   001594  0100               	movlb	0	; () banked
  1335   001596  6FD8               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  1336   001598  0E32               	movlw	high _manual_Doorlight
  1337   00159A  6FD9               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1338   00159C  EC93  F01A         	call	_INT2_SetInterruptHandler	;wreg free
  1339   0015A0                     
  1340                           ;main.c: 54:     EXTEEPROM_WriteByte(0x50, 0x00, 0x07);
  1341   0015A0  0E00               	movlw	0
  1342   0015A2  0100               	movlb	0	; () banked
  1343   0015A4  6FE4               	movwf	EXTEEPROM_WriteByte@Byteadd& (0+255),b
  1344   0015A6  0E07               	movlw	7
  1345   0015A8  6FE5               	movwf	EXTEEPROM_WriteByte@data& (0+255),b
  1346   0015AA  0E50               	movlw	80
  1347   0015AC  EC46  F01A         	call	_EXTEEPROM_WriteByte
  1348   0015B0                     
  1349                           ;main.c: 55:     _delay((unsigned long)((500)*(16000000L/4000.0)));
  1350   0015B0  0E0B               	movlw	11
  1351   0015B2  0101               	movlb	1	; () banked
  1352   0015B4  6F23               	movwf	(??_main+1)& (0+255),b
  1353   0015B6  0E26               	movlw	38
  1354   0015B8  6F22               	movwf	??_main& (0+255),b
  1355   0015BA  0E5D               	movlw	93
  1356   0015BC                     u5987:
  1357   0015BC  2EE8               	decfsz	wreg,f,c
  1358   0015BE  D7FE               	bra	u5987
  1359   0015C0  2F22               	decfsz	??_main& (0+255),f,b
  1360   0015C2  D7FC               	bra	u5987
  1361   0015C4  2F23               	decfsz	(??_main+1)& (0+255),f,b
  1362   0015C6  D7FA               	bra	u5987
  1363   0015C8  F000 F000          	nop2	
  1364   0015CC                     
  1365                           ;main.c: 56:     EXTEEPROM_WriteByte(0x51, 0x00, 0x08);
  1366   0015CC  0E00               	movlw	0
  1367   0015CE  0100               	movlb	0	; () banked
  1368   0015D0  6FE4               	movwf	EXTEEPROM_WriteByte@Byteadd& (0+255),b
  1369   0015D2  0E08               	movlw	8
  1370   0015D4  6FE5               	movwf	EXTEEPROM_WriteByte@data& (0+255),b
  1371   0015D6  0E51               	movlw	81
  1372   0015D8  EC46  F01A         	call	_EXTEEPROM_WriteByte
  1373   0015DC                     
  1374                           ;main.c: 57:     _delay((unsigned long)((500)*(16000000L/4000.0)));
  1375   0015DC  0E0B               	movlw	11
  1376   0015DE  0101               	movlb	1	; () banked
  1377   0015E0  6F23               	movwf	(??_main+1)& (0+255),b
  1378   0015E2  0E26               	movlw	38
  1379   0015E4  6F22               	movwf	??_main& (0+255),b
  1380   0015E6  0E5D               	movlw	93
  1381   0015E8                     u5997:
  1382   0015E8  2EE8               	decfsz	wreg,f,c
  1383   0015EA  D7FE               	bra	u5997
  1384   0015EC  2F22               	decfsz	??_main& (0+255),f,b
  1385   0015EE  D7FC               	bra	u5997
  1386   0015F0  2F23               	decfsz	(??_main+1)& (0+255),f,b
  1387   0015F2  D7FA               	bra	u5997
  1388   0015F4  F000 F000          	nop2	
  1389   0015F8                     
  1390                           ;main.c: 59:     EEPROMreading = EXTEEPROM_ReadByte(0x50, 0x00);
  1391   0015F8  0E00               	movlw	0
  1392   0015FA  0100               	movlb	0	; () banked
  1393   0015FC  6FE4               	movwf	EXTEEPROM_ReadByte@Byteadd& (0+255),b
  1394   0015FE  0E50               	movlw	80
  1395   001600  EC16  F01A         	call	_EXTEEPROM_ReadByte
  1396   001604  0100               	movlb	0	; () banked
  1397   001606  6F92               	movwf	_EEPROMreading& (0+255),b
  1398   001608                     
  1399                           ; BSR set to: 0
  1400                           ;main.c: 60:     _delay((unsigned long)((500)*(16000000L/4000.0)));
  1401   001608  0E0B               	movlw	11
  1402   00160A  0101               	movlb	1	; () banked
  1403   00160C  6F23               	movwf	(??_main+1)& (0+255),b
  1404   00160E  0E26               	movlw	38
  1405   001610  6F22               	movwf	??_main& (0+255),b
  1406   001612  0E5D               	movlw	93
  1407   001614                     u6007:
  1408   001614  2EE8               	decfsz	wreg,f,c
  1409   001616  D7FE               	bra	u6007
  1410   001618  2F22               	decfsz	??_main& (0+255),f,b
  1411   00161A  D7FC               	bra	u6007
  1412   00161C  2F23               	decfsz	(??_main+1)& (0+255),f,b
  1413   00161E  D7FA               	bra	u6007
  1414   001620  F000 F000          	nop2	
  1415   001624                     
  1416                           ;main.c: 62:     LCD4B_SET(&lcd);
  1417   001624  0ECC               	movlw	low _lcd
  1418   001626  0101               	movlb	1	; () banked
  1419   001628  6F18               	movwf	LCD4B_SET@lcd& (0+255),b
  1420   00162A  ECB7  F00B         	call	_LCD4B_SET	;wreg free
  1421   00162E                     l9055:
  1422                           
  1423                           ;main.c: 67:         timer = GetDataAndTime();
  1424   00162E  ECDE  F014         	call	_GetDataAndTime	;wreg free
  1425   001632  EE20  F084         	lfsr	2,_timer
  1426   001636  0E06               	movlw	6
  1427   001638                     u5911:
  1428   001638  CFEB FFDB          	movff	plusw0,plusw2
  1429   00163C  06E8               	decf	wreg,f,c
  1430   00163E  E2FC               	bc	u5911
  1431   001640                     
  1432                           ;main.c: 69:         PrintDateUART();
  1433   001640  EC92  F019         	call	_PrintDateUART	;wreg free
  1434   001644                     
  1435                           ;main.c: 70:         PrintTimeUART();
  1436   001644  EC7F  F019         	call	_PrintTimeUART	;wreg free
  1437   001648                     
  1438                           ;main.c: 73:         TCA7temp = ReadTemp(0x4F);
  1439   001648  0E4F               	movlw	79
  1440   00164A  ECFE  F019         	call	_ReadTemp
  1441   00164E  0100               	movlb	0	; () banked
  1442   001650  6F93               	movwf	_TCA7temp& (0+255),b
  1443   001652                     
  1444                           ; BSR set to: 0
  1445                           ;main.c: 75:         sprintf((char *)LCDtemp,"%u",TCA7temp);
  1446   001652  0EA8               	movlw	low _LCDtemp
  1447   001654  0101               	movlb	1	; () banked
  1448   001656  6F00               	movwf	sprintf@s& (0+255),b
  1449   001658  0EA3               	movlw	low STR_3
  1450   00165A  6F01               	movwf	sprintf@fmt& (0+255),b
  1451   00165C  C093  F102         	movff	_TCA7temp,?_sprintf+2
  1452   001660  6B03               	clrf	(?_sprintf+3)& (0+255),b
  1453   001662  ECF2  F016         	call	_sprintf	;wreg free
  1454   001666                     
  1455                           ;main.c: 77:         I2C_Write1ByteRegister(0x38,0x00,TCA7temp);
  1456   001666  0E00               	movlw	0
  1457   001668  0100               	movlb	0	; () banked
  1458   00166A  6FE1               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  1459   00166C  C093  F0E2         	movff	_TCA7temp,I2C_Write1ByteRegister@data
  1460   001670  0E38               	movlw	56
  1461   001672  EC34  F014         	call	_I2C_Write1ByteRegister
  1462   001676                     
  1463                           ;main.c: 79:         if (homelightauto == 0x01){
  1464   001676  0100               	movlb	0	; () banked
  1465   001678  05CB               	decf	_homelightauto& (0+255),w,b
  1466   00167A  A4D8               	btfss	status,2,c
  1467   00167C  EF42  F00B         	goto	u5921
  1468   001680  EF44  F00B         	goto	u5920
  1469   001684                     u5921:
  1470   001684  EF4B  F00B         	goto	l9071
  1471   001688                     u5920:
  1472   001688                     
  1473                           ; BSR set to: 0
  1474                           ;main.c: 81:             lightread = ADC_GetConversion(LDR);
  1475   001688  0E00               	movlw	0
  1476   00168A  ECC0  F017         	call	_ADC_GetConversion
  1477   00168E  C0D8  F08B         	movff	?_ADC_GetConversion,_lightread
  1478   001692  C0D9  F08C         	movff	?_ADC_GetConversion+1,_lightread+1
  1479   001696                     l9071:
  1480                           
  1481                           ;main.c: 83:         _delay((unsigned long)((200)*(16000000L/4000.0)));
  1482   001696  0E05               	movlw	5
  1483   001698  0101               	movlb	1	; () banked
  1484   00169A  6F23               	movwf	(??_main+1)& (0+255),b
  1485   00169C  0E0F               	movlw	15
  1486   00169E  6F22               	movwf	??_main& (0+255),b
  1487   0016A0  0EF1               	movlw	241
  1488   0016A2                     u6017:
  1489   0016A2  2EE8               	decfsz	wreg,f,c
  1490   0016A4  D7FE               	bra	u6017
  1491   0016A6  2F22               	decfsz	??_main& (0+255),f,b
  1492   0016A8  D7FC               	bra	u6017
  1493   0016AA  2F23               	decfsz	(??_main+1)& (0+255),f,b
  1494   0016AC  D7FA               	bra	u6017
  1495   0016AE                     
  1496                           ;main.c: 88:         LCD4B_SENDCHAR(&lcd,0x01);
  1497   0016AE  0ECC               	movlw	low _lcd
  1498   0016B0  0101               	movlb	1	; () banked
  1499   0016B2  6F0E               	movwf	LCD4B_SENDCHAR@lcd& (0+255),b
  1500   0016B4  0E01               	movlw	1
  1501   0016B6  6F0F               	movwf	LCD4B_SENDCHAR@data& (0+255),b
  1502   0016B8  EC76  F00D         	call	_LCD4B_SENDCHAR	;wreg free
  1503   0016BC                     
  1504                           ;main.c: 89:         LCD4B_SENDSTRPOS(&lcd,(uint8_t *)"Date: ",1,1);
  1505   0016BC  0ECC               	movlw	low _lcd
  1506   0016BE  0101               	movlb	1	; () banked
  1507   0016C0  6F1E               	movwf	LCD4B_SENDSTRPOS@lcd& (0+255),b
  1508   0016C2  0E87               	movlw	low STR_4
  1509   0016C4  6F1F               	movwf	LCD4B_SENDSTRPOS@str& (0+255),b
  1510   0016C6  0E01               	movlw	1
  1511   0016C8  6F20               	movwf	LCD4B_SENDSTRPOS@row& (0+255),b
  1512   0016CA  0E01               	movlw	1
  1513   0016CC  6F21               	movwf	LCD4B_SENDSTRPOS@column& (0+255),b
  1514   0016CE  EC7D  F015         	call	_LCD4B_SENDSTRPOS	;wreg free
  1515   0016D2                     
  1516                           ;main.c: 90:         LCD4B_SENDSTR(&lcd,DatetoString());
  1517   0016D2  0ECC               	movlw	low _lcd
  1518   0016D4  0101               	movlb	1	; () banked
  1519   0016D6  6F18               	movwf	LCD4B_SENDSTR@lcd& (0+255),b
  1520   0016D8  EC38  F017         	call	_DatetoString	;wreg free
  1521   0016DC  0101               	movlb	1	; () banked
  1522   0016DE  6F19               	movwf	LCD4B_SENDSTR@str& (0+255),b
  1523   0016E0  EC77  F016         	call	_LCD4B_SENDSTR	;wreg free
  1524   0016E4                     
  1525                           ;main.c: 91:         LCD4B_SENDSTRPOS(&lcd,(uint8_t *)"Time: ",2,1);
  1526   0016E4  0ECC               	movlw	low _lcd
  1527   0016E6  0101               	movlb	1	; () banked
  1528   0016E8  6F1E               	movwf	LCD4B_SENDSTRPOS@lcd& (0+255),b
  1529   0016EA  0E95               	movlw	low STR_2
  1530   0016EC  6F1F               	movwf	LCD4B_SENDSTRPOS@str& (0+255),b
  1531   0016EE  0E02               	movlw	2
  1532   0016F0  6F20               	movwf	LCD4B_SENDSTRPOS@row& (0+255),b
  1533   0016F2  0E01               	movlw	1
  1534   0016F4  6F21               	movwf	LCD4B_SENDSTRPOS@column& (0+255),b
  1535   0016F6  EC7D  F015         	call	_LCD4B_SENDSTRPOS	;wreg free
  1536   0016FA                     
  1537                           ;main.c: 92:         LCD4B_SENDSTR(&lcd,TimetoString());
  1538   0016FA  0ECC               	movlw	low _lcd
  1539   0016FC  0101               	movlb	1	; () banked
  1540   0016FE  6F18               	movwf	LCD4B_SENDSTR@lcd& (0+255),b
  1541   001700  EC15  F017         	call	_TimetoString	;wreg free
  1542   001704  0101               	movlb	1	; () banked
  1543   001706  6F19               	movwf	LCD4B_SENDSTR@str& (0+255),b
  1544   001708  EC77  F016         	call	_LCD4B_SENDSTR	;wreg free
  1545   00170C                     
  1546                           ;main.c: 93:         LCD4B_SENDSTRPOS(&lcd,(uint8_t *)"TEMP: ",3,1);
  1547   00170C  0ECC               	movlw	low _lcd
  1548   00170E  0101               	movlb	1	; () banked
  1549   001710  6F1E               	movwf	LCD4B_SENDSTRPOS@lcd& (0+255),b
  1550   001712  0E80               	movlw	low STR_6
  1551   001714  6F1F               	movwf	LCD4B_SENDSTRPOS@str& (0+255),b
  1552   001716  0E03               	movlw	3
  1553   001718  6F20               	movwf	LCD4B_SENDSTRPOS@row& (0+255),b
  1554   00171A  0E01               	movlw	1
  1555   00171C  6F21               	movwf	LCD4B_SENDSTRPOS@column& (0+255),b
  1556   00171E  EC7D  F015         	call	_LCD4B_SENDSTRPOS	;wreg free
  1557   001722                     
  1558                           ;main.c: 94:         LCD4B_SENDSTR(&lcd,LCDtemp);
  1559   001722  0ECC               	movlw	low _lcd
  1560   001724  0101               	movlb	1	; () banked
  1561   001726  6F18               	movwf	LCD4B_SENDSTR@lcd& (0+255),b
  1562   001728  0EA8               	movlw	low _LCDtemp
  1563   00172A  6F19               	movwf	LCD4B_SENDSTR@str& (0+255),b
  1564   00172C  EC77  F016         	call	_LCD4B_SENDSTR	;wreg free
  1565   001730                     
  1566                           ;main.c: 97:         if (timer.hour == 0x08){
  1567   001730  0E08               	movlw	8
  1568   001732  0100               	movlb	0	; () banked
  1569   001734  1986               	xorwf	(_timer+2)& (0+255),w,b
  1570   001736  A4D8               	btfss	status,2,c
  1571   001738  EFA0  F00B         	goto	u5931
  1572   00173C  EFA2  F00B         	goto	u5930
  1573   001740                     u5931:
  1574   001740  EFA6  F00B         	goto	l9091
  1575   001744                     u5930:
  1576   001744                     
  1577                           ; BSR set to: 0
  1578                           ;main.c: 98:             homelightauto = 0x01;
  1579   001744  0E01               	movlw	1
  1580   001746  6FCB               	movwf	_homelightauto& (0+255),b
  1581                           
  1582                           ;main.c: 99:             doorlightauto = 0x01;
  1583   001748  0E01               	movlw	1
  1584   00174A  6FCA               	movwf	_doorlightauto& (0+255),b
  1585   00174C                     l9091:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;main.c: 101:         _delay((unsigned long)((737)*(16000000L/4000.0)));
  1589   00174C  0E0F               	movlw	15
  1590   00174E  0101               	movlb	1	; () banked
  1591   001750  6F23               	movwf	(??_main+1)& (0+255),b
  1592   001752  0EF5               	movlw	245
  1593   001754  6F22               	movwf	??_main& (0+255),b
  1594   001756  0E86               	movlw	134
  1595   001758                     u6027:
  1596   001758  2EE8               	decfsz	wreg,f,c
  1597   00175A  D7FE               	bra	u6027
  1598   00175C  2F22               	decfsz	??_main& (0+255),f,b
  1599   00175E  D7FC               	bra	u6027
  1600   001760  2F23               	decfsz	(??_main+1)& (0+255),f,b
  1601   001762  D7FA               	bra	u6027
  1602   001764  0000               	nop	
  1603   001766  EF17  F00B         	goto	l9055
  1604   00176A  EF33  F000         	goto	start
  1605   00176E                     __end_of_main:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _sprintf *****************
  1609 ;; Defined at:
  1610 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  s               1    0[BANK1 ] PTR unsigned char 
  1613 ;;		 -> LCDtemp(4), 
  1614 ;;  fmt             1    1[BANK1 ] PTR const unsigned char 
  1615 ;;		 -> STR_9(4), STR_8(3), STR_7(3), STR_3(3), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  f              12    8[BANK1 ] struct _IO_FILE
  1618 ;;  ap              2    6[BANK1 ] PTR void [1]
  1619 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1620 ;;  ret             2    0        int 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  2    0[BANK1 ] int 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1630 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;Total ram usage:       20 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 14
  1637 ;; This function calls:
  1638 ;;		_vfprintf
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;;		_byte2str
  1642 ;;		_short2str
  1643 ;;		_int2str
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text1
  1648   002DE4                     __ptext1:
  1649                           	callstack 0
  1650   002DE4                     _sprintf:
  1651                           	callstack 16
  1652   002DE4  0E02               	movlw	low (?_sprintf+2)
  1653   002DE6  0101               	movlb	1	; () banked
  1654   002DE8  6F06               	movwf	sprintf@ap& (0+255),b
  1655   002DEA  0E01               	movlw	high (?_sprintf+2)
  1656   002DEC  6F07               	movwf	(sprintf@ap+1)& (0+255),b
  1657   002DEE  C100  F108         	movff	sprintf@s,sprintf@f
  1658   002DF2                     
  1659                           ; BSR set to: 1
  1660   002DF2  0E00               	movlw	0
  1661   002DF4  6F0C               	movwf	(sprintf@f+4)& (0+255),b
  1662   002DF6  0E00               	movlw	0
  1663   002DF8  6F0B               	movwf	(sprintf@f+3)& (0+255),b
  1664   002DFA                     
  1665                           ; BSR set to: 1
  1666   002DFA  0E00               	movlw	0
  1667   002DFC  6F13               	movwf	(sprintf@f+11)& (0+255),b
  1668   002DFE  0E00               	movlw	0
  1669   002E00  6F12               	movwf	(sprintf@f+10)& (0+255),b
  1670   002E02                     
  1671                           ; BSR set to: 1
  1672   002E02  0E08               	movlw	low sprintf@f
  1673   002E04  0100               	movlb	0	; () banked
  1674   002E06  6FF6               	movwf	vfprintf@fp& (0+255),b
  1675   002E08  0E01               	movlw	high sprintf@f
  1676   002E0A  6FF7               	movwf	(vfprintf@fp+1)& (0+255),b
  1677   002E0C  C101  F0F8         	movff	sprintf@fmt,vfprintf@fmt
  1678   002E10  0E06               	movlw	low sprintf@ap
  1679   002E12  6FF9               	movwf	vfprintf@ap& (0+255),b
  1680   002E14  0E01               	movlw	high sprintf@ap
  1681   002E16  6FFA               	movwf	(vfprintf@ap+1)& (0+255),b
  1682   002E18  ECCC  F016         	call	_vfprintf	;wreg free
  1683   002E1C  0101               	movlb	1	; () banked
  1684   002E1E  5100               	movf	sprintf@s& (0+255),w,b
  1685   002E20  250B               	addwf	(sprintf@f+3)& (0+255),w,b
  1686   002E22  6ED9               	movwf	fsr2l,c
  1687   002E24  6ADA               	clrf	fsr2h,c
  1688   002E26  6ADF               	clrf	indf2,c
  1689   002E28                     
  1690                           ; BSR set to: 1
  1691   002E28  0012               	return		;funcret
  1692   002E2A                     __end_of_sprintf:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _SYSTEM_Initialize *****************
  1696 ;; Defined at:
  1697 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 12
  1718 ;; This function calls:
  1719 ;;		_ADC_Initialize
  1720 ;;		_EUSART_Initialize
  1721 ;;		_EXT_INT_Initialize
  1722 ;;		_I2C_Initialize
  1723 ;;		_INTERRUPT_Initialize
  1724 ;;		_OSCILLATOR_Initialize
  1725 ;;		_PIN_MANAGER_Initialize
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text2
  1732   00334A                     __ptext2:
  1733                           	callstack 0
  1734   00334A                     _SYSTEM_Initialize:
  1735                           	callstack 18
  1736   00334A                     
  1737                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1738   00334A  EC75  F01A         	call	_INTERRUPT_Initialize	;wreg free
  1739   00334E                     
  1740                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  1741   00334E  EC51  F01A         	call	_I2C_Initialize	;wreg free
  1742   003352                     
  1743                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  1744   003352  EC1A  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  1745   003356                     
  1746                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  1747   003356  EC8E  F01A         	call	_OSCILLATOR_Initialize	;wreg free
  1748   00335A                     
  1749                           ;mcc_generated_files/mcc.c: 57:     EXT_INT_Initialize();
  1750   00335A  ECE0  F017         	call	_EXT_INT_Initialize	;wreg free
  1751   00335E                     
  1752                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  1753   00335E  EC6C  F019         	call	_ADC_Initialize	;wreg free
  1754   003362                     
  1755                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  1756   003362  EC5B  F017         	call	_EUSART_Initialize	;wreg free
  1757   003366                     
  1758                           ;mcc_generated_files/mcc.c: 63:     (INTCONbits.GIEH = 1);
  1759   003366  8EF2               	bsf	242,7,c	;volatile
  1760   003368                     
  1761                           ;mcc_generated_files/mcc.c: 65:     (INTCONbits.GIEL = 1);
  1762   003368  8CF2               	bsf	242,6,c	;volatile
  1763   00336A                     
  1764                           ;mcc_generated_files/mcc.c: 67:     (INTCONbits.PEIE = 1);
  1765   00336A  8CF2               	bsf	242,6,c	;volatile
  1766   00336C  0012               	return		;funcret
  1767   00336E                     __end_of_SYSTEM_Initialize:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _PIN_MANAGER_Initialize *****************
  1771 ;; Defined at:
  1772 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; Hardware stack levels required when called: 10
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_SYSTEM_Initialize
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text3
  1801   003034                     __ptext3:
  1802                           	callstack 0
  1803   003034                     _PIN_MANAGER_Initialize:
  1804                           	callstack 19
  1805   003034                     
  1806                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1807   003034  0E00               	movlw	0
  1808   003036  6E8D               	movwf	141,c	;volatile
  1809                           
  1810                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1811   003038  0E00               	movlw	0
  1812   00303A  6E8C               	movwf	140,c	;volatile
  1813                           
  1814                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1815   00303C  0E00               	movlw	0
  1816   00303E  6E89               	movwf	137,c	;volatile
  1817                           
  1818                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1819   003040  0E00               	movlw	0
  1820   003042  6E8A               	movwf	138,c	;volatile
  1821                           
  1822                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1823   003044  0E00               	movlw	0
  1824   003046  6E8B               	movwf	139,c	;volatile
  1825                           
  1826                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1827   003048  0E07               	movlw	7
  1828   00304A  6E96               	movwf	150,c	;volatile
  1829                           
  1830                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xE7;
  1831   00304C  0EE7               	movlw	231
  1832   00304E  6E92               	movwf	146,c	;volatile
  1833   003050                     
  1834                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1835   003050  6893               	setf	147,c	;volatile
  1836                           
  1837                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1838   003052  0EBF               	movlw	191
  1839   003054  6E94               	movwf	148,c	;volatile
  1840                           
  1841                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1842   003056  0EFE               	movlw	254
  1843   003058  6E95               	movwf	149,c	;volatile
  1844   00305A                     
  1845                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  1846   00305A  687E               	setf	126,c	;volatile
  1847                           
  1848                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x0A;
  1849   00305C  0E0A               	movlw	10
  1850   00305E  6E7F               	movwf	127,c	;volatile
  1851                           
  1852                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  1853   003060  0E00               	movlw	0
  1854   003062  6E7C               	movwf	124,c	;volatile
  1855   003064                     
  1856                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  1857   003064  8EF1               	bsf	241,7,c	;volatile
  1858   003066  0012               	return		;funcret
  1859   003068                     __end_of_PIN_MANAGER_Initialize:
  1860                           	callstack 0
  1861                           
  1862 ;; *************** function _OSCILLATOR_Initialize *****************
  1863 ;; Defined at:
  1864 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;Total ram usage:        0 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 10
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_SYSTEM_Initialize
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text4
  1893   00351C                     __ptext4:
  1894                           	callstack 0
  1895   00351C                     _OSCILLATOR_Initialize:
  1896                           	callstack 19
  1897   00351C                     
  1898                           ;mcc_generated_files/mcc.c: 73:     OSCCON = 0x30;
  1899   00351C  0E30               	movlw	48
  1900   00351E  6ED3               	movwf	211,c	;volatile
  1901                           
  1902                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  1903   003520  0E00               	movlw	0
  1904   003522  6E9B               	movwf	155,c	;volatile
  1905   003524  0012               	return		;funcret
  1906   003526                     __end_of_OSCILLATOR_Initialize:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function _INTERRUPT_Initialize *****************
  1910 ;; Defined at:
  1911 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		None
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;Total ram usage:        0 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 10
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_SYSTEM_Initialize
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text5
  1940   0034EA                     __ptext5:
  1941                           	callstack 0
  1942   0034EA                     _INTERRUPT_Initialize:
  1943                           	callstack 19
  1944   0034EA                     
  1945                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  1946   0034EA  8ED0               	bsf	208,7,c	;volatile
  1947                           
  1948                           ;mcc_generated_files/interrupt_manager.c: 62:     INTCON3bits.INT1IP = 1;
  1949   0034EC  8CF0               	bsf	240,6,c	;volatile
  1950                           
  1951                           ;mcc_generated_files/interrupt_manager.c: 65:     INTCON3bits.INT2IP = 1;
  1952   0034EE  8EF0               	bsf	240,7,c	;volatile
  1953                           
  1954                           ;mcc_generated_files/interrupt_manager.c: 68:     IPR1bits.SSPIP = 1;
  1955   0034F0  869F               	bsf	159,3,c	;volatile
  1956                           
  1957                           ;mcc_generated_files/interrupt_manager.c: 71:     IPR2bits.BCLIP = 1;
  1958   0034F2  86A2               	bsf	162,3,c	;volatile
  1959                           
  1960                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.ADIP = 0;
  1961   0034F4  9C9F               	bcf	159,6,c	;volatile
  1962   0034F6  0012               	return		;funcret
  1963   0034F8                     __end_of_INTERRUPT_Initialize:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _I2C_Initialize *****************
  1967 ;; Defined at:
  1968 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 10
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_SYSTEM_Initialize
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text6
  1997   0034A2                     __ptext6:
  1998                           	callstack 0
  1999   0034A2                     _I2C_Initialize:
  2000                           	callstack 19
  2001   0034A2                     
  2002                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  2003   0034A2  0E00               	movlw	0
  2004   0034A4  6EC7               	movwf	199,c	;volatile
  2005                           
  2006                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  2007   0034A6  0E08               	movlw	8
  2008   0034A8  6EC6               	movwf	198,c	;volatile
  2009                           
  2010                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  2011   0034AA  0E00               	movlw	0
  2012   0034AC  6EC5               	movwf	197,c	;volatile
  2013                           
  2014                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x27;
  2015   0034AE  0E27               	movlw	39
  2016   0034B0  6EC8               	movwf	200,c	;volatile
  2017   0034B2                     
  2018                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2019   0034B2  9AC6               	bcf	198,5,c	;volatile
  2020   0034B4  0012               	return		;funcret
  2021   0034B6                     __end_of_I2C_Initialize:
  2022                           	callstack 0
  2023                           
  2024 ;; *************** function _EXT_INT_Initialize *****************
  2025 ;; Defined at:
  2026 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;Total ram usage:        0 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 11
  2047 ;; This function calls:
  2048 ;;		_INT0_SetInterruptHandler
  2049 ;;		_INT1_SetInterruptHandler
  2050 ;;		_INT2_SetInterruptHandler
  2051 ;; This function is called by:
  2052 ;;		_SYSTEM_Initialize
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text7
  2057   002FC0                     __ptext7:
  2058                           	callstack 0
  2059   002FC0                     _EXT_INT_Initialize:
  2060                           	callstack 18
  2061   002FC0                     
  2062                           ;mcc_generated_files/ext_int.c: 118:     (INTCONbits.INT0IF = 0);
  2063   002FC0  92F2               	bcf	242,1,c	;volatile
  2064                           
  2065                           ;mcc_generated_files/ext_int.c: 119:     (INTCON2bits.INTEDG0 = 1);
  2066   002FC2  8CF1               	bsf	241,6,c	;volatile
  2067   002FC4                     
  2068                           ;mcc_generated_files/ext_int.c: 121:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
  2069   002FC4  0E24               	movlw	low _INT0_DefaultInterruptHandler
  2070   002FC6  0100               	movlb	0	; () banked
  2071   002FC8  6FD8               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  2072   002FCA  0E36               	movlw	high _INT0_DefaultInterruptHandler
  2073   002FCC  6FD9               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2074   002FCE  EC9D  F01A         	call	_INT0_SetInterruptHandler	;wreg free
  2075   002FD2                     
  2076                           ;mcc_generated_files/ext_int.c: 122:     (INTCONbits.INT0IE = 1);
  2077   002FD2  88F2               	bsf	242,4,c	;volatile
  2078   002FD4                     
  2079                           ;mcc_generated_files/ext_int.c: 127:     (INTCON3bits.INT1IF = 0);
  2080   002FD4  90F0               	bcf	240,0,c	;volatile
  2081   002FD6                     
  2082                           ;mcc_generated_files/ext_int.c: 128:     (INTCON2bits.INTEDG1 = 1);
  2083   002FD6  8AF1               	bsf	241,5,c	;volatile
  2084                           
  2085                           ;mcc_generated_files/ext_int.c: 130:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  2086   002FD8  0E22               	movlw	low _INT1_DefaultInterruptHandler
  2087   002FDA  0100               	movlb	0	; () banked
  2088   002FDC  6FD8               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  2089   002FDE  0E36               	movlw	high _INT1_DefaultInterruptHandler
  2090   002FE0  6FD9               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2091   002FE2  EC98  F01A         	call	_INT1_SetInterruptHandler	;wreg free
  2092   002FE6                     
  2093                           ;mcc_generated_files/ext_int.c: 131:     (INTCON3bits.INT1IE = 1);
  2094   002FE6  86F0               	bsf	240,3,c	;volatile
  2095   002FE8                     
  2096                           ;mcc_generated_files/ext_int.c: 136:     (INTCON3bits.INT2IF = 0);
  2097   002FE8  92F0               	bcf	240,1,c	;volatile
  2098   002FEA                     
  2099                           ;mcc_generated_files/ext_int.c: 137:     (INTCON2bits.INTEDG2 = 1);
  2100   002FEA  88F1               	bsf	241,4,c	;volatile
  2101                           
  2102                           ;mcc_generated_files/ext_int.c: 139:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  2103   002FEC  0E20               	movlw	low _INT2_DefaultInterruptHandler
  2104   002FEE  0100               	movlb	0	; () banked
  2105   002FF0  6FD8               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  2106   002FF2  0E36               	movlw	high _INT2_DefaultInterruptHandler
  2107   002FF4  6FD9               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2108   002FF6  EC93  F01A         	call	_INT2_SetInterruptHandler	;wreg free
  2109   002FFA                     
  2110                           ;mcc_generated_files/ext_int.c: 140:     (INTCON3bits.INT2IE = 1);
  2111   002FFA  88F0               	bsf	240,4,c	;volatile
  2112   002FFC  0012               	return		;funcret
  2113   002FFE                     __end_of_EXT_INT_Initialize:
  2114                           	callstack 0
  2115                           
  2116 ;; *************** function _INT2_SetInterruptHandler *****************
  2117 ;; Defined at:
  2118 ;;		line 104 in file "mcc_generated_files/ext_int.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2121 ;;		 -> manual_Doorlight(1), INT2_DefaultInterruptHandler(1), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;Total ram usage:        2 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 10
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_EXT_INT_Initialize
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text8
  2149   003526                     __ptext8:
  2150                           	callstack 0
  2151   003526                     _INT2_SetInterruptHandler:
  2152                           	callstack 18
  2153   003526                     
  2154                           ;mcc_generated_files/ext_int.c: 105:     INT2_InterruptHandler = InterruptHandler;
  2155   003526  C0D8  F038         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2156   00352A  C0D9  F039         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2157   00352E  0012               	return		;funcret
  2158   003530                     __end_of_INT2_SetInterruptHandler:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _INT1_SetInterruptHandler *****************
  2162 ;; Defined at:
  2163 ;;		line 78 in file "mcc_generated_files/ext_int.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2166 ;;		 -> manual_homelight(1), INT1_DefaultInterruptHandler(1), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2178 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;Total ram usage:        2 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 10
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_EXT_INT_Initialize
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text9
  2194   003530                     __ptext9:
  2195                           	callstack 0
  2196   003530                     _INT1_SetInterruptHandler:
  2197                           	callstack 18
  2198   003530                     
  2199                           ;mcc_generated_files/ext_int.c: 79:     INT1_InterruptHandler = InterruptHandler;
  2200   003530  C0D8  F03A         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2201   003534  C0D9  F03B         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2202   003538  0012               	return		;funcret
  2203   00353A                     __end_of_INT1_SetInterruptHandler:
  2204                           	callstack 0
  2205                           
  2206 ;; *************** function _INT0_SetInterruptHandler *****************
  2207 ;; Defined at:
  2208 ;;		line 52 in file "mcc_generated_files/ext_int.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2211 ;;		 -> manual_Override(1), INT0_DefaultInterruptHandler(1), 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;Total ram usage:        2 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 10
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_EXT_INT_Initialize
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text10
  2239   00353A                     __ptext10:
  2240                           	callstack 0
  2241   00353A                     _INT0_SetInterruptHandler:
  2242                           	callstack 18
  2243   00353A                     
  2244                           ;mcc_generated_files/ext_int.c: 53:     INT0_InterruptHandler = InterruptHandler;
  2245   00353A  C0D8  F03C         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2246   00353E  C0D9  F03D         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2247   003542  0012               	return		;funcret
  2248   003544                     __end_of_INT0_SetInterruptHandler:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _EUSART_Initialize *****************
  2252 ;; Defined at:
  2253 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 11
  2274 ;; This function calls:
  2275 ;;		_EUSART_SetErrorHandler
  2276 ;;		_EUSART_SetFramingErrorHandler
  2277 ;;		_EUSART_SetOverrunErrorHandler
  2278 ;; This function is called by:
  2279 ;;		_SYSTEM_Initialize
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text11
  2284   002EB6                     __ptext11:
  2285                           	callstack 0
  2286   002EB6                     _EUSART_Initialize:
  2287                           	callstack 18
  2288   002EB6                     
  2289                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  2290   002EB6  0E08               	movlw	8
  2291   002EB8  6EB8               	movwf	184,c	;volatile
  2292                           
  2293                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  2294   002EBA  0E90               	movlw	144
  2295   002EBC  6EAB               	movwf	171,c	;volatile
  2296                           
  2297                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  2298   002EBE  0E24               	movlw	36
  2299   002EC0  6EAC               	movwf	172,c	;volatile
  2300                           
  2301                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xA0;
  2302   002EC2  0EA0               	movlw	160
  2303   002EC4  6EAF               	movwf	175,c	;volatile
  2304                           
  2305                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x01;
  2306   002EC6  0E01               	movlw	1
  2307   002EC8  6EB0               	movwf	176,c	;volatile
  2308   002ECA                     
  2309                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2310   002ECA  0E00               	movlw	0
  2311   002ECC  0100               	movlb	0	; () banked
  2312   002ECE  6FD8               	movwf	EUSART_SetFramingErrorHandler@interruptHandler& (0+255),b
  2313   002ED0  0E00               	movlw	0
  2314   002ED2  6FD9               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  2315   002ED4  ECA7  F01A         	call	_EUSART_SetFramingErrorHandler	;wreg free
  2316   002ED8                     
  2317                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2318   002ED8  0E00               	movlw	0
  2319   002EDA  0100               	movlb	0	; () banked
  2320   002EDC  6FD8               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler& (0+255),b
  2321   002EDE  0E00               	movlw	0
  2322   002EE0  6FD9               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  2323   002EE2  ECA2  F01A         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  2324   002EE6                     
  2325                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2326   002EE6  0E00               	movlw	0
  2327   002EE8  0100               	movlb	0	; () banked
  2328   002EEA  6FD8               	movwf	EUSART_SetErrorHandler@interruptHandler& (0+255),b
  2329   002EEC  0E00               	movlw	0
  2330   002EEE  6FD9               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)& (0+255),b
  2331   002EF0  ECAC  F01A         	call	_EUSART_SetErrorHandler	;wreg free
  2332   002EF4                     
  2333                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  2334   002EF4  0E00               	movlw	0
  2335   002EF6  6E31               	movwf	_eusartRxLastError^0,c	;volatile
  2336   002EF8  0012               	return		;funcret
  2337   002EFA                     __end_of_EUSART_Initialize:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2341 ;; Defined at:
  2342 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2345 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 10
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_EUSART_Initialize
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text12
  2372   003544                     __ptext12:
  2373                           	callstack 0
  2374   003544                     _EUSART_SetOverrunErrorHandler:
  2375                           	callstack 18
  2376   003544                     
  2377                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  2378   003544  C0D8  F146         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  2379   003548  C0D9  F147         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  2380   00354C  0012               	return		;funcret
  2381   00354E                     __end_of_EUSART_SetOverrunErrorHandler:
  2382                           	callstack 0
  2383                           
  2384 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2385 ;; Defined at:
  2386 ;;		line 157 in file "mcc_generated_files/eusart.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2389 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;Total ram usage:        2 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 10
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_EUSART_Initialize
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text13
  2416   00354E                     __ptext13:
  2417                           	callstack 0
  2418   00354E                     _EUSART_SetFramingErrorHandler:
  2419                           	callstack 18
  2420   00354E                     
  2421                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  2422   00354E  C0D8  F0FE         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  2423   003552  C0D9  F0FF         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  2424   003556  0012               	return		;funcret
  2425   003558                     __end_of_EUSART_SetFramingErrorHandler:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function _EUSART_SetErrorHandler *****************
  2429 ;; Defined at:
  2430 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2433 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;Total ram usage:        2 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 10
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_EUSART_Initialize
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text14
  2460   003558                     __ptext14:
  2461                           	callstack 0
  2462   003558                     _EUSART_SetErrorHandler:
  2463                           	callstack 18
  2464   003558                     
  2465                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  2466   003558  C0D8  F144         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  2467   00355C  C0D9  F145         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  2468   003560  0012               	return		;funcret
  2469   003562                     __end_of_EUSART_SetErrorHandler:
  2470                           	callstack 0
  2471                           
  2472 ;; *************** function _ADC_Initialize *****************
  2473 ;; Defined at:
  2474 ;;		line 62 in file "mcc_generated_files/adc.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 11
  2495 ;; This function calls:
  2496 ;;		_ADC_SetInterruptHandler
  2497 ;; This function is called by:
  2498 ;;		_SYSTEM_Initialize
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text15
  2503   0032D8                     __ptext15:
  2504                           	callstack 0
  2505   0032D8                     _ADC_Initialize:
  2506                           	callstack 18
  2507   0032D8                     
  2508                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  2509   0032D8  0E00               	movlw	0
  2510   0032DA  6EC1               	movwf	193,c	;volatile
  2511                           
  2512                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x04;
  2513   0032DC  0E04               	movlw	4
  2514   0032DE  6EC0               	movwf	192,c	;volatile
  2515                           
  2516                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  2517   0032E0  0E00               	movlw	0
  2518   0032E2  6EC3               	movwf	195,c	;volatile
  2519                           
  2520                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  2521   0032E4  0E00               	movlw	0
  2522   0032E6  6EC4               	movwf	196,c	;volatile
  2523                           
  2524                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  2525   0032E8  0E01               	movlw	1
  2526   0032EA  6EC2               	movwf	194,c	;volatile
  2527   0032EC                     
  2528                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  2529   0032EC  8C9D               	bsf	157,6,c	;volatile
  2530   0032EE                     
  2531                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  2532   0032EE  0E1E               	movlw	low _ADC_DefaultInterruptHandler
  2533   0032F0  0100               	movlb	0	; () banked
  2534   0032F2  6FD8               	movwf	ADC_SetInterruptHandler@InterruptHandler& (0+255),b
  2535   0032F4  0E36               	movlw	high _ADC_DefaultInterruptHandler
  2536   0032F6  6FD9               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2537   0032F8  ECB1  F01A         	call	_ADC_SetInterruptHandler	;wreg free
  2538   0032FC  0012               	return		;funcret
  2539   0032FE                     __end_of_ADC_Initialize:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _ADC_SetInterruptHandler *****************
  2543 ;; Defined at:
  2544 ;;		line 151 in file "mcc_generated_files/adc.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2547 ;;		 -> lightSwitch(1), ADC_DefaultInterruptHandler(1), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2559 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;Total ram usage:        2 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 10
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_ADC_Initialize
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text16
  2575   003562                     __ptext16:
  2576                           	callstack 0
  2577   003562                     _ADC_SetInterruptHandler:
  2578                           	callstack 18
  2579   003562                     
  2580                           ;mcc_generated_files/adc.c: 152:     ADC_InterruptHandler = InterruptHandler;
  2581   003562  C0D8  F03E         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
  2582   003566  C0D9  F03F         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
  2583   00356A  0012               	return		;funcret
  2584   00356C                     __end_of_ADC_SetInterruptHandler:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _ReadTemp *****************
  2588 ;; Defined at:
  2589 ;;		line 3 in file "AECUL/TC74/TC74.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  addr            1    wreg     unsigned char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  addr            1   12[BANK0 ] unsigned char 
  2594 ;;  temp            1   13[BANK0 ] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      unsigned char 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;Total ram usage:        2 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 14
  2611 ;; This function calls:
  2612 ;;		_I2C_Read1ByteRegister
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text17
  2619   0033FC                     __ptext17:
  2620                           	callstack 0
  2621   0033FC                     _ReadTemp:
  2622                           	callstack 16
  2623                           
  2624                           ;incstack = 0
  2625                           ;ReadTemp@addr stored from wreg
  2626   0033FC  0100               	movlb	0	; () banked
  2627   0033FE  6FE4               	movwf	ReadTemp@addr& (0+255),b
  2628   003400                     
  2629                           ;AECUL/TC74/TC74.c: 5:     temp = I2C_Read1ByteRegister(addr,0x00);
  2630   003400  0E00               	movlw	0
  2631   003402  0100               	movlb	0	; () banked
  2632   003404  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  2633   003406  51E4               	movf	ReadTemp@addr& (0+255),w,b
  2634   003408  ECB7  F013         	call	_I2C_Read1ByteRegister
  2635   00340C  0100               	movlb	0	; () banked
  2636   00340E  6FE5               	movwf	ReadTemp@temp& (0+255),b
  2637   003410                     
  2638                           ; BSR set to: 0
  2639                           ;AECUL/TC74/TC74.c: 6:     return temp;
  2640   003410  51E5               	movf	ReadTemp@temp& (0+255),w,b
  2641   003412                     
  2642                           ; BSR set to: 0
  2643   003412  0012               	return		;funcret
  2644   003414                     __end_of_ReadTemp:
  2645                           	callstack 0
  2646                           
  2647 ;; *************** function _PrintTimeUART *****************
  2648 ;; Defined at:
  2649 ;;		line 50 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  str             1   21[BANK0 ] PTR unsigned char 
  2654 ;;		 -> timestr(10), 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;Total ram usage:        1 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 17
  2671 ;; This function calls:
  2672 ;;		_EUSART_SendString
  2673 ;;		_TimetoString
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text18
  2680   0032FE                     __ptext18:
  2681                           	callstack 0
  2682   0032FE                     _PrintTimeUART:
  2683                           	callstack 13
  2684   0032FE                     
  2685                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 51:     uint8_t * str = TimetoString();
  2686   0032FE  EC15  F017         	call	_TimetoString	;wreg free
  2687   003302  0100               	movlb	0	; () banked
  2688   003304  6FED               	movwf	PrintTimeUART@str& (0+255),b
  2689   003306                     
  2690                           ; BSR set to: 0
  2691                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 52:     EUSART_SendString((uint8_t*)"Time:
      +                           ");
  2692   003306  0E95               	movlw	low STR_2
  2693   003308  6FDC               	movwf	EUSART_SendString@str& (0+255),b
  2694   00330A  51DC               	movf	EUSART_SendString@str& (0+255),w,b
  2695   00330C  A4D8               	btfss	status,2,c
  2696   00330E  0E10               	movlw	high __smallconst
  2697   003310  6FDD               	movwf	(EUSART_SendString@str+1)& (0+255),b
  2698   003312  EC16  F016         	call	_EUSART_SendString	;wreg free
  2699   003316                     
  2700                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 53:     EUSART_SendString(str);
  2701   003316  C0ED  F0DC         	movff	PrintTimeUART@str,EUSART_SendString@str
  2702   00331A  0100               	movlb	0	; () banked
  2703   00331C  6BDD               	clrf	(EUSART_SendString@str+1)& (0+255),b
  2704   00331E  EC16  F016         	call	_EUSART_SendString	;wreg free
  2705   003322  0012               	return		;funcret
  2706   003324                     __end_of_PrintTimeUART:
  2707                           	callstack 0
  2708                           
  2709 ;; *************** function _TimetoString *****************
  2710 ;; Defined at:
  2711 ;;		line 57 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      PTR unsigned char 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;Total ram usage:        2 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; Hardware stack levels required when called: 16
  2732 ;; This function calls:
  2733 ;;		_TimeArray
  2734 ;; This function is called by:
  2735 ;;		_PrintTimeUART
  2736 ;;		_main
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text19
  2741   002E2A                     __ptext19:
  2742                           	callstack 0
  2743   002E2A                     _TimetoString:
  2744                           	callstack 14
  2745   002E2A                     
  2746                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 59:     TimeArray();
  2747   002E2A  EC34  F018         	call	_TimeArray	;wreg free
  2748   002E2E                     
  2749                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 60:     timestr[0] = ((_Time[2] >> 4) + '0
      +                          ');
  2750   002E2E  3834               	swapf	(__Time+2)^0,w,c
  2751   002E30  0B0F               	andlw	15
  2752   002E32  0F30               	addlw	48
  2753   002E34  0100               	movlb	0	; () banked
  2754   002E36  6F9E               	movwf	_timestr& (0+255),b
  2755   002E38                     
  2756                           ; BSR set to: 0
  2757                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 61:     timestr[1] = ((_Time[2] & 0x0F) + 
      +                          '0');
  2758   002E38  5034               	movf	(__Time+2)^0,w,c
  2759   002E3A  0B0F               	andlw	15
  2760   002E3C  0F30               	addlw	48
  2761   002E3E  6F9F               	movwf	(_timestr+1)& (0+255),b
  2762   002E40                     
  2763                           ; BSR set to: 0
  2764                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 62:     timestr[2] = ':';
  2765   002E40  0E3A               	movlw	58
  2766   002E42  6FA0               	movwf	(_timestr+2)& (0+255),b
  2767   002E44                     
  2768                           ; BSR set to: 0
  2769                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 63:     timestr[3] = ((_Time[1] >> 4) + '0
      +                          ');
  2770   002E44  3833               	swapf	(__Time+1)^0,w,c
  2771   002E46  0B0F               	andlw	15
  2772   002E48  0F30               	addlw	48
  2773   002E4A  6FA1               	movwf	(_timestr+3)& (0+255),b
  2774   002E4C                     
  2775                           ; BSR set to: 0
  2776                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 64:     timestr[4] = ((_Time[1] & 0x0F) + 
      +                          '0');
  2777   002E4C  5033               	movf	(__Time+1)^0,w,c
  2778   002E4E  0B0F               	andlw	15
  2779   002E50  0F30               	addlw	48
  2780   002E52  6FA2               	movwf	(_timestr+4)& (0+255),b
  2781   002E54                     
  2782                           ; BSR set to: 0
  2783                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 65:     timestr[5] = ':';
  2784   002E54  0E3A               	movlw	58
  2785   002E56  6FA3               	movwf	(_timestr+5)& (0+255),b
  2786   002E58                     
  2787                           ; BSR set to: 0
  2788                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 66:     timestr[6] = ((_Time[0] >> 4) + '0
      +                          ');
  2789   002E58  3832               	swapf	__Time^0,w,c
  2790   002E5A  0B0F               	andlw	15
  2791   002E5C  0F30               	addlw	48
  2792   002E5E  6FA4               	movwf	(_timestr+6)& (0+255),b
  2793   002E60                     
  2794                           ; BSR set to: 0
  2795                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 67:     timestr[7] = ((_Time[0] & 0x0F) + 
      +                          '0');
  2796   002E60  5032               	movf	__Time^0,w,c
  2797   002E62  0B0F               	andlw	15
  2798   002E64  0F30               	addlw	48
  2799   002E66  6FA5               	movwf	(_timestr+7)& (0+255),b
  2800   002E68                     
  2801                           ; BSR set to: 0
  2802                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 68:     timestr[8] = '\r';
  2803   002E68  0E0D               	movlw	13
  2804   002E6A  6FA6               	movwf	(_timestr+8)& (0+255),b
  2805   002E6C                     
  2806                           ; BSR set to: 0
  2807                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 70:     return timestr;
  2808   002E6C  0E9E               	movlw	_timestr& (0+255)
  2809   002E6E                     
  2810                           ; BSR set to: 0
  2811   002E6E  0012               	return		;funcret
  2812   002E70                     __end_of_TimetoString:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _TimeArray *****************
  2816 ;; Defined at:
  2817 ;;		line 28 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      PTR unsigned char 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;Total ram usage:        0 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 15
  2838 ;; This function calls:
  2839 ;;		_GetDataAndTime
  2840 ;; This function is called by:
  2841 ;;		_TimetoString
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text20
  2846   003068                     __ptext20:
  2847                           	callstack 0
  2848   003068                     _TimeArray:
  2849                           	callstack 14
  2850   003068                     
  2851                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 29:     if (dt.init_read != 1){
  2852   003068  B027               	btfsc	(_dt+6)^0,0,c
  2853   00306A  EF39  F018         	goto	u3791
  2854   00306E  EF3B  F018         	goto	u3790
  2855   003072                     u3791:
  2856   003072  EF44  F018         	goto	l6303
  2857   003076                     u3790:
  2858   003076                     
  2859                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 30:         dt = GetDataAndTime();
  2860   003076  ECDE  F014         	call	_GetDataAndTime	;wreg free
  2861   00307A  EE20  F021         	lfsr	2,_dt
  2862   00307E  0E06               	movlw	6
  2863   003080                     u3801:
  2864   003080  CFEB FFDB          	movff	plusw0,plusw2
  2865   003084  06E8               	decf	wreg,f,c
  2866   003086  E2FC               	bc	u3801
  2867   003088                     l6303:
  2868                           
  2869                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 32:     _Time[0] = dt.hour;
  2870   003088  C023  F032         	movff	_dt+2,__Time
  2871   00308C                     
  2872                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 33:     _Time[1] = dt.minute;
  2873   00308C  C022  F033         	movff	_dt+1,__Time+1
  2874   003090                     
  2875                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 34:     _Time[2] = dt.second;
  2876   003090  C021  F034         	movff	_dt,__Time+2
  2877   003094  0012               	return		;funcret
  2878   003096                     __end_of_TimeArray:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _PrintDateUART *****************
  2882 ;; Defined at:
  2883 ;;		line 45 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  str             1   21[BANK0 ] PTR unsigned char 
  2888 ;;		 -> datestr(10), 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;Total ram usage:        1 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 17
  2905 ;; This function calls:
  2906 ;;		_DatetoString
  2907 ;;		_EUSART_SendString
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text21
  2914   003324                     __ptext21:
  2915                           	callstack 0
  2916   003324                     _PrintDateUART:
  2917                           	callstack 13
  2918   003324                     
  2919                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 46:     uint8_t * str = DatetoString();
  2920   003324  EC38  F017         	call	_DatetoString	;wreg free
  2921   003328  0100               	movlb	0	; () banked
  2922   00332A  6FED               	movwf	PrintDateUART@str& (0+255),b
  2923   00332C                     
  2924                           ; BSR set to: 0
  2925                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 47:     EUSART_SendString((uint8_t*)"DATE:
      +                           ");
  2926   00332C  0E8E               	movlw	low STR_1
  2927   00332E  6FDC               	movwf	EUSART_SendString@str& (0+255),b
  2928   003330  51DC               	movf	EUSART_SendString@str& (0+255),w,b
  2929   003332  A4D8               	btfss	status,2,c
  2930   003334  0E10               	movlw	high __smallconst
  2931   003336  6FDD               	movwf	(EUSART_SendString@str+1)& (0+255),b
  2932   003338  EC16  F016         	call	_EUSART_SendString	;wreg free
  2933   00333C                     
  2934                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 48:     EUSART_SendString(str);
  2935   00333C  C0ED  F0DC         	movff	PrintDateUART@str,EUSART_SendString@str
  2936   003340  0100               	movlb	0	; () banked
  2937   003342  6BDD               	clrf	(EUSART_SendString@str+1)& (0+255),b
  2938   003344  EC16  F016         	call	_EUSART_SendString	;wreg free
  2939   003348  0012               	return		;funcret
  2940   00334A                     __end_of_PrintDateUART:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _EUSART_SendString *****************
  2944 ;; Defined at:
  2945 ;;		line 38 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  str             2    4[BANK0 ] PTR unsigned char 
  2948 ;;		 -> datestr(10), timestr(10), STR_2(7), STR_1(7), 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  len             2    6[BANK0 ] unsigned short 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2960 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;Total ram usage:        4 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 11
  2967 ;; This function calls:
  2968 ;;		_EUSART_Write
  2969 ;;		_strlen
  2970 ;; This function is called by:
  2971 ;;		_PrintDateUART
  2972 ;;		_PrintTimeUART
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text22
  2977   002C2C                     __ptext22:
  2978                           	callstack 0
  2979   002C2C                     _EUSART_SendString:
  2980                           	callstack 18
  2981   002C2C                     
  2982                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 39:     uint16_t len = strlen((char *)str)
      +                          ;
  2983   002C2C  C0DC  F0D8         	movff	EUSART_SendString@str,strlen@s
  2984   002C30  C0DD  F0D9         	movff	EUSART_SendString@str+1,strlen@s+1
  2985   002C34  ECA2  F016         	call	_strlen	;wreg free
  2986   002C38  C0D8  F0DE         	movff	?_strlen,EUSART_SendString@len
  2987   002C3C  C0D9  F0DF         	movff	?_strlen+1,EUSART_SendString@len+1
  2988                           
  2989                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 40:     while(len--){
  2990   002C40  EF38  F016         	goto	l6537
  2991   002C44                     l6533:
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 41:         EUSART_Write(*str++);
  2995   002C44  C0DC  FFF6         	movff	EUSART_SendString@str,tblptrl
  2996   002C48  C0DD  FFF7         	movff	EUSART_SendString@str+1,tblptrh
  2997   002C4C  0E00               	movlw	low (__smallconst shr (0+16))
  2998   002C4E  6EF8               	movwf	tblptru,c
  2999   002C50  0E0F               	movlw	(high __ramtop+-1)
  3000   002C52  64F7               	cpfsgt	tblptrh,c
  3001   002C54  D003               	bra	u3987
  3002   002C56  0008               	tblrd		*
  3003   002C58  50F5               	movf	tablat,w,c
  3004   002C5A  D005               	bra	u3980
  3005   002C5C                     u3987:
  3006   002C5C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3007   002C60  CFF7 FFEA          	movff	tblptrh,fsr0h
  3008   002C64  50EF               	movf	indf0,w,c
  3009   002C66                     u3980:
  3010   002C66  EC0A  F01A         	call	_EUSART_Write
  3011   002C6A  0100               	movlb	0	; () banked
  3012   002C6C  4BDC               	infsnz	EUSART_SendString@str& (0+255),f,b
  3013   002C6E  2BDD               	incf	(EUSART_SendString@str+1)& (0+255),f,b
  3014   002C70                     l6537:
  3015                           
  3016                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 40:     while(len--){
  3017   002C70  0100               	movlb	0	; () banked
  3018   002C72  07DE               	decf	EUSART_SendString@len& (0+255),f,b
  3019   002C74  A0D8               	btfss	status,0,c
  3020   002C76  07DF               	decf	(EUSART_SendString@len+1)& (0+255),f,b
  3021   002C78  29DE               	incf	EUSART_SendString@len& (0+255),w,b
  3022   002C7A  E106               	bnz	u3991
  3023   002C7C  29DF               	incf	(EUSART_SendString@len+1)& (0+255),w,b
  3024   002C7E  A4D8               	btfss	status,2,c
  3025   002C80  EF44  F016         	goto	u3991
  3026   002C84  EF46  F016         	goto	u3990
  3027   002C88                     u3991:
  3028   002C88  EF22  F016         	goto	l6533
  3029   002C8C                     u3990:
  3030   002C8C                     
  3031                           ; BSR set to: 0
  3032   002C8C  0012               	return		;funcret
  3033   002C8E                     __end_of_EUSART_SendString:
  3034                           	callstack 0
  3035                           
  3036 ;; *************** function _EUSART_Write *****************
  3037 ;; Defined at:
  3038 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  txData          1    wreg     unsigned char 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  txData          1    0[BANK0 ] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;Total ram usage:        1 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 10
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_EUSART_SendString
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text23
  3067   003414                     __ptext23:
  3068                           	callstack 0
  3069   003414                     _EUSART_Write:
  3070                           	callstack 18
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;incstack = 0
  3074                           ;EUSART_Write@txData stored from wreg
  3075   003414  0100               	movlb	0	; () banked
  3076   003416  6FD8               	movwf	EUSART_Write@txData& (0+255),b
  3077   003418                     l370:
  3078                           
  3079                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
  3080   003418  A89E               	btfss	158,4,c	;volatile
  3081   00341A  EF11  F01A         	goto	u3831
  3082   00341E  EF13  F01A         	goto	u3830
  3083   003422                     u3831:
  3084   003422  EF0C  F01A         	goto	l370
  3085   003426                     u3830:
  3086   003426                     
  3087                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3088   003426  C0D8  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  3089   00342A  0012               	return		;funcret
  3090   00342C                     __end_of_EUSART_Write:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _DatetoString *****************
  3094 ;; Defined at:
  3095 ;;		line 72 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      PTR unsigned char 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;Total ram usage:        2 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; Hardware stack levels required when called: 16
  3116 ;; This function calls:
  3117 ;;		_DateArray
  3118 ;; This function is called by:
  3119 ;;		_PrintDateUART
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text24
  3125   002E70                     __ptext24:
  3126                           	callstack 0
  3127   002E70                     _DatetoString:
  3128                           	callstack 13
  3129   002E70                     
  3130                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 74:     DateArray();
  3131   002E70  EC4B  F018         	call	_DateArray	;wreg free
  3132   002E74                     
  3133                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 75:     datestr[0] = ((_Date[2] >> 4) + '0
      +                          ');
  3134   002E74  3837               	swapf	(__Date+2)^0,w,c
  3135   002E76  0B0F               	andlw	15
  3136   002E78  0F30               	addlw	48
  3137   002E7A  0100               	movlb	0	; () banked
  3138   002E7C  6F94               	movwf	_datestr& (0+255),b
  3139   002E7E                     
  3140                           ; BSR set to: 0
  3141                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 76:     datestr[1] = ((_Date[2] & 0x0F) + 
      +                          '0');
  3142   002E7E  5037               	movf	(__Date+2)^0,w,c
  3143   002E80  0B0F               	andlw	15
  3144   002E82  0F30               	addlw	48
  3145   002E84  6F95               	movwf	(_datestr+1)& (0+255),b
  3146   002E86                     
  3147                           ; BSR set to: 0
  3148                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 77:     datestr[2] = '/';
  3149   002E86  0E2F               	movlw	47
  3150   002E88  6F96               	movwf	(_datestr+2)& (0+255),b
  3151   002E8A                     
  3152                           ; BSR set to: 0
  3153                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 78:     datestr[3] = ((_Date[1] >> 4) + '0
      +                          ');
  3154   002E8A  3836               	swapf	(__Date+1)^0,w,c
  3155   002E8C  0B0F               	andlw	15
  3156   002E8E  0F30               	addlw	48
  3157   002E90  6F97               	movwf	(_datestr+3)& (0+255),b
  3158   002E92                     
  3159                           ; BSR set to: 0
  3160                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 79:     datestr[4] = ((_Date[1] & 0x0F) + 
      +                          '0');
  3161   002E92  5036               	movf	(__Date+1)^0,w,c
  3162   002E94  0B0F               	andlw	15
  3163   002E96  0F30               	addlw	48
  3164   002E98  6F98               	movwf	(_datestr+4)& (0+255),b
  3165   002E9A                     
  3166                           ; BSR set to: 0
  3167                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 80:     datestr[5] = '/';
  3168   002E9A  0E2F               	movlw	47
  3169   002E9C  6F99               	movwf	(_datestr+5)& (0+255),b
  3170   002E9E                     
  3171                           ; BSR set to: 0
  3172                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 81:     datestr[6] = ((_Date[0] >> 4) + '0
      +                          ');
  3173   002E9E  3835               	swapf	__Date^0,w,c
  3174   002EA0  0B0F               	andlw	15
  3175   002EA2  0F30               	addlw	48
  3176   002EA4  6F9A               	movwf	(_datestr+6)& (0+255),b
  3177   002EA6                     
  3178                           ; BSR set to: 0
  3179                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 82:     datestr[7] = ((_Date[0] & 0x0F) + 
      +                          '0');
  3180   002EA6  5035               	movf	__Date^0,w,c
  3181   002EA8  0B0F               	andlw	15
  3182   002EAA  0F30               	addlw	48
  3183   002EAC  6F9B               	movwf	(_datestr+7)& (0+255),b
  3184   002EAE                     
  3185                           ; BSR set to: 0
  3186                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 83:     datestr[8] = '\r';
  3187   002EAE  0E0D               	movlw	13
  3188   002EB0  6F9C               	movwf	(_datestr+8)& (0+255),b
  3189   002EB2                     
  3190                           ; BSR set to: 0
  3191                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 85:     return datestr;
  3192   002EB2  0E94               	movlw	_datestr& (0+255)
  3193   002EB4                     
  3194                           ; BSR set to: 0
  3195   002EB4  0012               	return		;funcret
  3196   002EB6                     __end_of_DatetoString:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function _DateArray *****************
  3200 ;; Defined at:
  3201 ;;		line 18 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      PTR unsigned char 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 15
  3222 ;; This function calls:
  3223 ;;		_GetDataAndTime
  3224 ;; This function is called by:
  3225 ;;		_DatetoString
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text25
  3230   003096                     __ptext25:
  3231                           	callstack 0
  3232   003096                     _DateArray:
  3233                           	callstack 13
  3234   003096                     
  3235                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 19:     if (dt.init_read != 1){
  3236   003096  B027               	btfsc	(_dt+6)^0,0,c
  3237   003098  EF50  F018         	goto	u3771
  3238   00309C  EF52  F018         	goto	u3770
  3239   0030A0                     u3771:
  3240   0030A0  EF5B  F018         	goto	l6291
  3241   0030A4                     u3770:
  3242   0030A4                     
  3243                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 20:         dt = GetDataAndTime();
  3244   0030A4  ECDE  F014         	call	_GetDataAndTime	;wreg free
  3245   0030A8  EE20  F021         	lfsr	2,_dt
  3246   0030AC  0E06               	movlw	6
  3247   0030AE                     u3781:
  3248   0030AE  CFEB FFDB          	movff	plusw0,plusw2
  3249   0030B2  06E8               	decf	wreg,f,c
  3250   0030B4  E2FC               	bc	u3781
  3251   0030B6                     l6291:
  3252                           
  3253                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 22:     _Date[0] = dt.year;
  3254   0030B6  C026  F035         	movff	_dt+5,__Date
  3255   0030BA                     
  3256                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 23:     _Date[1] = dt.month;
  3257   0030BA  C025  F036         	movff	_dt+4,__Date+1
  3258   0030BE                     
  3259                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 24:     _Date[2] = dt.day;
  3260   0030BE  C024  F037         	movff	_dt+3,__Date+2
  3261   0030C2  0012               	return		;funcret
  3262   0030C4                     __end_of_DateArray:
  3263                           	callstack 0
  3264                           
  3265 ;; *************** function _GetDataAndTime *****************
  3266 ;; Defined at:
  3267 ;;		line 7 in file "AECUL/RealTimerClockDS1307/RealTimerClock.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;		None
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  7   12[BANK0 ] struct .
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3281 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;Total ram usage:        7 bytes
  3286 ;; Hardware stack levels used: 1
  3287 ;; Hardware stack levels required when called: 14
  3288 ;; This function calls:
  3289 ;;		_I2C_Read1ByteRegister
  3290 ;; This function is called by:
  3291 ;;		_DateArray
  3292 ;;		_TimeArray
  3293 ;;		_main
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text26
  3298   0029BC                     __ptext26:
  3299                           	callstack 0
  3300   0029BC                     _GetDataAndTime:
  3301                           	callstack 14
  3302   0029BC                     
  3303                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 8:     dt.second = I2C_Read1ByteRegister(0
      +                          x68, 0x00);
  3304   0029BC  0E00               	movlw	0
  3305   0029BE  0100               	movlb	0	; () banked
  3306   0029C0  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3307   0029C2  0E68               	movlw	104
  3308   0029C4  ECB7  F013         	call	_I2C_Read1ByteRegister
  3309   0029C8  6E21               	movwf	_dt^0,c
  3310                           
  3311                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 9:     dt.minute = I2C_Read1ByteRegister(0
      +                          x68, 0x01);
  3312   0029CA  0E01               	movlw	1
  3313   0029CC  0100               	movlb	0	; () banked
  3314   0029CE  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3315   0029D0  0E68               	movlw	104
  3316   0029D2  ECB7  F013         	call	_I2C_Read1ByteRegister
  3317   0029D6  6E22               	movwf	(_dt+1)^0,c
  3318                           
  3319                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 10:     dt.hour = I2C_Read1ByteRegister(0x
      +                          68, 0x02);
  3320   0029D8  0E02               	movlw	2
  3321   0029DA  0100               	movlb	0	; () banked
  3322   0029DC  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3323   0029DE  0E68               	movlw	104
  3324   0029E0  ECB7  F013         	call	_I2C_Read1ByteRegister
  3325   0029E4  6E23               	movwf	(_dt+2)^0,c
  3326                           
  3327                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 11:     dt.day = I2C_Read1ByteRegister(0x6
      +                          8, 0x04);
  3328   0029E6  0E04               	movlw	4
  3329   0029E8  0100               	movlb	0	; () banked
  3330   0029EA  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3331   0029EC  0E68               	movlw	104
  3332   0029EE  ECB7  F013         	call	_I2C_Read1ByteRegister
  3333   0029F2  6E24               	movwf	(_dt+3)^0,c
  3334                           
  3335                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 12:     dt.month = I2C_Read1ByteRegister(0
      +                          x68, 0x05);
  3336   0029F4  0E05               	movlw	5
  3337   0029F6  0100               	movlb	0	; () banked
  3338   0029F8  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3339   0029FA  0E68               	movlw	104
  3340   0029FC  ECB7  F013         	call	_I2C_Read1ByteRegister
  3341   002A00  6E25               	movwf	(_dt+4)^0,c
  3342                           
  3343                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 13:     dt.year = I2C_Read1ByteRegister(0x
      +                          68, 0x06);
  3344   002A02  0E06               	movlw	6
  3345   002A04  0100               	movlb	0	; () banked
  3346   002A06  6FE1               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
  3347   002A08  0E68               	movlw	104
  3348   002A0A  ECB7  F013         	call	_I2C_Read1ByteRegister
  3349   002A0E  6E26               	movwf	(_dt+5)^0,c
  3350   002A10                     
  3351                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 14:     dt.init_read = 1;
  3352   002A10  8027               	bsf	(_dt+6)^0,0,c
  3353   002A12                     
  3354                           ;AECUL/RealTimerClockDS1307/RealTimerClock.c: 16:     return dt;
  3355   002A12  EE20  F021         	lfsr	2,_dt
  3356   002A16  EE00  F0E4         	lfsr	0,?_GetDataAndTime
  3357   002A1A  0E06               	movlw	6
  3358   002A1C                     u3751:
  3359   002A1C  CFDB FFEB          	movff	plusw2,plusw0
  3360   002A20  06E8               	decf	wreg,f,c
  3361   002A22  E2FC               	bc	u3751
  3362   002A24  0012               	return		;funcret
  3363   002A26                     __end_of_GetDataAndTime:
  3364                           	callstack 0
  3365                           
  3366 ;; *************** function _LCD4B_SET *****************
  3367 ;; Defined at:
  3368 ;;		line 86 in file "AECUL/LCD_LM016L/LCD.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  lcd             1   24[BANK1 ] PTR const struct .
  3371 ;;		 -> lcd(12), 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  pinptr          1   29[BANK1 ] struct .
  3374 ;;  i               2   27[BANK1 ] int 
  3375 ;;  pinptr          1   30[BANK1 ] struct .
  3376 ;;  ret             1    0        unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      unsigned char 
  3379 ;; Registers used:
  3380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        7 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 18
  3393 ;; This function calls:
  3394 ;;		_LCD4B_SENDCMD
  3395 ;;		_PINSTART
  3396 ;; This function is called by:
  3397 ;;		_main
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text27
  3402   00176E                     __ptext27:
  3403                           	callstack 0
  3404   00176E                     _LCD4B_SET:
  3405                           	callstack 12
  3406   00176E                     
  3407                           ;AECUL/LCD_LM016L/LCD.c: 88:     if (lcd == ((void*)0)){
  3408   00176E  0101               	movlb	1	; () banked
  3409   001770  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3410   001772  A4D8               	btfss	status,2,c
  3411   001774  EFBE  F00B         	goto	u5841
  3412   001778  EFC0  F00B         	goto	u5840
  3413   00177C                     u5841:
  3414   00177C  EFC2  F00B         	goto	l1121
  3415   001780                     u5840:
  3416   001780                     
  3417                           ; BSR set to: 1
  3418                           ;AECUL/LCD_LM016L/LCD.c: 90:     }
  3419   001780  EFA3  F00C         	goto	l1129
  3420   001784                     l1121:
  3421                           
  3422                           ; BSR set to: 1
  3423                           ;AECUL/LCD_LM016L/LCD.c: 92:         PinConfig_t pinptr = {.pin = lcd->REpin, .port=lcd-
      +                          >REport,
  3424   001784  C091  F11E         	movff	LCD4B_SET@F3672,LCD4B_SET@pinptr
  3425   001788                     
  3426                           ; BSR set to: 1
  3427   001788  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3428   00178A  6ED9               	movwf	fsr2l,c
  3429   00178C  6ADA               	clrf	fsr2h,c
  3430   00178E  0E01               	movlw	1
  3431   001790  26D9               	addwf	fsr2l,f,c
  3432   001792  50DF               	movf	indf2,w,c
  3433   001794  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3434   001796  511E               	movf	LCD4B_SET@pinptr& (0+255),w,b
  3435   001798  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3436   00179A  0BF8               	andlw	-8
  3437   00179C  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3438   00179E  6F1E               	movwf	LCD4B_SET@pinptr& (0+255),b
  3439   0017A0  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3440   0017A2  6ED9               	movwf	fsr2l,c
  3441   0017A4  6ADA               	clrf	fsr2h,c
  3442   0017A6  50DF               	movf	indf2,w,c
  3443   0017A8  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3444   0017AA  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3445   0017AC  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3446   0017AE  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3447   0017B0  511E               	movf	LCD4B_SET@pinptr& (0+255),w,b
  3448   0017B2  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3449   0017B4  0BC7               	andlw	-57
  3450   0017B6  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3451   0017B8  6F1E               	movwf	LCD4B_SET@pinptr& (0+255),b
  3452   0017BA                     
  3453                           ; BSR set to: 1
  3454   0017BA  9D1E               	bcf	LCD4B_SET@pinptr& (0+255),6,b
  3455   0017BC                     
  3456                           ; BSR set to: 1
  3457   0017BC  9F1E               	bcf	LCD4B_SET@pinptr& (0+255),7,b
  3458   0017BE                     
  3459                           ; BSR set to: 1
  3460   0017BE  0E1E               	movlw	low LCD4B_SET@pinptr
  3461   0017C0  6F0A               	movwf	PINSTART@pinconfig& (0+255),b
  3462   0017C2  0E01               	movlw	high LCD4B_SET@pinptr
  3463   0017C4  6F0B               	movwf	(PINSTART@pinconfig+1)& (0+255),b
  3464   0017C6  EC48  F00E         	call	_PINSTART	;wreg free
  3465   0017CA                     
  3466                           ;AECUL/LCD_LM016L/LCD.c: 95:         pinptr.pin = lcd->ENpin;
  3467   0017CA  0101               	movlb	1	; () banked
  3468   0017CC  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3469   0017CE  6ED9               	movwf	fsr2l,c
  3470   0017D0  6ADA               	clrf	fsr2h,c
  3471   0017D2  0E02               	movlw	2
  3472   0017D4  26D9               	addwf	fsr2l,f,c
  3473   0017D6  50DF               	movf	indf2,w,c
  3474   0017D8  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3475   0017DA  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3476   0017DC  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3477   0017DE  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3478   0017E0  511E               	movf	LCD4B_SET@pinptr& (0+255),w,b
  3479   0017E2  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3480   0017E4  0BC7               	andlw	-57
  3481   0017E6  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3482   0017E8  6F1E               	movwf	LCD4B_SET@pinptr& (0+255),b
  3483   0017EA                     
  3484                           ; BSR set to: 1
  3485                           ;AECUL/LCD_LM016L/LCD.c: 96:         pinptr.port = lcd->ENport;
  3486   0017EA  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3487   0017EC  6ED9               	movwf	fsr2l,c
  3488   0017EE  6ADA               	clrf	fsr2h,c
  3489   0017F0  0E03               	movlw	3
  3490   0017F2  26D9               	addwf	fsr2l,f,c
  3491   0017F4  50DF               	movf	indf2,w,c
  3492   0017F6  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3493   0017F8  511E               	movf	LCD4B_SET@pinptr& (0+255),w,b
  3494   0017FA  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3495   0017FC  0BF8               	andlw	-8
  3496   0017FE  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3497   001800  6F1E               	movwf	LCD4B_SET@pinptr& (0+255),b
  3498   001802                     
  3499                           ; BSR set to: 1
  3500   001802  0E1E               	movlw	low LCD4B_SET@pinptr
  3501   001804  6F0A               	movwf	PINSTART@pinconfig& (0+255),b
  3502   001806  0E01               	movlw	high LCD4B_SET@pinptr
  3503   001808  6F0B               	movwf	(PINSTART@pinconfig+1)& (0+255),b
  3504   00180A  EC48  F00E         	call	_PINSTART	;wreg free
  3505   00180E                     
  3506                           ;AECUL/LCD_LM016L/LCD.c: 98:         for (int i = 0; i < 4; i++){
  3507   00180E  0E00               	movlw	0
  3508   001810  0101               	movlb	1	; () banked
  3509   001812  6F1C               	movwf	(LCD4B_SET@i+1)& (0+255),b
  3510   001814  0E00               	movlw	0
  3511   001816  6F1B               	movwf	LCD4B_SET@i& (0+255),b
  3512   001818                     l1125:
  3513                           
  3514                           ; BSR set to: 1
  3515                           ;AECUL/LCD_LM016L/LCD.c: 99:             PinConfig_t pinptr = {.pin = lcd->datapins[i], 
      +                          .port=lcd->dataport[i],
  3516   001818  C090  F11D         	movff	LCD4B_SET@F3675,LCD4B_SET@pinptr_2471
  3517   00181C                     
  3518                           ; BSR set to: 1
  3519   00181C  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3520   00181E  251B               	addwf	LCD4B_SET@i& (0+255),w,b
  3521   001820  6ED9               	movwf	fsr2l,c
  3522   001822  6ADA               	clrf	fsr2h,c
  3523   001824  0E08               	movlw	8
  3524   001826  26D9               	addwf	fsr2l,f,c
  3525   001828  50DF               	movf	indf2,w,c
  3526   00182A  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3527   00182C  511D               	movf	LCD4B_SET@pinptr_2471& (0+255),w,b
  3528   00182E  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3529   001830  0BF8               	andlw	-8
  3530   001832  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3531   001834  6F1D               	movwf	LCD4B_SET@pinptr_2471& (0+255),b
  3532   001836  5118               	movf	LCD4B_SET@lcd& (0+255),w,b
  3533   001838  251B               	addwf	LCD4B_SET@i& (0+255),w,b
  3534   00183A  6ED9               	movwf	fsr2l,c
  3535   00183C  6ADA               	clrf	fsr2h,c
  3536   00183E  0E04               	movlw	4
  3537   001840  26D9               	addwf	fsr2l,f,c
  3538   001842  50DF               	movf	indf2,w,c
  3539   001844  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3540   001846  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3541   001848  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3542   00184A  4719               	rlncf	??_LCD4B_SET& (0+255),f,b
  3543   00184C  511D               	movf	LCD4B_SET@pinptr_2471& (0+255),w,b
  3544   00184E  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3545   001850  0BC7               	andlw	-57
  3546   001852  1919               	xorwf	??_LCD4B_SET& (0+255),w,b
  3547   001854  6F1D               	movwf	LCD4B_SET@pinptr_2471& (0+255),b
  3548   001856                     
  3549                           ; BSR set to: 1
  3550   001856  9D1D               	bcf	LCD4B_SET@pinptr_2471& (0+255),6,b
  3551   001858                     
  3552                           ; BSR set to: 1
  3553   001858  9F1D               	bcf	LCD4B_SET@pinptr_2471& (0+255),7,b
  3554   00185A                     
  3555                           ; BSR set to: 1
  3556   00185A  0E1D               	movlw	low LCD4B_SET@pinptr_2471
  3557   00185C  6F0A               	movwf	PINSTART@pinconfig& (0+255),b
  3558   00185E  0E01               	movlw	high LCD4B_SET@pinptr_2471
  3559   001860  6F0B               	movwf	(PINSTART@pinconfig+1)& (0+255),b
  3560   001862  EC48  F00E         	call	_PINSTART	;wreg free
  3561   001866                     
  3562                           ;AECUL/LCD_LM016L/LCD.c: 102:         }
  3563   001866  0101               	movlb	1	; () banked
  3564   001868  4B1B               	infsnz	LCD4B_SET@i& (0+255),f,b
  3565   00186A  2B1C               	incf	(LCD4B_SET@i+1)& (0+255),f,b
  3566   00186C                     
  3567                           ; BSR set to: 1
  3568   00186C  BF1C               	btfsc	(LCD4B_SET@i+1)& (0+255),7,b
  3569   00186E  EF42  F00C         	goto	u5851
  3570   001872  511C               	movf	(LCD4B_SET@i+1)& (0+255),w,b
  3571   001874  E109               	bnz	u5850
  3572   001876  0E04               	movlw	4
  3573   001878  5D1B               	subwf	LCD4B_SET@i& (0+255),w,b
  3574   00187A  A0D8               	btfss	status,0,c
  3575   00187C  EF42  F00C         	goto	u5851
  3576   001880  EF44  F00C         	goto	u5850
  3577   001884                     u5851:
  3578   001884  EF0C  F00C         	goto	l1125
  3579   001888                     u5850:
  3580   001888                     
  3581                           ; BSR set to: 1
  3582                           ;AECUL/LCD_LM016L/LCD.c: 104:         _delay((unsigned long)((20)*(16000000L/4000.0)));
  3583   001888  0E68               	movlw	104
  3584   00188A  0101               	movlb	1	; () banked
  3585   00188C  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3586   00188E  0EE4               	movlw	228
  3587   001890                     u6037:
  3588   001890  2EE8               	decfsz	wreg,f,c
  3589   001892  D7FE               	bra	u6037
  3590   001894  2F19               	decfsz	??_LCD4B_SET& (0+255),f,b
  3591   001896  D7FC               	bra	u6037
  3592   001898  0000               	nop	
  3593   00189A  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3594   00189E  0E38               	movlw	56
  3595   0018A0  0101               	movlb	1	; () banked
  3596   0018A2  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3597   0018A4  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3598   0018A8                     
  3599                           ;AECUL/LCD_LM016L/LCD.c: 106:         _delay((unsigned long)((5)*(16000000L/4000.0)));
  3600   0018A8  0E1A               	movlw	26
  3601   0018AA  0101               	movlb	1	; () banked
  3602   0018AC  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3603   0018AE  0EF8               	movlw	248
  3604   0018B0                     u6047:
  3605   0018B0  2EE8               	decfsz	wreg,f,c
  3606   0018B2  D7FE               	bra	u6047
  3607   0018B4  2F19               	decfsz	??_LCD4B_SET& (0+255),f,b
  3608   0018B6  D7FC               	bra	u6047
  3609   0018B8  0000               	nop	
  3610   0018BA  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3611   0018BE  0E38               	movlw	56
  3612   0018C0  0101               	movlb	1	; () banked
  3613   0018C2  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3614   0018C4  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3615   0018C8                     
  3616                           ;AECUL/LCD_LM016L/LCD.c: 108:         _delay((unsigned long)((150)*(16000000L/4000.0)));
  3617   0018C8  0E04               	movlw	4
  3618   0018CA  0101               	movlb	1	; () banked
  3619   0018CC  6F1A               	movwf	(??_LCD4B_SET+1)& (0+255),b
  3620   0018CE  0E0C               	movlw	12
  3621   0018D0  6F19               	movwf	??_LCD4B_SET& (0+255),b
  3622   0018D2  0E33               	movlw	51
  3623   0018D4                     u6057:
  3624   0018D4  2EE8               	decfsz	wreg,f,c
  3625   0018D6  D7FE               	bra	u6057
  3626   0018D8  2F19               	decfsz	??_LCD4B_SET& (0+255),f,b
  3627   0018DA  D7FC               	bra	u6057
  3628   0018DC  2F1A               	decfsz	(??_LCD4B_SET+1)& (0+255),f,b
  3629   0018DE  D7FA               	bra	u6057
  3630   0018E0  F000 F000          	nop2	
  3631   0018E4  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3632   0018E8  0E38               	movlw	56
  3633   0018EA  0101               	movlb	1	; () banked
  3634   0018EC  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3635   0018EE  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3636   0018F2  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3637   0018F6  0E01               	movlw	1
  3638   0018F8  0101               	movlb	1	; () banked
  3639   0018FA  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3640   0018FC  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3641   001900  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3642   001904  0E02               	movlw	2
  3643   001906  0101               	movlb	1	; () banked
  3644   001908  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3645   00190A  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3646   00190E  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3647   001912  0E06               	movlw	6
  3648   001914  0101               	movlb	1	; () banked
  3649   001916  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3650   001918  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3651   00191C  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3652   001920  0E0C               	movlw	12
  3653   001922  0101               	movlb	1	; () banked
  3654   001924  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3655   001926  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3656   00192A  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3657   00192E  0E28               	movlw	40
  3658   001930  0101               	movlb	1	; () banked
  3659   001932  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3660   001934  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3661   001938  C118  F10E         	movff	LCD4B_SET@lcd,LCD4B_SENDCMD@lcd
  3662   00193C  0E80               	movlw	128
  3663   00193E  0101               	movlb	1	; () banked
  3664   001940  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  3665   001942  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  3666   001946                     l1129:
  3667   001946  0012               	return		;funcret
  3668   001948                     __end_of_LCD4B_SET:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _PINSTART *****************
  3672 ;; Defined at:
  3673 ;;		line 40 in file "AECUL/LCD_LM016L/LCD.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  pinconfig       2   10[BANK1 ] PTR const struct .
  3676 ;;		 -> LCD4B_SET@pinptr_2471(1), LCD4B_SET@pinptr(1), 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  ret             1   17[BANK1 ] unsigned char 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      unsigned char 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3688 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;Total ram usage:        8 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; Hardware stack levels required when called: 16
  3695 ;; This function calls:
  3696 ;;		_PINWRITE
  3697 ;;		_printf
  3698 ;; This function is called by:
  3699 ;;		_LCD4B_SET
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text28
  3704   001C90                     __ptext28:
  3705                           	callstack 0
  3706   001C90                     _PINSTART:
  3707                           	callstack 13
  3708   001C90                     
  3709                           ;AECUL/LCD_LM016L/LCD.c: 42:     if((pinconfig->pin > (8-1)) || (pinconfig == ((void*)0)
      +                          )){
  3710   001C90  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3711   001C94  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3712   001C98  30DF               	rrcf	223,w,c
  3713   001C9A  32E8               	rrcf	wreg,f,c
  3714   001C9C  32E8               	rrcf	wreg,f,c
  3715   001C9E  0B07               	andlw	7
  3716   001CA0  0101               	movlb	1	; () banked
  3717   001CA2  6F0C               	movwf	??_PINSTART& (0+255),b
  3718   001CA4  0E08               	movlw	8
  3719   001CA6  610C               	cpfslt	??_PINSTART& (0+255),b
  3720   001CA8  EF58  F00E         	goto	u5781
  3721   001CAC  EF5A  F00E         	goto	u5780
  3722   001CB0                     u5781:
  3723   001CB0  EF63  F00E         	goto	l8863
  3724   001CB4                     u5780:
  3725   001CB4                     
  3726                           ; BSR set to: 1
  3727   001CB4  510A               	movf	PINSTART@pinconfig& (0+255),w,b
  3728   001CB6  110B               	iorwf	(PINSTART@pinconfig+1)& (0+255),w,b
  3729   001CB8  A4D8               	btfss	status,2,c
  3730   001CBA  EF61  F00E         	goto	u5791
  3731   001CBE  EF63  F00E         	goto	u5790
  3732   001CC2                     u5791:
  3733   001CC2  EFC7  F00E         	goto	l8875
  3734   001CC6                     u5790:
  3735   001CC6                     l8863:
  3736                           
  3737                           ; BSR set to: 1
  3738                           ;AECUL/LCD_LM016L/LCD.c: 43:         ret = 0x00;
  3739   001CC6  0E00               	movlw	0
  3740   001CC8  6F11               	movwf	PINSTART@ret& (0+255),b
  3741   001CCA                     
  3742                           ; BSR set to: 1
  3743                           ;AECUL/LCD_LM016L/LCD.c: 44:         printf("User Entered invalid PIN Location or NULL P
      +                          OINTER\n");
  3744   001CCA  0E21               	movlw	low STR_10
  3745   001CCC  0100               	movlb	0	; () banked
  3746   001CCE  6FFC               	movwf	printf@fmt& (0+255),b
  3747   001CD0  ECB7  F019         	call	_printf	;wreg free
  3748                           
  3749                           ;AECUL/LCD_LM016L/LCD.c: 45:     }
  3750   001CD4  EFF8  F00E         	goto	l8879
  3751   001CD8                     l8867:
  3752                           
  3753                           ; BSR set to: 1
  3754                           ;AECUL/LCD_LM016L/LCD.c: 49:                 (*TRIS_Reg[pinconfig->port] &= ~(((uint8_t)
      +                          1) << pinconfig->pin));
  3755   001CD8  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3756   001CDC  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3757   001CE0  30DF               	rrcf	223,w,c
  3758   001CE2  32E8               	rrcf	wreg,f,c
  3759   001CE4  32E8               	rrcf	wreg,f,c
  3760   001CE6  0B07               	andlw	7
  3761   001CE8  6F0C               	movwf	??_PINSTART& (0+255),b
  3762   001CEA  0E01               	movlw	1
  3763   001CEC  6F0D               	movwf	(??_PINSTART+1)& (0+255),b
  3764   001CEE  2B0C               	incf	??_PINSTART& (0+255),f,b
  3765   001CF0  EF7C  F00E         	goto	u5804
  3766   001CF4                     u5805:
  3767   001CF4  90D8               	bcf	status,0,c
  3768   001CF6  370D               	rlcf	(??_PINSTART+1)& (0+255),f,b
  3769   001CF8                     u5804:
  3770   001CF8  2F0C               	decfsz	??_PINSTART& (0+255),f,b
  3771   001CFA  EF7A  F00E         	goto	u5805
  3772   001CFE  0101               	movlb	1	; () banked
  3773   001D00  510D               	movf	(??_PINSTART+1)& (0+255),w,b
  3774   001D02  0AFF               	xorlw	255
  3775   001D04  6F0E               	movwf	(??_PINSTART+2)& (0+255),b
  3776   001D06  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3777   001D0A  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3778   001D0E  50DF               	movf	223,w,c
  3779   001D10  0B07               	andlw	7
  3780   001D12  0D02               	mullw	2
  3781   001D14  50F3               	movf	243,w,c
  3782   001D16  0FC0               	addlw	low _TRIS_Reg
  3783   001D18  6ED9               	movwf	fsr2l,c
  3784   001D1A  6ADA               	clrf	fsr2h,c
  3785   001D1C  CFDE F10F          	movff	postinc2,??_PINSTART+3
  3786   001D20  CFDD F110          	movff	postdec2,??_PINSTART+4
  3787   001D24  C10F  FFD9         	movff	??_PINSTART+3,fsr2l
  3788   001D28  C110  FFDA         	movff	??_PINSTART+4,fsr2h
  3789   001D2C  510E               	movf	(??_PINSTART+2)& (0+255),w,b
  3790   001D2E  16DF               	andwf	indf2,f,c
  3791                           
  3792                           ;AECUL/LCD_LM016L/LCD.c: 50:                 break;
  3793   001D30  EFE8  F00E         	goto	l8877
  3794   001D34                     l8869:
  3795                           
  3796                           ; BSR set to: 1
  3797                           ;AECUL/LCD_LM016L/LCD.c: 52:                 (*TRIS_Reg[pinconfig->port] |= (((uint8_t)1
      +                          ) << pinconfig->pin));
  3798   001D34  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3799   001D38  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3800   001D3C  30DF               	rrcf	223,w,c
  3801   001D3E  32E8               	rrcf	wreg,f,c
  3802   001D40  32E8               	rrcf	wreg,f,c
  3803   001D42  0B07               	andlw	7
  3804   001D44  6F0C               	movwf	??_PINSTART& (0+255),b
  3805   001D46  0E01               	movlw	1
  3806   001D48  6F0D               	movwf	(??_PINSTART+1)& (0+255),b
  3807   001D4A  2B0C               	incf	??_PINSTART& (0+255),f,b
  3808   001D4C  EFAA  F00E         	goto	u5814
  3809   001D50                     u5815:
  3810   001D50  90D8               	bcf	status,0,c
  3811   001D52  370D               	rlcf	(??_PINSTART+1)& (0+255),f,b
  3812   001D54                     u5814:
  3813   001D54  2F0C               	decfsz	??_PINSTART& (0+255),f,b
  3814   001D56  EFA8  F00E         	goto	u5815
  3815   001D5A  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3816   001D5E  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3817   001D62  50DF               	movf	223,w,c
  3818   001D64  0B07               	andlw	7
  3819   001D66  0D02               	mullw	2
  3820   001D68  50F3               	movf	243,w,c
  3821   001D6A  0FC0               	addlw	low _TRIS_Reg
  3822   001D6C  6ED9               	movwf	fsr2l,c
  3823   001D6E  6ADA               	clrf	fsr2h,c
  3824   001D70  CFDE F10E          	movff	postinc2,??_PINSTART+2
  3825   001D74  CFDD F10F          	movff	postdec2,??_PINSTART+3
  3826   001D78  C10E  FFD9         	movff	??_PINSTART+2,fsr2l
  3827   001D7C  C10F  FFDA         	movff	??_PINSTART+3,fsr2h
  3828   001D80  0101               	movlb	1	; () banked
  3829   001D82  510D               	movf	(??_PINSTART+1)& (0+255),w,b
  3830   001D84  12DF               	iorwf	indf2,f,c
  3831                           
  3832                           ;AECUL/LCD_LM016L/LCD.c: 53:                 break;
  3833   001D86  EFE8  F00E         	goto	l8877
  3834   001D8A                     l8871:
  3835                           
  3836                           ; BSR set to: 1
  3837                           ;AECUL/LCD_LM016L/LCD.c: 56:                 break;
  3838   001D8A  EFE8  F00E         	goto	l8877
  3839   001D8E                     l8875:
  3840                           
  3841                           ; BSR set to: 1
  3842   001D8E  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3843   001D92  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3844   001D96  BCDF               	btfsc	indf2,6,c
  3845   001D98  EFD0  F00E         	goto	u5821
  3846   001D9C  EFD3  F00E         	goto	u5820
  3847   001DA0                     u5821:
  3848   001DA0  0E01               	movlw	1
  3849   001DA2  EFD4  F00E         	goto	u5830
  3850   001DA6                     u5820:
  3851   001DA6  0E00               	movlw	0
  3852   001DA8                     u5830:
  3853   001DA8  6F0C               	movwf	??_PINSTART& (0+255),b
  3854   001DAA  6B0D               	clrf	(??_PINSTART+1)& (0+255),b
  3855                           
  3856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3857                           ; Switch size 1, requested type "simple"
  3858                           ; Number of cases is 1, Range of values is 0 to 0
  3859                           ; switch strategies available:
  3860                           ; Name         Instructions Cycles
  3861                           ; simple_byte            4     3 (average)
  3862                           ;	Chosen strategy is simple_byte
  3863   001DAC  510D               	movf	(??_PINSTART+1)& (0+255),w,b
  3864   001DAE  0A00               	xorlw	0	; case 0
  3865   001DB0  B4D8               	btfsc	status,2,c
  3866   001DB2  EFDD  F00E         	goto	l9421
  3867   001DB6  EFC5  F00E         	goto	l8871
  3868   001DBA                     l9421:
  3869                           
  3870                           ; BSR set to: 1
  3871                           ; Switch size 1, requested type "simple"
  3872                           ; Number of cases is 2, Range of values is 0 to 1
  3873                           ; switch strategies available:
  3874                           ; Name         Instructions Cycles
  3875                           ; simple_byte            7     4 (average)
  3876                           ;	Chosen strategy is simple_byte
  3877   001DBA  510C               	movf	??_PINSTART& (0+255),w,b
  3878   001DBC  0A00               	xorlw	0	; case 0
  3879   001DBE  B4D8               	btfsc	status,2,c
  3880   001DC0  EF6C  F00E         	goto	l8867
  3881   001DC4  0A01               	xorlw	1	; case 1
  3882   001DC6  B4D8               	btfsc	status,2,c
  3883   001DC8  EF9A  F00E         	goto	l8869
  3884   001DCC  EFC5  F00E         	goto	l8871
  3885   001DD0                     l8877:
  3886                           
  3887                           ; BSR set to: 1
  3888                           ;AECUL/LCD_LM016L/LCD.c: 58:         ret = PINWRITE(pinconfig, pinconfig->logic);
  3889   001DD0  C10A  F102         	movff	PINSTART@pinconfig,PINWRITE@pinconfig
  3890   001DD4  C10B  F103         	movff	PINSTART@pinconfig+1,PINWRITE@pinconfig+1
  3891   001DD8  C10A  FFD9         	movff	PINSTART@pinconfig,fsr2l
  3892   001DDC  C10B  FFDA         	movff	PINSTART@pinconfig+1,fsr2h
  3893   001DE0  0E00               	movlw	0
  3894   001DE2  BEDF               	btfsc	indf2,7,c
  3895   001DE4  0E01               	movlw	1
  3896   001DE6  6F04               	movwf	PINWRITE@log& (0+255),b
  3897   001DE8  ECFB  F00E         	call	_PINWRITE	;wreg free
  3898   001DEC  0101               	movlb	1	; () banked
  3899   001DEE  6F11               	movwf	PINSTART@ret& (0+255),b
  3900   001DF0                     l8879:
  3901                           
  3902                           ;AECUL/LCD_LM016L/LCD.c: 60:     return ret;
  3903   001DF0  0101               	movlb	1	; () banked
  3904   001DF2  5111               	movf	PINSTART@ret& (0+255),w,b
  3905   001DF4                     
  3906                           ; BSR set to: 1
  3907   001DF4  0012               	return		;funcret
  3908   001DF6                     __end_of_PINSTART:
  3909                           	callstack 0
  3910                           
  3911 ;; *************** function _LCD4B_SENDSTRPOS *****************
  3912 ;; Defined at:
  3913 ;;		line 206 in file "AECUL/LCD_LM016L/LCD.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  lcd             1   30[BANK1 ] PTR const struct .
  3916 ;;		 -> lcd(12), 
  3917 ;;  str             1   31[BANK1 ] PTR unsigned char 
  3918 ;;		 -> STR_6(7), STR_5(7), STR_4(7), 
  3919 ;;  row             1   32[BANK1 ] unsigned char 
  3920 ;;  column          1   33[BANK1 ] unsigned char 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  ret             1    0        unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      unsigned char 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3932 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;Total ram usage:        4 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; Hardware stack levels required when called: 19
  3939 ;; This function calls:
  3940 ;;		_LCD4B_SENDCHAR
  3941 ;;		_setcursor4bit
  3942 ;; This function is called by:
  3943 ;;		_main
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text29
  3948   002AFA                     __ptext29:
  3949                           	callstack 0
  3950   002AFA                     _LCD4B_SENDSTRPOS:
  3951                           	callstack 11
  3952   002AFA                     
  3953                           ;AECUL/LCD_LM016L/LCD.c: 208:     if (lcd == ((void*)0)){
  3954   002AFA  0101               	movlb	1	; () banked
  3955   002AFC  511E               	movf	LCD4B_SENDSTRPOS@lcd& (0+255),w,b
  3956   002AFE  A4D8               	btfss	status,2,c
  3957   002B00  EF84  F015         	goto	u5861
  3958   002B04  EF86  F015         	goto	u5860
  3959   002B08                     u5861:
  3960   002B08  EF88  F015         	goto	l8991
  3961   002B0C                     u5860:
  3962   002B0C                     
  3963                           ; BSR set to: 1
  3964                           ;AECUL/LCD_LM016L/LCD.c: 210:     }
  3965   002B0C  EFAF  F015         	goto	l1174
  3966   002B10                     l8991:
  3967                           
  3968                           ; BSR set to: 1
  3969   002B10  C11E  F118         	movff	LCD4B_SENDSTRPOS@lcd,setcursor4bit@lcd
  3970   002B14  C120  F119         	movff	LCD4B_SENDSTRPOS@row,setcursor4bit@row
  3971   002B18  C121  F11A         	movff	LCD4B_SENDSTRPOS@column,setcursor4bit@col
  3972   002B1C  ECE8  F011         	call	_setcursor4bit	;wreg free
  3973                           
  3974                           ;AECUL/LCD_LM016L/LCD.c: 213:         while(*str){
  3975   002B20  EFA0  F015         	goto	l8997
  3976   002B24                     l8993:
  3977   002B24  C11E  F10E         	movff	LCD4B_SENDSTRPOS@lcd,LCD4B_SENDCHAR@lcd
  3978   002B28  C11F  FFF6         	movff	LCD4B_SENDSTRPOS@str,tblptrl
  3979   002B2C                     	if	1	;There is more than 1 active tblptr byte
  3980   002B2C  0E10               	movlw	high __smallconst
  3981   002B2E  6EF7               	movwf	tblptrh,c
  3982   002B30                     	endif
  3983   002B30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3984   002B30  6AF8               	clrf	tblptru,c
  3985   002B32                     	endif
  3986   002B32                     	if	0	;tblptru may be non-zero
  3987   002B32                     	endif
  3988   002B32  0008               	tblrd		*
  3989   002B34  CFF5 F10F          	movff	tablat,LCD4B_SENDCHAR@data
  3990   002B38  EC76  F00D         	call	_LCD4B_SENDCHAR	;wreg free
  3991   002B3C  0101               	movlb	1	; () banked
  3992   002B3E  2B1F               	incf	LCD4B_SENDSTRPOS@str& (0+255),f,b
  3993   002B40                     l8997:
  3994                           
  3995                           ;AECUL/LCD_LM016L/LCD.c: 213:         while(*str){
  3996   002B40  C11F  FFF6         	movff	LCD4B_SENDSTRPOS@str,tblptrl
  3997   002B44                     	if	1	;There is more than 1 active tblptr byte
  3998   002B44  0E10               	movlw	high __smallconst
  3999   002B46  6EF7               	movwf	tblptrh,c
  4000   002B48                     	endif
  4001   002B48                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4002   002B48  6AF8               	clrf	tblptru,c
  4003   002B4A                     	endif
  4004   002B4A                     	if	0	;tblptru may be non-zero
  4005   002B4A                     	endif
  4006   002B4A  0008               	tblrd		*
  4007   002B4C  50F5               	movf	tablat,w,c
  4008   002B4E  0900               	iorlw	0
  4009   002B50  A4D8               	btfss	status,2,c
  4010   002B52  EFAD  F015         	goto	u5871
  4011   002B56  EFAF  F015         	goto	u5870
  4012   002B5A                     u5871:
  4013   002B5A  EF92  F015         	goto	l8993
  4014   002B5E                     u5870:
  4015   002B5E                     l1174:
  4016   002B5E  0012               	return		;funcret
  4017   002B60                     __end_of_LCD4B_SENDSTRPOS:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _setcursor4bit *****************
  4021 ;; Defined at:
  4022 ;;		line 257 in file "AECUL/LCD_LM016L/LCD.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  lcd             1   24[BANK1 ] PTR const struct .
  4025 ;;		 -> lcd(12), 
  4026 ;;  row             1   25[BANK1 ] unsigned char 
  4027 ;;  col             1   26[BANK1 ] unsigned char 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  ret             1   29[BANK1 ] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      unsigned char 
  4032 ;; Registers used:
  4033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4039 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;Total ram usage:        6 bytes
  4044 ;; Hardware stack levels used: 1
  4045 ;; Hardware stack levels required when called: 18
  4046 ;; This function calls:
  4047 ;;		_LCD4B_SENDCMD
  4048 ;; This function is called by:
  4049 ;;		_LCD4B_SENDSTRPOS
  4050 ;;		_LCD4B_SENDCHARPOS
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text30
  4055   0023D0                     __ptext30:
  4056                           	callstack 0
  4057   0023D0                     _setcursor4bit:
  4058                           	callstack 11
  4059   0023D0                     
  4060                           ;AECUL/LCD_LM016L/LCD.c: 259:     col--;
  4061   0023D0  0101               	movlb	1	; () banked
  4062   0023D2  071A               	decf	setcursor4bit@col& (0+255),f,b
  4063                           
  4064                           ;AECUL/LCD_LM016L/LCD.c: 260:     switch(row){
  4065   0023D4  EF1C  F012         	goto	l8905
  4066   0023D8                     l8893:
  4067                           
  4068                           ; BSR set to: 1
  4069   0023D8  C118  F10E         	movff	setcursor4bit@lcd,LCD4B_SENDCMD@lcd
  4070   0023DC  511A               	movf	setcursor4bit@col& (0+255),w,b
  4071   0023DE  0F80               	addlw	128
  4072   0023E0  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  4073   0023E2  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  4074   0023E6  0101               	movlb	1	; () banked
  4075   0023E8  6F1D               	movwf	setcursor4bit@ret& (0+255),b
  4076   0023EA  EF39  F012         	goto	l8907
  4077   0023EE                     l8895:
  4078                           
  4079                           ; BSR set to: 1
  4080   0023EE  C118  F10E         	movff	setcursor4bit@lcd,LCD4B_SENDCMD@lcd
  4081   0023F2  511A               	movf	setcursor4bit@col& (0+255),w,b
  4082   0023F4  0FC0               	addlw	192
  4083   0023F6  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  4084   0023F8  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  4085   0023FC  0101               	movlb	1	; () banked
  4086   0023FE  6F1D               	movwf	setcursor4bit@ret& (0+255),b
  4087   002400  EF39  F012         	goto	l8907
  4088   002404                     l8897:
  4089                           
  4090                           ; BSR set to: 1
  4091   002404  C118  F10E         	movff	setcursor4bit@lcd,LCD4B_SENDCMD@lcd
  4092   002408  511A               	movf	setcursor4bit@col& (0+255),w,b
  4093   00240A  0F94               	addlw	148
  4094   00240C  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  4095   00240E  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  4096   002412  0101               	movlb	1	; () banked
  4097   002414  6F1D               	movwf	setcursor4bit@ret& (0+255),b
  4098   002416  EF39  F012         	goto	l8907
  4099   00241A                     l8899:
  4100                           
  4101                           ; BSR set to: 1
  4102   00241A  C118  F10E         	movff	setcursor4bit@lcd,LCD4B_SENDCMD@lcd
  4103   00241E  511A               	movf	setcursor4bit@col& (0+255),w,b
  4104   002420  0FD4               	addlw	212
  4105   002422  6F0F               	movwf	LCD4B_SENDCMD@cmd& (0+255),b
  4106   002424  ECA4  F00C         	call	_LCD4B_SENDCMD	;wreg free
  4107   002428  0101               	movlb	1	; () banked
  4108   00242A  6F1D               	movwf	setcursor4bit@ret& (0+255),b
  4109   00242C  EF39  F012         	goto	l8907
  4110   002430                     l8901:
  4111                           
  4112                           ; BSR set to: 1
  4113   002430  0E00               	movlw	0
  4114   002432  6F1D               	movwf	setcursor4bit@ret& (0+255),b
  4115   002434  EF39  F012         	goto	l8907
  4116   002438                     l8905:
  4117                           
  4118                           ; BSR set to: 1
  4119   002438  5119               	movf	setcursor4bit@row& (0+255),w,b
  4120   00243A  6F1B               	movwf	??_setcursor4bit& (0+255),b
  4121   00243C  6B1C               	clrf	(??_setcursor4bit+1)& (0+255),b
  4122                           
  4123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4124                           ; Switch size 1, requested type "simple"
  4125                           ; Number of cases is 1, Range of values is 0 to 0
  4126                           ; switch strategies available:
  4127                           ; Name         Instructions Cycles
  4128                           ; simple_byte            4     3 (average)
  4129                           ;	Chosen strategy is simple_byte
  4130   00243E  511C               	movf	(??_setcursor4bit+1)& (0+255),w,b
  4131   002440  0A00               	xorlw	0	; case 0
  4132   002442  B4D8               	btfsc	status,2,c
  4133   002444  EF26  F012         	goto	l9423
  4134   002448  EF18  F012         	goto	l8901
  4135   00244C                     l9423:
  4136                           
  4137                           ; BSR set to: 1
  4138                           ; Switch size 1, requested type "simple"
  4139                           ; Number of cases is 4, Range of values is 1 to 4
  4140                           ; switch strategies available:
  4141                           ; Name         Instructions Cycles
  4142                           ; simple_byte           13     7 (average)
  4143                           ;	Chosen strategy is simple_byte
  4144   00244C  511B               	movf	??_setcursor4bit& (0+255),w,b
  4145   00244E  0A01               	xorlw	1	; case 1
  4146   002450  B4D8               	btfsc	status,2,c
  4147   002452  EFEC  F011         	goto	l8893
  4148   002456  0A03               	xorlw	3	; case 2
  4149   002458  B4D8               	btfsc	status,2,c
  4150   00245A  EFF7  F011         	goto	l8895
  4151   00245E  0A01               	xorlw	1	; case 3
  4152   002460  B4D8               	btfsc	status,2,c
  4153   002462  EF02  F012         	goto	l8897
  4154   002466  0A07               	xorlw	7	; case 4
  4155   002468  B4D8               	btfsc	status,2,c
  4156   00246A  EF0D  F012         	goto	l8899
  4157   00246E  EF18  F012         	goto	l8901
  4158   002472                     l8907:
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;AECUL/LCD_LM016L/LCD.c: 267:     return ret;
  4162   002472  511D               	movf	setcursor4bit@ret& (0+255),w,b
  4163   002474                     
  4164                           ; BSR set to: 1
  4165   002474  0012               	return		;funcret
  4166   002476                     __end_of_setcursor4bit:
  4167                           	callstack 0
  4168                           
  4169 ;; *************** function _LCD4B_SENDCMD *****************
  4170 ;; Defined at:
  4171 ;;		line 121 in file "AECUL/LCD_LM016L/LCD.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  lcd             1   14[BANK1 ] PTR const struct .
  4174 ;;		 -> lcd(12), 
  4175 ;;  cmd             1   15[BANK1 ] unsigned char 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  i               2   21[BANK1 ] int 
  4178 ;;  i               2   19[BANK1 ] int 
  4179 ;;  pinptr          1   23[BANK1 ] struct .
  4180 ;;  ret             1   18[BANK1 ] unsigned char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      unsigned char 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4190 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;Total ram usage:       10 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; Hardware stack levels required when called: 17
  4197 ;; This function calls:
  4198 ;;		_PINWRITE
  4199 ;;		_sendenable
  4200 ;; This function is called by:
  4201 ;;		_LCD4B_SET
  4202 ;;		_setcursor4bit
  4203 ;;		_LCD4B_SENDCUSTOMCHAR
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text31
  4208   001948                     __ptext31:
  4209                           	callstack 0
  4210   001948                     _LCD4B_SENDCMD:
  4211                           	callstack 12
  4212   001948                     
  4213                           ;AECUL/LCD_LM016L/LCD.c: 123:     if (lcd == ((void*)0)){
  4214   001948  0101               	movlb	1	; () banked
  4215   00194A  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4216   00194C  A4D8               	btfss	status,2,c
  4217   00194E  EFAB  F00C         	goto	u5681
  4218   001952  EFAD  F00C         	goto	u5680
  4219   001956                     u5681:
  4220   001956  EFB1  F00C         	goto	l1132
  4221   00195A                     u5680:
  4222   00195A                     
  4223                           ; BSR set to: 1
  4224                           ;AECUL/LCD_LM016L/LCD.c: 124:         ret= 0x00;
  4225   00195A  0E00               	movlw	0
  4226   00195C  6F12               	movwf	LCD4B_SENDCMD@ret& (0+255),b
  4227                           
  4228                           ;AECUL/LCD_LM016L/LCD.c: 125:     }
  4229   00195E  EF74  F00D         	goto	l8805
  4230   001962                     l1132:
  4231                           
  4232                           ; BSR set to: 1
  4233                           ;AECUL/LCD_LM016L/LCD.c: 127:         PinConfig_t pinptr = {.pin = lcd->REpin, .port=lcd
      +                          ->REport,
  4234   001962  C08F  F117         	movff	LCD4B_SENDCMD@F3681,LCD4B_SENDCMD@pinptr
  4235   001966                     
  4236                           ; BSR set to: 1
  4237   001966  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4238   001968  6ED9               	movwf	fsr2l,c
  4239   00196A  6ADA               	clrf	fsr2h,c
  4240   00196C  0E01               	movlw	1
  4241   00196E  26D9               	addwf	fsr2l,f,c
  4242   001970  50DF               	movf	indf2,w,c
  4243   001972  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4244   001974  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4245   001976  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4246   001978  0BF8               	andlw	-8
  4247   00197A  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4248   00197C  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4249   00197E  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4250   001980  6ED9               	movwf	fsr2l,c
  4251   001982  6ADA               	clrf	fsr2h,c
  4252   001984  50DF               	movf	indf2,w,c
  4253   001986  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4254   001988  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4255   00198A  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4256   00198C  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4257   00198E  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4258   001990  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4259   001992  0BC7               	andlw	-57
  4260   001994  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4261   001996  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4262   001998                     
  4263                           ; BSR set to: 1
  4264   001998  9D17               	bcf	LCD4B_SENDCMD@pinptr& (0+255),6,b
  4265   00199A                     
  4266                           ; BSR set to: 1
  4267   00199A  9F17               	bcf	LCD4B_SENDCMD@pinptr& (0+255),7,b
  4268   00199C                     
  4269                           ; BSR set to: 1
  4270   00199C  0E17               	movlw	low LCD4B_SENDCMD@pinptr
  4271   00199E  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4272   0019A0  0E01               	movlw	high LCD4B_SENDCMD@pinptr
  4273   0019A2  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4274   0019A4  0E00               	movlw	0
  4275   0019A6  6F04               	movwf	PINWRITE@log& (0+255),b
  4276   0019A8  ECFB  F00E         	call	_PINWRITE	;wreg free
  4277   0019AC                     
  4278                           ;AECUL/LCD_LM016L/LCD.c: 130:         for (int i = 0; i < 4; i++){
  4279   0019AC  0E00               	movlw	0
  4280   0019AE  0101               	movlb	1	; () banked
  4281   0019B0  6F14               	movwf	(LCD4B_SENDCMD@i+1)& (0+255),b
  4282   0019B2  0E00               	movlw	0
  4283   0019B4  6F13               	movwf	LCD4B_SENDCMD@i& (0+255),b
  4284   0019B6                     l8779:
  4285                           
  4286                           ; BSR set to: 1
  4287                           ;AECUL/LCD_LM016L/LCD.c: 131:             pinptr.pin = lcd->datapins[i];
  4288   0019B6  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4289   0019B8  2513               	addwf	LCD4B_SENDCMD@i& (0+255),w,b
  4290   0019BA  6ED9               	movwf	fsr2l,c
  4291   0019BC  6ADA               	clrf	fsr2h,c
  4292   0019BE  0E04               	movlw	4
  4293   0019C0  26D9               	addwf	fsr2l,f,c
  4294   0019C2  50DF               	movf	indf2,w,c
  4295   0019C4  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4296   0019C6  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4297   0019C8  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4298   0019CA  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4299   0019CC  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4300   0019CE  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4301   0019D0  0BC7               	andlw	-57
  4302   0019D2  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4303   0019D4  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4304                           
  4305                           ;AECUL/LCD_LM016L/LCD.c: 132:             pinptr.port = lcd->dataport[i];
  4306   0019D6  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4307   0019D8  2513               	addwf	LCD4B_SENDCMD@i& (0+255),w,b
  4308   0019DA  6ED9               	movwf	fsr2l,c
  4309   0019DC  6ADA               	clrf	fsr2h,c
  4310   0019DE  0E08               	movlw	8
  4311   0019E0  26D9               	addwf	fsr2l,f,c
  4312   0019E2  50DF               	movf	indf2,w,c
  4313   0019E4  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4314   0019E6  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4315   0019E8  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4316   0019EA  0BF8               	andlw	-8
  4317   0019EC  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4318   0019EE  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4319   0019F0                     
  4320                           ; BSR set to: 1
  4321   0019F0  0E17               	movlw	low LCD4B_SENDCMD@pinptr
  4322   0019F2  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4323   0019F4  0E01               	movlw	high LCD4B_SENDCMD@pinptr
  4324   0019F6  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4325   0019F8  C113  F110         	movff	LCD4B_SENDCMD@i,??_LCD4B_SENDCMD
  4326   0019FC  0E04               	movlw	4
  4327   0019FE  2710               	addwf	??_LCD4B_SENDCMD& (0+255),f,b
  4328   001A00  C10F  F111         	movff	LCD4B_SENDCMD@cmd,??_LCD4B_SENDCMD+1
  4329   001A04  2B10               	incf	??_LCD4B_SENDCMD& (0+255),f,b
  4330   001A06  EF07  F00D         	goto	u5694
  4331   001A0A                     u5695:
  4332   001A0A  90D8               	bcf	status,0,c
  4333   001A0C  3311               	rrcf	(??_LCD4B_SENDCMD+1)& (0+255),f,b
  4334   001A0E                     u5694:
  4335   001A0E  2F10               	decfsz	??_LCD4B_SENDCMD& (0+255),f,b
  4336   001A10  EF05  F00D         	goto	u5695
  4337   001A14  0101               	movlb	1	; () banked
  4338   001A16  5111               	movf	(??_LCD4B_SENDCMD+1)& (0+255),w,b
  4339   001A18  0B01               	andlw	1
  4340   001A1A  6F04               	movwf	PINWRITE@log& (0+255),b
  4341   001A1C  ECFB  F00E         	call	_PINWRITE	;wreg free
  4342   001A20                     
  4343                           ;AECUL/LCD_LM016L/LCD.c: 134:         }
  4344   001A20  0101               	movlb	1	; () banked
  4345   001A22  4B13               	infsnz	LCD4B_SENDCMD@i& (0+255),f,b
  4346   001A24  2B14               	incf	(LCD4B_SENDCMD@i+1)& (0+255),f,b
  4347   001A26                     
  4348                           ; BSR set to: 1
  4349   001A26  BF14               	btfsc	(LCD4B_SENDCMD@i+1)& (0+255),7,b
  4350   001A28  EF1F  F00D         	goto	u5701
  4351   001A2C  5114               	movf	(LCD4B_SENDCMD@i+1)& (0+255),w,b
  4352   001A2E  E109               	bnz	u5700
  4353   001A30  0E04               	movlw	4
  4354   001A32  5D13               	subwf	LCD4B_SENDCMD@i& (0+255),w,b
  4355   001A34  A0D8               	btfss	status,0,c
  4356   001A36  EF1F  F00D         	goto	u5701
  4357   001A3A  EF21  F00D         	goto	u5700
  4358   001A3E                     u5701:
  4359   001A3E  EFDB  F00C         	goto	l8779
  4360   001A42                     u5700:
  4361   001A42                     
  4362                           ; BSR set to: 1
  4363   001A42  C10E  F10A         	movff	LCD4B_SENDCMD@lcd,sendenable@lcd
  4364   001A46  EC6E  F014         	call	_sendenable	;wreg free
  4365   001A4A                     
  4366                           ;AECUL/LCD_LM016L/LCD.c: 136:         for (int i = 0; i < 4; i++){
  4367   001A4A  0E00               	movlw	0
  4368   001A4C  0101               	movlb	1	; () banked
  4369   001A4E  6F16               	movwf	(LCD4B_SENDCMD@i_2497+1)& (0+255),b
  4370   001A50  0E00               	movlw	0
  4371   001A52  6F15               	movwf	LCD4B_SENDCMD@i_2497& (0+255),b
  4372   001A54                     l8795:
  4373                           
  4374                           ; BSR set to: 1
  4375                           ;AECUL/LCD_LM016L/LCD.c: 137:             pinptr.pin = lcd->datapins[i];
  4376   001A54  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4377   001A56  2515               	addwf	LCD4B_SENDCMD@i_2497& (0+255),w,b
  4378   001A58  6ED9               	movwf	fsr2l,c
  4379   001A5A  6ADA               	clrf	fsr2h,c
  4380   001A5C  0E04               	movlw	4
  4381   001A5E  26D9               	addwf	fsr2l,f,c
  4382   001A60  50DF               	movf	indf2,w,c
  4383   001A62  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4384   001A64  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4385   001A66  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4386   001A68  4710               	rlncf	??_LCD4B_SENDCMD& (0+255),f,b
  4387   001A6A  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4388   001A6C  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4389   001A6E  0BC7               	andlw	-57
  4390   001A70  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4391   001A72  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4392                           
  4393                           ;AECUL/LCD_LM016L/LCD.c: 138:             pinptr.port = lcd->dataport[i];
  4394   001A74  510E               	movf	LCD4B_SENDCMD@lcd& (0+255),w,b
  4395   001A76  2515               	addwf	LCD4B_SENDCMD@i_2497& (0+255),w,b
  4396   001A78  6ED9               	movwf	fsr2l,c
  4397   001A7A  6ADA               	clrf	fsr2h,c
  4398   001A7C  0E08               	movlw	8
  4399   001A7E  26D9               	addwf	fsr2l,f,c
  4400   001A80  50DF               	movf	indf2,w,c
  4401   001A82  6F10               	movwf	??_LCD4B_SENDCMD& (0+255),b
  4402   001A84  5117               	movf	LCD4B_SENDCMD@pinptr& (0+255),w,b
  4403   001A86  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4404   001A88  0BF8               	andlw	-8
  4405   001A8A  1910               	xorwf	??_LCD4B_SENDCMD& (0+255),w,b
  4406   001A8C  6F17               	movwf	LCD4B_SENDCMD@pinptr& (0+255),b
  4407   001A8E                     
  4408                           ; BSR set to: 1
  4409   001A8E  0E17               	movlw	low LCD4B_SENDCMD@pinptr
  4410   001A90  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4411   001A92  0E01               	movlw	high LCD4B_SENDCMD@pinptr
  4412   001A94  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4413   001A96  C115  F110         	movff	LCD4B_SENDCMD@i_2497,??_LCD4B_SENDCMD
  4414   001A9A  C10F  F111         	movff	LCD4B_SENDCMD@cmd,??_LCD4B_SENDCMD+1
  4415   001A9E  2B10               	incf	??_LCD4B_SENDCMD& (0+255),f,b
  4416   001AA0  EF54  F00D         	goto	u5714
  4417   001AA4                     u5715:
  4418   001AA4  90D8               	bcf	status,0,c
  4419   001AA6  3311               	rrcf	(??_LCD4B_SENDCMD+1)& (0+255),f,b
  4420   001AA8                     u5714:
  4421   001AA8  2F10               	decfsz	??_LCD4B_SENDCMD& (0+255),f,b
  4422   001AAA  EF52  F00D         	goto	u5715
  4423   001AAE  0101               	movlb	1	; () banked
  4424   001AB0  5111               	movf	(??_LCD4B_SENDCMD+1)& (0+255),w,b
  4425   001AB2  0B01               	andlw	1
  4426   001AB4  6F04               	movwf	PINWRITE@log& (0+255),b
  4427   001AB6  ECFB  F00E         	call	_PINWRITE	;wreg free
  4428   001ABA                     
  4429                           ;AECUL/LCD_LM016L/LCD.c: 140:         }
  4430   001ABA  0101               	movlb	1	; () banked
  4431   001ABC  4B15               	infsnz	LCD4B_SENDCMD@i_2497& (0+255),f,b
  4432   001ABE  2B16               	incf	(LCD4B_SENDCMD@i_2497+1)& (0+255),f,b
  4433   001AC0                     
  4434                           ; BSR set to: 1
  4435   001AC0  BF16               	btfsc	(LCD4B_SENDCMD@i_2497+1)& (0+255),7,b
  4436   001AC2  EF6C  F00D         	goto	u5721
  4437   001AC6  5116               	movf	(LCD4B_SENDCMD@i_2497+1)& (0+255),w,b
  4438   001AC8  E109               	bnz	u5720
  4439   001ACA  0E04               	movlw	4
  4440   001ACC  5D15               	subwf	LCD4B_SENDCMD@i_2497& (0+255),w,b
  4441   001ACE  A0D8               	btfss	status,0,c
  4442   001AD0  EF6C  F00D         	goto	u5721
  4443   001AD4  EF6E  F00D         	goto	u5720
  4444   001AD8                     u5721:
  4445   001AD8  EF2A  F00D         	goto	l8795
  4446   001ADC                     u5720:
  4447   001ADC                     
  4448                           ; BSR set to: 1
  4449                           ;AECUL/LCD_LM016L/LCD.c: 141:         ret = sendenable(lcd);
  4450   001ADC  C10E  F10A         	movff	LCD4B_SENDCMD@lcd,sendenable@lcd
  4451   001AE0  EC6E  F014         	call	_sendenable	;wreg free
  4452   001AE4  0101               	movlb	1	; () banked
  4453   001AE6  6F12               	movwf	LCD4B_SENDCMD@ret& (0+255),b
  4454   001AE8                     l8805:
  4455                           
  4456                           ; BSR set to: 1
  4457                           ;AECUL/LCD_LM016L/LCD.c: 143:     return ret;
  4458   001AE8  5112               	movf	LCD4B_SENDCMD@ret& (0+255),w,b
  4459   001AEA                     
  4460                           ; BSR set to: 1
  4461   001AEA  0012               	return		;funcret
  4462   001AEC                     __end_of_LCD4B_SENDCMD:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function _LCD4B_SENDSTR *****************
  4466 ;; Defined at:
  4467 ;;		line 189 in file "AECUL/LCD_LM016L/LCD.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  lcd             1   24[BANK1 ] PTR const struct .
  4470 ;;		 -> lcd(12), 
  4471 ;;  str             1   25[BANK1 ] PTR unsigned char 
  4472 ;;		 -> LCDtemp(4), datestr(10), timestr(10), 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  length          1   27[BANK1 ] unsigned char 
  4475 ;;  str_old         1   26[BANK1 ] PTR unsigned char 
  4476 ;;		 -> LCDtemp(4), datestr(10), timestr(10), 
  4477 ;;  ret             1    0        unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      unsigned char 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4487 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;Total ram usage:        4 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 18
  4494 ;; This function calls:
  4495 ;;		_LCD4B_SENDCHAR
  4496 ;;		_strlen
  4497 ;; This function is called by:
  4498 ;;		_main
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text32
  4503   002CEE                     __ptext32:
  4504                           	callstack 0
  4505   002CEE                     _LCD4B_SENDSTR:
  4506                           	callstack 12
  4507   002CEE                     
  4508                           ;AECUL/LCD_LM016L/LCD.c: 191:     uint8_t *str_old = str;
  4509   002CEE  C119  F11A         	movff	LCD4B_SENDSTR@str,LCD4B_SENDSTR@str_old
  4510   002CF2                     
  4511                           ;AECUL/LCD_LM016L/LCD.c: 192:     uint8_t length = (uint8_t)strlen((const char *)str);
  4512   002CF2  C119  F0D8         	movff	LCD4B_SENDSTR@str,strlen@s
  4513   002CF6  0100               	movlb	0	; () banked
  4514   002CF8  6BD9               	clrf	(strlen@s+1)& (0+255),b
  4515   002CFA  ECA2  F016         	call	_strlen	;wreg free
  4516   002CFE  0100               	movlb	0	; () banked
  4517   002D00  51D8               	movf	?_strlen& (0+255),w,b
  4518   002D02  0101               	movlb	1	; () banked
  4519   002D04  6F1B               	movwf	LCD4B_SENDSTR@length& (0+255),b
  4520   002D06                     
  4521                           ; BSR set to: 1
  4522                           ;AECUL/LCD_LM016L/LCD.c: 193:     if (lcd == ((void*)0)){
  4523   002D06  5118               	movf	LCD4B_SENDSTR@lcd& (0+255),w,b
  4524   002D08  A4D8               	btfss	status,2,c
  4525   002D0A  EF89  F016         	goto	u5881
  4526   002D0E  EF8B  F016         	goto	u5880
  4527   002D12                     u5881:
  4528   002D12  EF98  F016         	goto	l9013
  4529   002D16                     u5880:
  4530   002D16                     
  4531                           ; BSR set to: 1
  4532                           ;AECUL/LCD_LM016L/LCD.c: 195:     }
  4533   002D16  EFA1  F016         	goto	l1166
  4534   002D1A                     l9009:
  4535                           
  4536                           ; BSR set to: 1
  4537   002D1A  C118  F10E         	movff	LCD4B_SENDSTR@lcd,LCD4B_SENDCHAR@lcd
  4538   002D1E  5119               	movf	LCD4B_SENDSTR@str& (0+255),w,b
  4539   002D20  6ED9               	movwf	fsr2l,c
  4540   002D22  6ADA               	clrf	fsr2h,c
  4541   002D24  50DF               	movf	indf2,w,c
  4542   002D26  6F0F               	movwf	LCD4B_SENDCHAR@data& (0+255),b
  4543   002D28  EC76  F00D         	call	_LCD4B_SENDCHAR	;wreg free
  4544   002D2C  0101               	movlb	1	; () banked
  4545   002D2E  2B19               	incf	LCD4B_SENDSTR@str& (0+255),f,b
  4546   002D30                     l9013:
  4547                           
  4548                           ; BSR set to: 1
  4549                           ;AECUL/LCD_LM016L/LCD.c: 197:         while(length--){
  4550   002D30  071B               	decf	LCD4B_SENDSTR@length& (0+255),f,b
  4551   002D32  291B               	incf	LCD4B_SENDSTR@length& (0+255),w,b
  4552   002D34  A4D8               	btfss	status,2,c
  4553   002D36  EF9F  F016         	goto	u5891
  4554   002D3A  EFA1  F016         	goto	u5890
  4555   002D3E                     u5891:
  4556   002D3E  EF8D  F016         	goto	l9009
  4557   002D42                     u5890:
  4558   002D42                     l1166:
  4559                           
  4560                           ; BSR set to: 1
  4561   002D42  0012               	return		;funcret
  4562   002D44                     __end_of_LCD4B_SENDSTR:
  4563                           	callstack 0
  4564                           
  4565 ;; *************** function _strlen *****************
  4566 ;; Defined at:
  4567 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4570 ;;		 -> LCDtemp(4), datestr(10), timestr(10), STR_2(7), 
  4571 ;;		 -> STR_1(7), 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  4574 ;;		 -> LCDtemp(4), datestr(10), timestr(10), STR_2(7), 
  4575 ;;		 -> STR_1(7), 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  2    0[BANK0 ] unsigned int 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4585 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;Total ram usage:        4 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; Hardware stack levels required when called: 10
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_EUSART_SendString
  4596 ;;		_LCD4B_SENDSTR
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text33
  4601   002D44                     __ptext33:
  4602                           	callstack 0
  4603   002D44                     _strlen:
  4604                           	callstack 18
  4605   002D44  C0D8  F0DA         	movff	strlen@s,strlen@a
  4606   002D48  C0D9  F0DB         	movff	strlen@s+1,strlen@a+1
  4607   002D4C  EFAB  F016         	goto	l6315
  4608   002D50                     l6313:
  4609   002D50  0100               	movlb	0	; () banked
  4610   002D52  4BD8               	infsnz	strlen@s& (0+255),f,b
  4611   002D54  2BD9               	incf	(strlen@s+1)& (0+255),f,b
  4612   002D56                     l6315:
  4613   002D56  C0D8  FFF6         	movff	strlen@s,tblptrl
  4614   002D5A  C0D9  FFF7         	movff	strlen@s+1,tblptrh
  4615   002D5E  0E00               	movlw	low (__smallconst shr (0+16))
  4616   002D60  6EF8               	movwf	tblptru,c
  4617   002D62  0E0F               	movlw	(high __ramtop+-1)
  4618   002D64  64F7               	cpfsgt	tblptrh,c
  4619   002D66  D003               	bra	u3817
  4620   002D68  0008               	tblrd		*
  4621   002D6A  50F5               	movf	tablat,w,c
  4622   002D6C  D005               	bra	u3810
  4623   002D6E                     u3817:
  4624   002D6E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4625   002D72  CFF7 FFEA          	movff	tblptrh,fsr0h
  4626   002D76  50EF               	movf	indf0,w,c
  4627   002D78                     u3810:
  4628   002D78  0900               	iorlw	0
  4629   002D7A  A4D8               	btfss	status,2,c
  4630   002D7C  EFC2  F016         	goto	u3821
  4631   002D80  EFC4  F016         	goto	u3820
  4632   002D84                     u3821:
  4633   002D84  EFA8  F016         	goto	l6313
  4634   002D88                     u3820:
  4635   002D88  0100               	movlb	0	; () banked
  4636   002D8A  51DA               	movf	strlen@a& (0+255),w,b
  4637   002D8C  5DD8               	subwf	strlen@s& (0+255),w,b
  4638   002D8E  6FD8               	movwf	?_strlen& (0+255),b
  4639   002D90  51DB               	movf	(strlen@a+1)& (0+255),w,b
  4640   002D92  59D9               	subwfb	(strlen@s+1)& (0+255),w,b
  4641   002D94  6FD9               	movwf	(?_strlen+1)& (0+255),b
  4642   002D96                     
  4643                           ; BSR set to: 0
  4644   002D96  0012               	return		;funcret
  4645   002D98                     __end_of_strlen:
  4646                           	callstack 0
  4647                           
  4648 ;; *************** function _LCD4B_SENDCHAR *****************
  4649 ;; Defined at:
  4650 ;;		line 146 in file "AECUL/LCD_LM016L/LCD.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  lcd             1   14[BANK1 ] PTR const struct .
  4653 ;;		 -> lcd(12), 
  4654 ;;  data            1   15[BANK1 ] unsigned char 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  i               2   21[BANK1 ] int 
  4657 ;;  i               2   19[BANK1 ] int 
  4658 ;;  pinptr          1   23[BANK1 ] struct .
  4659 ;;  ret             1   18[BANK1 ] unsigned char 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      unsigned char 
  4662 ;; Registers used:
  4663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4669 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;Total ram usage:       10 bytes
  4674 ;; Hardware stack levels used: 1
  4675 ;; Hardware stack levels required when called: 17
  4676 ;; This function calls:
  4677 ;;		_PINWRITE
  4678 ;;		_sendenable
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;;		_LCD4B_SENDSTR
  4682 ;;		_LCD4B_SENDSTRPOS
  4683 ;;		_LCD4B_SENDCUSTOMCHAR
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text34
  4688   001AEC                     __ptext34:
  4689                           	callstack 0
  4690   001AEC                     _LCD4B_SENDCHAR:
  4691                           	callstack 12
  4692   001AEC                     
  4693                           ;AECUL/LCD_LM016L/LCD.c: 148:     if (lcd == ((void*)0)){
  4694   001AEC  0101               	movlb	1	; () banked
  4695   001AEE  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4696   001AF0  A4D8               	btfss	status,2,c
  4697   001AF2  EF7D  F00D         	goto	u5731
  4698   001AF6  EF7F  F00D         	goto	u5730
  4699   001AFA                     u5731:
  4700   001AFA  EF83  F00D         	goto	l1143
  4701   001AFE                     u5730:
  4702   001AFE                     
  4703                           ; BSR set to: 1
  4704                           ;AECUL/LCD_LM016L/LCD.c: 149:         ret= 0x00;
  4705   001AFE  0E00               	movlw	0
  4706   001B00  6F12               	movwf	LCD4B_SENDCHAR@ret& (0+255),b
  4707                           
  4708                           ;AECUL/LCD_LM016L/LCD.c: 150:     }
  4709   001B02  EF46  F00E         	goto	l8853
  4710   001B06                     l1143:
  4711                           
  4712                           ; BSR set to: 1
  4713                           ;AECUL/LCD_LM016L/LCD.c: 152:         PinConfig_t pinptr = {.pin = lcd->REpin, .port=lcd
      +                          ->REport,
  4714   001B06  C08E  F117         	movff	LCD4B_SENDCHAR@F3689,LCD4B_SENDCHAR@pinptr
  4715   001B0A                     
  4716                           ; BSR set to: 1
  4717   001B0A  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4718   001B0C  6ED9               	movwf	fsr2l,c
  4719   001B0E  6ADA               	clrf	fsr2h,c
  4720   001B10  0E01               	movlw	1
  4721   001B12  26D9               	addwf	fsr2l,f,c
  4722   001B14  50DF               	movf	indf2,w,c
  4723   001B16  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4724   001B18  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4725   001B1A  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4726   001B1C  0BF8               	andlw	-8
  4727   001B1E  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4728   001B20  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4729   001B22  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4730   001B24  6ED9               	movwf	fsr2l,c
  4731   001B26  6ADA               	clrf	fsr2h,c
  4732   001B28  50DF               	movf	indf2,w,c
  4733   001B2A  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4734   001B2C  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4735   001B2E  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4736   001B30  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4737   001B32  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4738   001B34  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4739   001B36  0BC7               	andlw	-57
  4740   001B38  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4741   001B3A  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4742   001B3C                     
  4743                           ; BSR set to: 1
  4744   001B3C  9D17               	bcf	LCD4B_SENDCHAR@pinptr& (0+255),6,b
  4745   001B3E                     
  4746                           ; BSR set to: 1
  4747   001B3E  9F17               	bcf	LCD4B_SENDCHAR@pinptr& (0+255),7,b
  4748   001B40                     
  4749                           ; BSR set to: 1
  4750   001B40  0E17               	movlw	low LCD4B_SENDCHAR@pinptr
  4751   001B42  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4752   001B44  0E01               	movlw	high LCD4B_SENDCHAR@pinptr
  4753   001B46  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4754   001B48  0E01               	movlw	1
  4755   001B4A  6F04               	movwf	PINWRITE@log& (0+255),b
  4756   001B4C  ECFB  F00E         	call	_PINWRITE	;wreg free
  4757   001B50                     
  4758                           ;AECUL/LCD_LM016L/LCD.c: 155:         for (int i = 0; i < 4; i++){
  4759   001B50  0E00               	movlw	0
  4760   001B52  0101               	movlb	1	; () banked
  4761   001B54  6F14               	movwf	(LCD4B_SENDCHAR@i+1)& (0+255),b
  4762   001B56  0E00               	movlw	0
  4763   001B58  6F13               	movwf	LCD4B_SENDCHAR@i& (0+255),b
  4764   001B5A                     l8827:
  4765                           
  4766                           ; BSR set to: 1
  4767                           ;AECUL/LCD_LM016L/LCD.c: 156:             pinptr.pin = lcd->datapins[i];
  4768   001B5A  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4769   001B5C  2513               	addwf	LCD4B_SENDCHAR@i& (0+255),w,b
  4770   001B5E  6ED9               	movwf	fsr2l,c
  4771   001B60  6ADA               	clrf	fsr2h,c
  4772   001B62  0E04               	movlw	4
  4773   001B64  26D9               	addwf	fsr2l,f,c
  4774   001B66  50DF               	movf	indf2,w,c
  4775   001B68  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4776   001B6A  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4777   001B6C  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4778   001B6E  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4779   001B70  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4780   001B72  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4781   001B74  0BC7               	andlw	-57
  4782   001B76  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4783   001B78  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4784                           
  4785                           ;AECUL/LCD_LM016L/LCD.c: 157:             pinptr.port = lcd->dataport[i];
  4786   001B7A  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4787   001B7C  2513               	addwf	LCD4B_SENDCHAR@i& (0+255),w,b
  4788   001B7E  6ED9               	movwf	fsr2l,c
  4789   001B80  6ADA               	clrf	fsr2h,c
  4790   001B82  0E08               	movlw	8
  4791   001B84  26D9               	addwf	fsr2l,f,c
  4792   001B86  50DF               	movf	indf2,w,c
  4793   001B88  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4794   001B8A  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4795   001B8C  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4796   001B8E  0BF8               	andlw	-8
  4797   001B90  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4798   001B92  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4799   001B94                     
  4800                           ; BSR set to: 1
  4801   001B94  0E17               	movlw	low LCD4B_SENDCHAR@pinptr
  4802   001B96  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4803   001B98  0E01               	movlw	high LCD4B_SENDCHAR@pinptr
  4804   001B9A  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4805   001B9C  C113  F110         	movff	LCD4B_SENDCHAR@i,??_LCD4B_SENDCHAR
  4806   001BA0  0E04               	movlw	4
  4807   001BA2  2710               	addwf	??_LCD4B_SENDCHAR& (0+255),f,b
  4808   001BA4  C10F  F111         	movff	LCD4B_SENDCHAR@data,??_LCD4B_SENDCHAR+1
  4809   001BA8  2B10               	incf	??_LCD4B_SENDCHAR& (0+255),f,b
  4810   001BAA  EFD9  F00D         	goto	u5744
  4811   001BAE                     u5745:
  4812   001BAE  90D8               	bcf	status,0,c
  4813   001BB0  3311               	rrcf	(??_LCD4B_SENDCHAR+1)& (0+255),f,b
  4814   001BB2                     u5744:
  4815   001BB2  2F10               	decfsz	??_LCD4B_SENDCHAR& (0+255),f,b
  4816   001BB4  EFD7  F00D         	goto	u5745
  4817   001BB8  0101               	movlb	1	; () banked
  4818   001BBA  5111               	movf	(??_LCD4B_SENDCHAR+1)& (0+255),w,b
  4819   001BBC  0B01               	andlw	1
  4820   001BBE  6F04               	movwf	PINWRITE@log& (0+255),b
  4821   001BC0  ECFB  F00E         	call	_PINWRITE	;wreg free
  4822   001BC4                     
  4823                           ;AECUL/LCD_LM016L/LCD.c: 159:         }
  4824   001BC4  0101               	movlb	1	; () banked
  4825   001BC6  4B13               	infsnz	LCD4B_SENDCHAR@i& (0+255),f,b
  4826   001BC8  2B14               	incf	(LCD4B_SENDCHAR@i+1)& (0+255),f,b
  4827   001BCA                     
  4828                           ; BSR set to: 1
  4829   001BCA  BF14               	btfsc	(LCD4B_SENDCHAR@i+1)& (0+255),7,b
  4830   001BCC  EFF1  F00D         	goto	u5751
  4831   001BD0  5114               	movf	(LCD4B_SENDCHAR@i+1)& (0+255),w,b
  4832   001BD2  E109               	bnz	u5750
  4833   001BD4  0E04               	movlw	4
  4834   001BD6  5D13               	subwf	LCD4B_SENDCHAR@i& (0+255),w,b
  4835   001BD8  A0D8               	btfss	status,0,c
  4836   001BDA  EFF1  F00D         	goto	u5751
  4837   001BDE  EFF3  F00D         	goto	u5750
  4838   001BE2                     u5751:
  4839   001BE2  EFAD  F00D         	goto	l8827
  4840   001BE6                     u5750:
  4841   001BE6                     
  4842                           ; BSR set to: 1
  4843   001BE6  C10E  F10A         	movff	LCD4B_SENDCHAR@lcd,sendenable@lcd
  4844   001BEA  EC6E  F014         	call	_sendenable	;wreg free
  4845   001BEE                     
  4846                           ;AECUL/LCD_LM016L/LCD.c: 161:         for (int i = 0; i < 4; i++){
  4847   001BEE  0E00               	movlw	0
  4848   001BF0  0101               	movlb	1	; () banked
  4849   001BF2  6F16               	movwf	(LCD4B_SENDCHAR@i_2519+1)& (0+255),b
  4850   001BF4  0E00               	movlw	0
  4851   001BF6  6F15               	movwf	LCD4B_SENDCHAR@i_2519& (0+255),b
  4852   001BF8                     l8843:
  4853                           
  4854                           ; BSR set to: 1
  4855                           ;AECUL/LCD_LM016L/LCD.c: 162:             pinptr.pin = lcd->datapins[i];
  4856   001BF8  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4857   001BFA  2515               	addwf	LCD4B_SENDCHAR@i_2519& (0+255),w,b
  4858   001BFC  6ED9               	movwf	fsr2l,c
  4859   001BFE  6ADA               	clrf	fsr2h,c
  4860   001C00  0E04               	movlw	4
  4861   001C02  26D9               	addwf	fsr2l,f,c
  4862   001C04  50DF               	movf	indf2,w,c
  4863   001C06  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4864   001C08  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4865   001C0A  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4866   001C0C  4710               	rlncf	??_LCD4B_SENDCHAR& (0+255),f,b
  4867   001C0E  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4868   001C10  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4869   001C12  0BC7               	andlw	-57
  4870   001C14  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4871   001C16  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4872                           
  4873                           ;AECUL/LCD_LM016L/LCD.c: 163:             pinptr.port = lcd->dataport[i];
  4874   001C18  510E               	movf	LCD4B_SENDCHAR@lcd& (0+255),w,b
  4875   001C1A  2515               	addwf	LCD4B_SENDCHAR@i_2519& (0+255),w,b
  4876   001C1C  6ED9               	movwf	fsr2l,c
  4877   001C1E  6ADA               	clrf	fsr2h,c
  4878   001C20  0E08               	movlw	8
  4879   001C22  26D9               	addwf	fsr2l,f,c
  4880   001C24  50DF               	movf	indf2,w,c
  4881   001C26  6F10               	movwf	??_LCD4B_SENDCHAR& (0+255),b
  4882   001C28  5117               	movf	LCD4B_SENDCHAR@pinptr& (0+255),w,b
  4883   001C2A  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4884   001C2C  0BF8               	andlw	-8
  4885   001C2E  1910               	xorwf	??_LCD4B_SENDCHAR& (0+255),w,b
  4886   001C30  6F17               	movwf	LCD4B_SENDCHAR@pinptr& (0+255),b
  4887   001C32                     
  4888                           ; BSR set to: 1
  4889   001C32  0E17               	movlw	low LCD4B_SENDCHAR@pinptr
  4890   001C34  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  4891   001C36  0E01               	movlw	high LCD4B_SENDCHAR@pinptr
  4892   001C38  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  4893   001C3A  C115  F110         	movff	LCD4B_SENDCHAR@i_2519,??_LCD4B_SENDCHAR
  4894   001C3E  C10F  F111         	movff	LCD4B_SENDCHAR@data,??_LCD4B_SENDCHAR+1
  4895   001C42  2B10               	incf	??_LCD4B_SENDCHAR& (0+255),f,b
  4896   001C44  EF26  F00E         	goto	u5764
  4897   001C48                     u5765:
  4898   001C48  90D8               	bcf	status,0,c
  4899   001C4A  3311               	rrcf	(??_LCD4B_SENDCHAR+1)& (0+255),f,b
  4900   001C4C                     u5764:
  4901   001C4C  2F10               	decfsz	??_LCD4B_SENDCHAR& (0+255),f,b
  4902   001C4E  EF24  F00E         	goto	u5765
  4903   001C52  0101               	movlb	1	; () banked
  4904   001C54  5111               	movf	(??_LCD4B_SENDCHAR+1)& (0+255),w,b
  4905   001C56  0B01               	andlw	1
  4906   001C58  6F04               	movwf	PINWRITE@log& (0+255),b
  4907   001C5A  ECFB  F00E         	call	_PINWRITE	;wreg free
  4908   001C5E                     
  4909                           ;AECUL/LCD_LM016L/LCD.c: 165:         }
  4910   001C5E  0101               	movlb	1	; () banked
  4911   001C60  4B15               	infsnz	LCD4B_SENDCHAR@i_2519& (0+255),f,b
  4912   001C62  2B16               	incf	(LCD4B_SENDCHAR@i_2519+1)& (0+255),f,b
  4913   001C64                     
  4914                           ; BSR set to: 1
  4915   001C64  BF16               	btfsc	(LCD4B_SENDCHAR@i_2519+1)& (0+255),7,b
  4916   001C66  EF3E  F00E         	goto	u5771
  4917   001C6A  5116               	movf	(LCD4B_SENDCHAR@i_2519+1)& (0+255),w,b
  4918   001C6C  E109               	bnz	u5770
  4919   001C6E  0E04               	movlw	4
  4920   001C70  5D15               	subwf	LCD4B_SENDCHAR@i_2519& (0+255),w,b
  4921   001C72  A0D8               	btfss	status,0,c
  4922   001C74  EF3E  F00E         	goto	u5771
  4923   001C78  EF40  F00E         	goto	u5770
  4924   001C7C                     u5771:
  4925   001C7C  EFFC  F00D         	goto	l8843
  4926   001C80                     u5770:
  4927   001C80                     
  4928                           ; BSR set to: 1
  4929                           ;AECUL/LCD_LM016L/LCD.c: 166:         ret = sendenable(lcd);
  4930   001C80  C10E  F10A         	movff	LCD4B_SENDCHAR@lcd,sendenable@lcd
  4931   001C84  EC6E  F014         	call	_sendenable	;wreg free
  4932   001C88  0101               	movlb	1	; () banked
  4933   001C8A  6F12               	movwf	LCD4B_SENDCHAR@ret& (0+255),b
  4934   001C8C                     l8853:
  4935                           
  4936                           ; BSR set to: 1
  4937                           ;AECUL/LCD_LM016L/LCD.c: 168:     return ret;
  4938   001C8C  5112               	movf	LCD4B_SENDCHAR@ret& (0+255),w,b
  4939   001C8E                     
  4940                           ; BSR set to: 1
  4941   001C8E  0012               	return		;funcret
  4942   001C90                     __end_of_LCD4B_SENDCHAR:
  4943                           	callstack 0
  4944                           
  4945 ;; *************** function _sendenable *****************
  4946 ;; Defined at:
  4947 ;;		line 247 in file "AECUL/LCD_LM016L/LCD.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  lcd             1   10[BANK1 ] PTR const struct .
  4950 ;;		 -> lcd(12), 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  pinEN           1   13[BANK1 ] struct .
  4953 ;;  ret             1   12[BANK1 ] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      unsigned char 
  4956 ;; Registers used:
  4957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4963 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;Total ram usage:        4 bytes
  4968 ;; Hardware stack levels used: 1
  4969 ;; Hardware stack levels required when called: 16
  4970 ;; This function calls:
  4971 ;;		_PINWRITE
  4972 ;; This function is called by:
  4973 ;;		_LCD4B_SENDCMD
  4974 ;;		_LCD4B_SENDCHAR
  4975 ;;		_LCD4B_SENDCHARPOS
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text35
  4980   0028DC                     __ptext35:
  4981                           	callstack 0
  4982   0028DC                     _sendenable:
  4983                           	callstack 12
  4984   0028DC                     
  4985                           ;AECUL/LCD_LM016L/LCD.c: 249:     PinConfig_t pinEN = {.pin = lcd->ENpin, .port=lcd->ENp
      +                          ort,
  4986   0028DC  C08D  F10D         	movff	sendenable@F3731,sendenable@pinEN
  4987   0028E0  0101               	movlb	1	; () banked
  4988   0028E2  510A               	movf	sendenable@lcd& (0+255),w,b
  4989   0028E4  6ED9               	movwf	fsr2l,c
  4990   0028E6  6ADA               	clrf	fsr2h,c
  4991   0028E8  0E03               	movlw	3
  4992   0028EA  26D9               	addwf	fsr2l,f,c
  4993   0028EC  50DF               	movf	indf2,w,c
  4994   0028EE  6F0B               	movwf	??_sendenable& (0+255),b
  4995   0028F0  510D               	movf	sendenable@pinEN& (0+255),w,b
  4996   0028F2  190B               	xorwf	??_sendenable& (0+255),w,b
  4997   0028F4  0BF8               	andlw	-8
  4998   0028F6  190B               	xorwf	??_sendenable& (0+255),w,b
  4999   0028F8  6F0D               	movwf	sendenable@pinEN& (0+255),b
  5000   0028FA                     
  5001                           ; BSR set to: 1
  5002   0028FA  510A               	movf	sendenable@lcd& (0+255),w,b
  5003   0028FC  6ED9               	movwf	fsr2l,c
  5004   0028FE  6ADA               	clrf	fsr2h,c
  5005   002900  0E02               	movlw	2
  5006   002902  26D9               	addwf	fsr2l,f,c
  5007   002904  50DF               	movf	indf2,w,c
  5008   002906  6F0B               	movwf	??_sendenable& (0+255),b
  5009   002908  470B               	rlncf	??_sendenable& (0+255),f,b
  5010   00290A  470B               	rlncf	??_sendenable& (0+255),f,b
  5011   00290C  470B               	rlncf	??_sendenable& (0+255),f,b
  5012   00290E  510D               	movf	sendenable@pinEN& (0+255),w,b
  5013   002910  190B               	xorwf	??_sendenable& (0+255),w,b
  5014   002912  0BC7               	andlw	-57
  5015   002914  190B               	xorwf	??_sendenable& (0+255),w,b
  5016   002916  6F0D               	movwf	sendenable@pinEN& (0+255),b
  5017   002918                     
  5018                           ; BSR set to: 1
  5019   002918  9D0D               	bcf	sendenable@pinEN& (0+255),6,b
  5020   00291A                     
  5021                           ; BSR set to: 1
  5022   00291A  9F0D               	bcf	sendenable@pinEN& (0+255),7,b
  5023   00291C                     
  5024                           ; BSR set to: 1
  5025   00291C  0E0D               	movlw	low sendenable@pinEN
  5026   00291E  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  5027   002920  0E01               	movlw	high sendenable@pinEN
  5028   002922  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  5029   002924  0E01               	movlw	1
  5030   002926  6F04               	movwf	PINWRITE@log& (0+255),b
  5031   002928  ECFB  F00E         	call	_PINWRITE	;wreg free
  5032   00292C                     
  5033                           ;AECUL/LCD_LM016L/LCD.c: 252:     _delay((unsigned long)((10)*(16000000L/4000000.0)));
  5034   00292C  0E0D               	movlw	13
  5035   00292E                     u6067:
  5036   00292E  2EE8               	decfsz	wreg,f,c
  5037   002930  D7FE               	bra	u6067
  5038   002932  0000               	nop	
  5039   002934                     
  5040                           ;AECUL/LCD_LM016L/LCD.c: 253:     ret = PINWRITE(&pinEN,0);
  5041   002934  0E0D               	movlw	low sendenable@pinEN
  5042   002936  0101               	movlb	1	; () banked
  5043   002938  6F02               	movwf	PINWRITE@pinconfig& (0+255),b
  5044   00293A  0E01               	movlw	high sendenable@pinEN
  5045   00293C  6F03               	movwf	(PINWRITE@pinconfig+1)& (0+255),b
  5046   00293E  0E00               	movlw	0
  5047   002940  6F04               	movwf	PINWRITE@log& (0+255),b
  5048   002942  ECFB  F00E         	call	_PINWRITE	;wreg free
  5049   002946  0101               	movlb	1	; () banked
  5050   002948  6F0C               	movwf	sendenable@ret& (0+255),b
  5051   00294A                     
  5052                           ; BSR set to: 1
  5053                           ;AECUL/LCD_LM016L/LCD.c: 254:     return ret;
  5054   00294A  510C               	movf	sendenable@ret& (0+255),w,b
  5055   00294C                     
  5056                           ; BSR set to: 1
  5057   00294C  0012               	return		;funcret
  5058   00294E                     __end_of_sendenable:
  5059                           	callstack 0
  5060                           
  5061 ;; *************** function _PINWRITE *****************
  5062 ;; Defined at:
  5063 ;;		line 63 in file "AECUL/LCD_LM016L/LCD.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  pinconfig       2    2[BANK1 ] PTR const struct .
  5066 ;;		 -> sendenable@pinEN(1), send4bit@pinobj(1), LCD4B_SENDCHARPOS@pinptr(1), LCD4B_SENDCHAR@pinptr(1), 
  5067 ;;		 -> LCD4B_SENDCMD@pinptr(1), LCD4B_SET@pinptr_2471(1), LCD4B_SET@pinptr(1), 
  5068 ;;  log             1    4[BANK1 ] unsigned char 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  ret             1   37[BANK0 ] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      unsigned char 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5080 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;Total ram usage:        9 bytes
  5085 ;; Hardware stack levels used: 1
  5086 ;; Hardware stack levels required when called: 15
  5087 ;; This function calls:
  5088 ;;		_printf
  5089 ;; This function is called by:
  5090 ;;		_PINSTART
  5091 ;;		_LCD4B_SENDCMD
  5092 ;;		_LCD4B_SENDCHAR
  5093 ;;		_sendenable
  5094 ;;		_LCD4B_SENDCHARPOS
  5095 ;;		_send4bit
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text36
  5100   001DF6                     __ptext36:
  5101                           	callstack 0
  5102   001DF6                     _PINWRITE:
  5103                           	callstack 13
  5104   001DF6                     
  5105                           ;AECUL/LCD_LM016L/LCD.c: 64:     uint8_t ret = 0x01;
  5106   001DF6  0E01               	movlw	1
  5107   001DF8  0100               	movlb	0	; () banked
  5108   001DFA  6FFD               	movwf	PINWRITE@ret& (0+255),b
  5109   001DFC                     
  5110                           ; BSR set to: 0
  5111                           ;AECUL/LCD_LM016L/LCD.c: 65:     if((pinconfig->logic > 1) || (pinconfig == ((void*)0)))
      +                          {
  5112   001DFC  C102  FFD9         	movff	PINWRITE@pinconfig,fsr2l
  5113   001E00  C103  FFDA         	movff	PINWRITE@pinconfig+1,fsr2h
  5114   001E04  0101               	movlb	1	; () banked
  5115   001E06  BEDF               	btfsc	indf2,7,c
  5116   001E08  EF08  F00F         	goto	u5631
  5117   001E0C  EF0C  F00F         	goto	u5630
  5118   001E10                     u5631:
  5119   001E10  6B05               	clrf	??_PINWRITE& (0+255),b
  5120   001E12  2B05               	incf	??_PINWRITE& (0+255),f,b
  5121   001E14  EF0E  F00F         	goto	u5638
  5122   001E18                     u5630:
  5123   001E18  0101               	movlb	1	; () banked
  5124   001E1A  6B05               	clrf	??_PINWRITE& (0+255),b
  5125   001E1C                     u5638:
  5126   001E1C  0E02               	movlw	2
  5127   001E1E  6105               	cpfslt	??_PINWRITE& (0+255),b
  5128   001E20  EF14  F00F         	goto	u5641
  5129   001E24  EF16  F00F         	goto	u5640
  5130   001E28                     u5641:
  5131   001E28  EF1F  F00F         	goto	l8717
  5132   001E2C                     u5640:
  5133   001E2C                     
  5134                           ; BSR set to: 1
  5135   001E2C  5102               	movf	PINWRITE@pinconfig& (0+255),w,b
  5136   001E2E  1103               	iorwf	(PINWRITE@pinconfig+1)& (0+255),w,b
  5137   001E30  A4D8               	btfss	status,2,c
  5138   001E32  EF1D  F00F         	goto	u5651
  5139   001E36  EF1F  F00F         	goto	u5650
  5140   001E3A                     u5651:
  5141   001E3A  EF86  F00F         	goto	l8729
  5142   001E3E                     u5650:
  5143   001E3E                     l8717:
  5144                           
  5145                           ; BSR set to: 1
  5146                           ;AECUL/LCD_LM016L/LCD.c: 66:         ret = 0x00;
  5147   001E3E  0E00               	movlw	0
  5148   001E40  0100               	movlb	0	; () banked
  5149   001E42  6FFD               	movwf	PINWRITE@ret& (0+255),b
  5150   001E44                     
  5151                           ; BSR set to: 0
  5152                           ;AECUL/LCD_LM016L/LCD.c: 67:         printf("User Entered invalid Logic or NULL POINTER\
      +                          n");
  5153   001E44  0E54               	movlw	low STR_11
  5154   001E46  6FFC               	movwf	printf@fmt& (0+255),b
  5155   001E48  ECB7  F019         	call	_printf	;wreg free
  5156                           
  5157                           ;AECUL/LCD_LM016L/LCD.c: 68:     }
  5158   001E4C  EF9B  F00F         	goto	l8731
  5159   001E50                     l8721:
  5160                           
  5161                           ; BSR set to: 1
  5162                           ;AECUL/LCD_LM016L/LCD.c: 72:                 (*LAT_Reg[pinconfig->port] &= ~(((uint8_t)1
      +                          ) << pinconfig->pin));
  5163   001E50  C102  FFD9         	movff	PINWRITE@pinconfig,fsr2l
  5164   001E54  C103  FFDA         	movff	PINWRITE@pinconfig+1,fsr2h
  5165   001E58  30DF               	rrcf	223,w,c
  5166   001E5A  32E8               	rrcf	wreg,f,c
  5167   001E5C  32E8               	rrcf	wreg,f,c
  5168   001E5E  0B07               	andlw	7
  5169   001E60  6F05               	movwf	??_PINWRITE& (0+255),b
  5170   001E62  0E01               	movlw	1
  5171   001E64  6F06               	movwf	(??_PINWRITE+1)& (0+255),b
  5172   001E66  2B05               	incf	??_PINWRITE& (0+255),f,b
  5173   001E68  EF38  F00F         	goto	u5664
  5174   001E6C                     u5665:
  5175   001E6C  90D8               	bcf	status,0,c
  5176   001E6E  3706               	rlcf	(??_PINWRITE+1)& (0+255),f,b
  5177   001E70                     u5664:
  5178   001E70  2F05               	decfsz	??_PINWRITE& (0+255),f,b
  5179   001E72  EF36  F00F         	goto	u5665
  5180   001E76  0101               	movlb	1	; () banked
  5181   001E78  5106               	movf	(??_PINWRITE+1)& (0+255),w,b
  5182   001E7A  0AFF               	xorlw	255
  5183   001E7C  6F07               	movwf	(??_PINWRITE+2)& (0+255),b
  5184   001E7E  C102  FFD9         	movff	PINWRITE@pinconfig,fsr2l
  5185   001E82  C103  FFDA         	movff	PINWRITE@pinconfig+1,fsr2h
  5186   001E86  50DF               	movf	223,w,c
  5187   001E88  0B07               	andlw	7
  5188   001E8A  0D02               	mullw	2
  5189   001E8C  50F3               	movf	243,w,c
  5190   001E8E  0FB6               	addlw	low _LAT_Reg
  5191   001E90  6ED9               	movwf	fsr2l,c
  5192   001E92  6ADA               	clrf	fsr2h,c
  5193   001E94  CFDE F108          	movff	postinc2,??_PINWRITE+3
  5194   001E98  CFDD F109          	movff	postdec2,??_PINWRITE+4
  5195   001E9C  C108  FFD9         	movff	??_PINWRITE+3,fsr2l
  5196   001EA0  C109  FFDA         	movff	??_PINWRITE+4,fsr2h
  5197   001EA4  5107               	movf	(??_PINWRITE+2)& (0+255),w,b
  5198   001EA6  16DF               	andwf	indf2,f,c
  5199                           
  5200                           ;AECUL/LCD_LM016L/LCD.c: 73:                 break;
  5201   001EA8  EF9B  F00F         	goto	l8731
  5202   001EAC                     l8723:
  5203                           
  5204                           ; BSR set to: 1
  5205                           ;AECUL/LCD_LM016L/LCD.c: 75:                 (*LAT_Reg[pinconfig->port] |= (((uint8_t)1)
      +                           << pinconfig->pin));
  5206   001EAC  C102  FFD9         	movff	PINWRITE@pinconfig,fsr2l
  5207   001EB0  C103  FFDA         	movff	PINWRITE@pinconfig+1,fsr2h
  5208   001EB4  30DF               	rrcf	223,w,c
  5209   001EB6  32E8               	rrcf	wreg,f,c
  5210   001EB8  32E8               	rrcf	wreg,f,c
  5211   001EBA  0B07               	andlw	7
  5212   001EBC  6F05               	movwf	??_PINWRITE& (0+255),b
  5213   001EBE  0E01               	movlw	1
  5214   001EC0  6F06               	movwf	(??_PINWRITE+1)& (0+255),b
  5215   001EC2  2B05               	incf	??_PINWRITE& (0+255),f,b
  5216   001EC4  EF66  F00F         	goto	u5674
  5217   001EC8                     u5675:
  5218   001EC8  90D8               	bcf	status,0,c
  5219   001ECA  3706               	rlcf	(??_PINWRITE+1)& (0+255),f,b
  5220   001ECC                     u5674:
  5221   001ECC  2F05               	decfsz	??_PINWRITE& (0+255),f,b
  5222   001ECE  EF64  F00F         	goto	u5675
  5223   001ED2  C102  FFD9         	movff	PINWRITE@pinconfig,fsr2l
  5224   001ED6  C103  FFDA         	movff	PINWRITE@pinconfig+1,fsr2h
  5225   001EDA  50DF               	movf	223,w,c
  5226   001EDC  0B07               	andlw	7
  5227   001EDE  0D02               	mullw	2
  5228   001EE0  50F3               	movf	243,w,c
  5229   001EE2  0FB6               	addlw	low _LAT_Reg
  5230   001EE4  6ED9               	movwf	fsr2l,c
  5231   001EE6  6ADA               	clrf	fsr2h,c
  5232   001EE8  CFDE F107          	movff	postinc2,??_PINWRITE+2
  5233   001EEC  CFDD F108          	movff	postdec2,??_PINWRITE+3
  5234   001EF0  C107  FFD9         	movff	??_PINWRITE+2,fsr2l
  5235   001EF4  C108  FFDA         	movff	??_PINWRITE+3,fsr2h
  5236   001EF8  0101               	movlb	1	; () banked
  5237   001EFA  5106               	movf	(??_PINWRITE+1)& (0+255),w,b
  5238   001EFC  12DF               	iorwf	indf2,f,c
  5239                           
  5240                           ;AECUL/LCD_LM016L/LCD.c: 76:                 break;
  5241   001EFE  EF9B  F00F         	goto	l8731
  5242   001F02                     l8725:
  5243                           
  5244                           ; BSR set to: 1
  5245                           ;AECUL/LCD_LM016L/LCD.c: 78:                 ret = 0x00;
  5246   001F02  0E00               	movlw	0
  5247   001F04  0100               	movlb	0	; () banked
  5248   001F06  6FFD               	movwf	PINWRITE@ret& (0+255),b
  5249                           
  5250                           ;AECUL/LCD_LM016L/LCD.c: 79:                 break;
  5251   001F08  EF9B  F00F         	goto	l8731
  5252   001F0C                     l8729:
  5253                           
  5254                           ; BSR set to: 1
  5255   001F0C  5104               	movf	PINWRITE@log& (0+255),w,b
  5256   001F0E  6F05               	movwf	??_PINWRITE& (0+255),b
  5257   001F10  6B06               	clrf	(??_PINWRITE+1)& (0+255),b
  5258                           
  5259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5260                           ; Switch size 1, requested type "simple"
  5261                           ; Number of cases is 1, Range of values is 0 to 0
  5262                           ; switch strategies available:
  5263                           ; Name         Instructions Cycles
  5264                           ; simple_byte            4     3 (average)
  5265                           ;	Chosen strategy is simple_byte
  5266   001F12  5106               	movf	(??_PINWRITE+1)& (0+255),w,b
  5267   001F14  0A00               	xorlw	0	; case 0
  5268   001F16  B4D8               	btfsc	status,2,c
  5269   001F18  EF90  F00F         	goto	l9425
  5270   001F1C  EF81  F00F         	goto	l8725
  5271   001F20                     l9425:
  5272                           
  5273                           ; BSR set to: 1
  5274                           ; Switch size 1, requested type "simple"
  5275                           ; Number of cases is 2, Range of values is 0 to 1
  5276                           ; switch strategies available:
  5277                           ; Name         Instructions Cycles
  5278                           ; simple_byte            7     4 (average)
  5279                           ;	Chosen strategy is simple_byte
  5280   001F20  5105               	movf	??_PINWRITE& (0+255),w,b
  5281   001F22  0A00               	xorlw	0	; case 0
  5282   001F24  B4D8               	btfsc	status,2,c
  5283   001F26  EF28  F00F         	goto	l8721
  5284   001F2A  0A01               	xorlw	1	; case 1
  5285   001F2C  B4D8               	btfsc	status,2,c
  5286   001F2E  EF56  F00F         	goto	l8723
  5287   001F32  EF81  F00F         	goto	l8725
  5288   001F36                     l8731:
  5289                           
  5290                           ;AECUL/LCD_LM016L/LCD.c: 82:     return ret;
  5291   001F36  0100               	movlb	0	; () banked
  5292   001F38  51FD               	movf	PINWRITE@ret& (0+255),w,b
  5293   001F3A                     
  5294                           ; BSR set to: 0
  5295   001F3A  0012               	return		;funcret
  5296   001F3C                     __end_of_PINWRITE:
  5297                           	callstack 0
  5298                           
  5299 ;; *************** function _printf *****************
  5300 ;; Defined at:
  5301 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\printf.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  fmt             1   36[BANK0 ] PTR const unsigned char 
  5304 ;;		 -> STR_11(44), STR_10(51), 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  ap              2    0[BANK1 ] PTR void [1]
  5307 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5308 ;;  ret             2    0        int 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  2   36[BANK0 ] int 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5318 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5319 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;Total ram usage:        3 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; Hardware stack levels required when called: 14
  5325 ;; This function calls:
  5326 ;;		_vfprintf
  5327 ;; This function is called by:
  5328 ;;		_PINSTART
  5329 ;;		_PINWRITE
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           	psect	text37
  5334   00336E                     __ptext37:
  5335                           	callstack 0
  5336   00336E                     _printf:
  5337                           	callstack 14
  5338   00336E  0EFD               	movlw	low (?_printf+1)
  5339   003370  0101               	movlb	1	; () banked
  5340   003372  6F00               	movwf	printf@ap& (0+255),b
  5341   003374  6B01               	clrf	(printf@ap+1)& (0+255),b
  5342   003376                     
  5343                           ; BSR set to: 1
  5344   003376  0E00               	movlw	0
  5345   003378  0100               	movlb	0	; () banked
  5346   00337A  6FF6               	movwf	vfprintf@fp& (0+255),b
  5347   00337C  0E00               	movlw	0
  5348   00337E  6FF7               	movwf	(vfprintf@fp+1)& (0+255),b
  5349   003380  C0FC  F0F8         	movff	printf@fmt,vfprintf@fmt
  5350   003384  0E00               	movlw	low printf@ap
  5351   003386  6FF9               	movwf	vfprintf@ap& (0+255),b
  5352   003388  0E01               	movlw	high printf@ap
  5353   00338A  6FFA               	movwf	(vfprintf@ap+1)& (0+255),b
  5354   00338C  ECCC  F016         	call	_vfprintf	;wreg free
  5355   003390  0012               	return		;funcret
  5356   003392                     __end_of_printf:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function _vfprintf *****************
  5360 ;; Defined at:
  5361 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  fp              2   30[BANK0 ] PTR struct _IO_FILE
  5364 ;;		 -> sprintf@f(12), NULL(0), 
  5365 ;;  fmt             1   32[BANK0 ] PTR const unsigned char 
  5366 ;;		 -> STR_11(44), STR_10(51), STR_9(4), STR_8(3), 
  5367 ;;		 -> STR_7(3), STR_3(3), 
  5368 ;;  ap              2   33[BANK0 ] PTR PTR void 
  5369 ;;		 -> printf@ap(2), sprintf@ap(2), 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  cfmt            1   35[BANK0 ] PTR unsigned char 
  5372 ;;		 -> STR_11(44), STR_10(51), STR_9(4), STR_8(3), 
  5373 ;;		 -> STR_7(3), STR_3(3), 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  2   30[BANK0 ] int 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5383 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;Total ram usage:        6 bytes
  5388 ;; Hardware stack levels used: 1
  5389 ;; Hardware stack levels required when called: 13
  5390 ;; This function calls:
  5391 ;;		_vfpfcnvrt
  5392 ;; This function is called by:
  5393 ;;		_sprintf
  5394 ;;		_printf
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text38
  5399   002D98                     __ptext38:
  5400                           	callstack 0
  5401   002D98                     _vfprintf:
  5402                           	callstack 16
  5403   002D98                     
  5404                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5405   002D98  C0F8  F0FB         	movff	vfprintf@fmt,vfprintf@cfmt
  5406                           
  5407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5408   002D9C  EFDD  F016         	goto	l8699
  5409   002DA0                     l8697:
  5410                           
  5411                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5412   002DA0  C0F6  F0E6         	movff	vfprintf@fp,vfpfcnvrt@fp
  5413   002DA4  C0F7  F0E7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5414   002DA8  0EFB               	movlw	low vfprintf@cfmt
  5415   002DAA  0100               	movlb	0	; () banked
  5416   002DAC  6FE8               	movwf	vfpfcnvrt@fmt& (0+255),b
  5417   002DAE  C0F9  F0E9         	movff	vfprintf@ap,vfpfcnvrt@ap
  5418   002DB2  C0FA  F0EA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5419   002DB6  EC54  F008         	call	_vfpfcnvrt	;wreg free
  5420   002DBA                     l8699:
  5421                           
  5422                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5423   002DBA  C0FB  FFF6         	movff	vfprintf@cfmt,tblptrl
  5424   002DBE                     	if	1	;There is more than 1 active tblptr byte
  5425   002DBE  0E10               	movlw	high __smallconst
  5426   002DC0  6EF7               	movwf	tblptrh,c
  5427   002DC2                     	endif
  5428   002DC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5429   002DC2  6AF8               	clrf	tblptru,c
  5430   002DC4                     	endif
  5431   002DC4                     	if	0	;tblptru may be non-zero
  5432   002DC4                     	endif
  5433   002DC4  0008               	tblrd		*
  5434   002DC6  50F5               	movf	tablat,w,c
  5435   002DC8  0900               	iorlw	0
  5436   002DCA  A4D8               	btfss	status,2,c
  5437   002DCC  EFEA  F016         	goto	u5621
  5438   002DD0  EFEC  F016         	goto	u5620
  5439   002DD4                     u5621:
  5440   002DD4  EFD0  F016         	goto	l8697
  5441   002DD8                     u5620:
  5442   002DD8                     
  5443                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5444   002DD8  0E00               	movlw	0
  5445   002DDA  0100               	movlb	0	; () banked
  5446   002DDC  6FF7               	movwf	(?_vfprintf+1)& (0+255),b
  5447   002DDE  0E00               	movlw	0
  5448   002DE0  6FF6               	movwf	?_vfprintf& (0+255),b
  5449   002DE2                     
  5450                           ; BSR set to: 0
  5451   002DE2  0012               	return		;funcret
  5452   002DE4                     __end_of_vfprintf:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function _vfpfcnvrt *****************
  5456 ;; Defined at:
  5457 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
  5460 ;;		 -> sprintf@f(12), NULL(0), 
  5461 ;;  fmt             1   16[BANK0 ] PTR PTR unsigned char 
  5462 ;;		 -> vfprintf@cfmt(1), 
  5463 ;;  ap              2   17[BANK0 ] PTR PTR void 
  5464 ;;		 -> printf@ap(2), sprintf@ap(2), 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  convarg         4   25[BANK0 ] struct .
  5467 ;;  c               1   29[BANK0 ] unsigned char 
  5468 ;;  cp              1   24[BANK0 ] PTR unsigned char 
  5469 ;;		 -> STR_11(44), STR_10(51), STR_9(4), STR_8(3), 
  5470 ;;		 -> STR_7(3), STR_3(3), 
  5471 ;;  done            1   23[BANK0 ] _Bool 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5481 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5485 ;;Total ram usage:       16 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 12
  5488 ;; This function calls:
  5489 ;;		___aldiv
  5490 ;;		___almod
  5491 ;;		___lldiv
  5492 ;;		___llmod
  5493 ;;		_abs
  5494 ;;		_fputc
  5495 ;; This function is called by:
  5496 ;;		_vfprintf
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text39
  5501   0010A8                     __ptext39:
  5502                           	callstack 0
  5503   0010A8                     _vfpfcnvrt:
  5504                           	callstack 16
  5505   0010A8                     
  5506                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5507   0010A8  0100               	movlb	0	; () banked
  5508   0010AA  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5509   0010AC  6ED9               	movwf	fsr2l,c
  5510   0010AE  6ADA               	clrf	fsr2h,c
  5511   0010B0  CFDF FFF6          	movff	indf2,tblptrl
  5512   0010B4                     	if	1	;There is more than 1 active tblptr byte
  5513   0010B4  0E10               	movlw	high __smallconst
  5514   0010B6  6EF7               	movwf	tblptrh,c
  5515   0010B8                     	endif
  5516   0010B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5517   0010B8  6AF8               	clrf	tblptru,c
  5518   0010BA                     	endif
  5519   0010BA                     	if	0	;tblptru may be non-zero
  5520   0010BA                     	endif
  5521   0010BA  0008               	tblrd		*
  5522   0010BC  50F5               	movf	tablat,w,c
  5523   0010BE  0A25               	xorlw	37
  5524   0010C0  A4D8               	btfss	status,2,c
  5525   0010C2  EF65  F008         	goto	u5481
  5526   0010C6  EF67  F008         	goto	u5480
  5527   0010CA                     u5481:
  5528   0010CA  EF9D  F00A         	goto	l8665
  5529   0010CE                     u5480:
  5530   0010CE                     
  5531                           ; BSR set to: 0
  5532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5533   0010CE  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5534   0010D0  6ED9               	movwf	fsr2l,c
  5535   0010D2  6ADA               	clrf	fsr2h,c
  5536   0010D4  2ADF               	incf	indf2,f,c
  5537   0010D6                     
  5538                           ; BSR set to: 0
  5539                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5540   0010D6  0E00               	movlw	0
  5541   0010D8  6E29               	movwf	(_width+1)^0,c
  5542   0010DA  0E00               	movlw	0
  5543   0010DC  6E28               	movwf	_width^0,c
  5544   0010DE  C028  F02E         	movff	_width,_flags
  5545   0010E2                     
  5546                           ; BSR set to: 0
  5547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5548   0010E2  682A               	setf	_prec^0,c
  5549   0010E4  682B               	setf	(_prec+1)^0,c
  5550   0010E6                     
  5551                           ; BSR set to: 0
  5552                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5553   0010E6  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5554   0010E8  6ED9               	movwf	fsr2l,c
  5555   0010EA  6ADA               	clrf	fsr2h,c
  5556   0010EC  50DF               	movf	indf2,w,c
  5557   0010EE  6FF0               	movwf	vfpfcnvrt@cp& (0+255),b
  5558   0010F0                     
  5559                           ; BSR set to: 0
  5560                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  5561   0010F0  C0F0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5562   0010F4                     	if	1	;There is more than 1 active tblptr byte
  5563   0010F4  0E10               	movlw	high __smallconst
  5564   0010F6  6EF7               	movwf	tblptrh,c
  5565   0010F8                     	endif
  5566   0010F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5567   0010F8  6AF8               	clrf	tblptru,c
  5568   0010FA                     	endif
  5569   0010FA                     	if	0	;tblptru may be non-zero
  5570   0010FA                     	endif
  5571   0010FA  0008               	tblrd		*
  5572   0010FC  CFF5 F0F5          	movff	tablat,vfpfcnvrt@c
  5573                           
  5574                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  5575   001100  EF8D  F008         	goto	l8589
  5576   001104                     l8581:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  5580   001104  2BF0               	incf	vfpfcnvrt@cp& (0+255),f,b
  5581                           
  5582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1316:     break;
  5583   001106  EFAA  F008         	goto	l8591
  5584   00110A                     l8583:
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  5588   00110A  0E69               	movlw	105
  5589   00110C  6FF5               	movwf	vfpfcnvrt@c& (0+255),b
  5590                           
  5591                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1351:     break;
  5592   00110E  EFAA  F008         	goto	l8591
  5593   001112                     l8585:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  5597   001112  0E00               	movlw	0
  5598   001114  6FF5               	movwf	vfpfcnvrt@c& (0+255),b
  5599                           
  5600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1354:     break;
  5601   001116  EFAA  F008         	goto	l8591
  5602   00111A                     l8589:
  5603                           
  5604                           ; BSR set to: 0
  5605   00111A  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  5606   00111C  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  5607   00111E  6BEC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5608                           
  5609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5610                           ; Switch size 1, requested type "simple"
  5611                           ; Number of cases is 1, Range of values is 0 to 0
  5612                           ; switch strategies available:
  5613                           ; Name         Instructions Cycles
  5614                           ; simple_byte            4     3 (average)
  5615                           ;	Chosen strategy is simple_byte
  5616   001120  51EC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5617   001122  0A00               	xorlw	0	; case 0
  5618   001124  B4D8               	btfsc	status,2,c
  5619   001126  EF97  F008         	goto	l9427
  5620   00112A  EF89  F008         	goto	l8585
  5621   00112E                     l9427:
  5622                           
  5623                           ; BSR set to: 0
  5624                           ; Switch size 1, requested type "simple"
  5625                           ; Number of cases is 4, Range of values is 100 to 117
  5626                           ; switch strategies available:
  5627                           ; Name         Instructions Cycles
  5628                           ; simple_byte           13     7 (average)
  5629                           ;	Chosen strategy is simple_byte
  5630   00112E  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  5631   001130  0A64               	xorlw	100	; case 100
  5632   001132  B4D8               	btfsc	status,2,c
  5633   001134  EF85  F008         	goto	l8583
  5634   001138  0A0D               	xorlw	13	; case 105
  5635   00113A  B4D8               	btfsc	status,2,c
  5636   00113C  EF85  F008         	goto	l8583
  5637   001140  0A05               	xorlw	5	; case 108
  5638   001142  B4D8               	btfsc	status,2,c
  5639   001144  EF82  F008         	goto	l8581
  5640   001148  0A19               	xorlw	25	; case 117
  5641   00114A  B4D8               	btfsc	status,2,c
  5642   00114C  EF85  F008         	goto	l8583
  5643   001150  EF89  F008         	goto	l8585
  5644   001154                     l8591:
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5648   001154  C0F0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5649   001158                     	if	1	;There is more than 1 active tblptr byte
  5650   001158  0E10               	movlw	high __smallconst
  5651   00115A  6EF7               	movwf	tblptrh,c
  5652   00115C                     	endif
  5653   00115C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5654   00115C  6AF8               	clrf	tblptru,c
  5655   00115E                     	endif
  5656   00115E                     	if	0	;tblptru may be non-zero
  5657   00115E                     	endif
  5658   00115E  0008               	tblrd		*
  5659   001160  50F5               	movf	tablat,w,c
  5660   001162  0A64               	xorlw	100
  5661   001164  B4D8               	btfsc	status,2,c
  5662   001166  EFB7  F008         	goto	u5491
  5663   00116A  EFB9  F008         	goto	u5490
  5664   00116E                     u5491:
  5665   00116E  EFFF  F008         	goto	l8601
  5666   001172                     u5490:
  5667   001172                     
  5668                           ; BSR set to: 0
  5669   001172  C0F0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5670   001176                     	if	1	;There is more than 1 active tblptr byte
  5671   001176  0E10               	movlw	high __smallconst
  5672   001178  6EF7               	movwf	tblptrh,c
  5673   00117A                     	endif
  5674   00117A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5675   00117A  6AF8               	clrf	tblptru,c
  5676   00117C                     	endif
  5677   00117C                     	if	0	;tblptru may be non-zero
  5678   00117C                     	endif
  5679   00117C  0008               	tblrd		*
  5680   00117E  50F5               	movf	tablat,w,c
  5681   001180  0A69               	xorlw	105
  5682   001182  A4D8               	btfss	status,2,c
  5683   001184  EFC6  F008         	goto	u5501
  5684   001188  EFC8  F008         	goto	u5500
  5685   00118C                     u5501:
  5686   00118C  EFAF  F009         	goto	l8629
  5687   001190                     u5500:
  5688   001190  EFFF  F008         	goto	l8601
  5689   001194                     l8595:
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5693   001194  C0E9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5694   001198  C0EA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5695   00119C  CFDF F0EB          	movff	indf2,??_vfpfcnvrt
  5696   0011A0  0E02               	movlw	2
  5697   0011A2  26DE               	addwf	postinc2,f,c
  5698   0011A4  CFDF F0EC          	movff	indf2,??_vfpfcnvrt+1
  5699   0011A8  0E00               	movlw	0
  5700   0011AA  22DD               	addwfc	postdec2,f,c
  5701   0011AC  C0EB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5702   0011B0  C0EC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5703   0011B4  CFDE F0F1          	movff	postinc2,vfpfcnvrt@convarg
  5704   0011B8  CFDD F0F2          	movff	postdec2,vfpfcnvrt@convarg+1
  5705   0011BC  0E00               	movlw	0
  5706   0011BE  BFF2               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  5707   0011C0  0EFF               	movlw	-1
  5708   0011C2  6FF3               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  5709   0011C4  6FF4               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  5710                           
  5711                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1366:      break;
  5712   0011C6  EF14  F009         	goto	l8603
  5713   0011CA                     l8597:
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  5717   0011CA  C0E9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5718   0011CE  C0EA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5719   0011D2  CFDF F0EB          	movff	indf2,??_vfpfcnvrt
  5720   0011D6  0E04               	movlw	4
  5721   0011D8  26DE               	addwf	postinc2,f,c
  5722   0011DA  CFDF F0EC          	movff	indf2,??_vfpfcnvrt+1
  5723   0011DE  0E00               	movlw	0
  5724   0011E0  22DD               	addwfc	postdec2,f,c
  5725   0011E2  C0EB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5726   0011E6  C0EC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5727   0011EA  CFDE F0F1          	movff	postinc2,vfpfcnvrt@convarg
  5728   0011EE  CFDE F0F2          	movff	postinc2,vfpfcnvrt@convarg+1
  5729   0011F2  CFDE F0F3          	movff	postinc2,vfpfcnvrt@convarg+2
  5730   0011F6  CFDE F0F4          	movff	postinc2,vfpfcnvrt@convarg+3
  5731                           
  5732                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1380:      break;
  5733   0011FA  EF14  F009         	goto	l8603
  5734   0011FE                     l8601:
  5735                           
  5736                           ; BSR set to: 0
  5737   0011FE  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  5738   001200  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  5739   001202  6BEC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5740                           
  5741                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5742                           ; Switch size 1, requested type "simple"
  5743                           ; Number of cases is 1, Range of values is 0 to 0
  5744                           ; switch strategies available:
  5745                           ; Name         Instructions Cycles
  5746                           ; simple_byte            4     3 (average)
  5747                           ;	Chosen strategy is simple_byte
  5748   001204  51EC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5749   001206  0A00               	xorlw	0	; case 0
  5750   001208  B4D8               	btfsc	status,2,c
  5751   00120A  EF09  F009         	goto	l9429
  5752   00120E  EF14  F009         	goto	l8603
  5753   001212                     l9429:
  5754                           
  5755                           ; BSR set to: 0
  5756                           ; Switch size 1, requested type "simple"
  5757                           ; Number of cases is 2, Range of values is 105 to 108
  5758                           ; switch strategies available:
  5759                           ; Name         Instructions Cycles
  5760                           ; simple_byte            7     4 (average)
  5761                           ;	Chosen strategy is simple_byte
  5762   001212  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  5763   001214  0A69               	xorlw	105	; case 105
  5764   001216  B4D8               	btfsc	status,2,c
  5765   001218  EFCA  F008         	goto	l8595
  5766   00121C  0A05               	xorlw	5	; case 108
  5767   00121E  B4D8               	btfsc	status,2,c
  5768   001220  EFE5  F008         	goto	l8597
  5769   001224  EF14  F009         	goto	l8603
  5770   001228                     l8603:
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  5774   001228  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5775   00122A  6ED9               	movwf	fsr2l,c
  5776   00122C  6ADA               	clrf	fsr2h,c
  5777   00122E  29F0               	incf	vfpfcnvrt@cp& (0+255),w,b
  5778   001230  6EDF               	movwf	indf2,c
  5779   001232                     
  5780                           ; BSR set to: 0
  5781                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  5782   001232  0E20               	movlw	32
  5783   001234  6FF5               	movwf	vfpfcnvrt@c& (0+255),b
  5784   001236                     
  5785                           ; BSR set to: 0
  5786                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  5787   001236  BFF4               	btfsc	(vfpfcnvrt@convarg+3)& (0+255),7,b
  5788   001238  EF20  F009         	goto	u5511
  5789   00123C  EF23  F009         	goto	u5510
  5790   001240                     u5511:
  5791   001240  0E01               	movlw	1
  5792   001242  EF24  F009         	goto	u5520
  5793   001246                     u5510:
  5794   001246  0E00               	movlw	0
  5795   001248                     u5520:
  5796   001248  6FEF               	movwf	vfpfcnvrt@done& (0+255),b
  5797   00124A                     l8609:
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  5801   00124A  07F5               	decf	vfpfcnvrt@c& (0+255),f,b
  5802   00124C  0E24               	movlw	low _dbuf
  5803   00124E  25F5               	addwf	vfpfcnvrt@c& (0+255),w,b
  5804   001250  6ED9               	movwf	fsr2l,c
  5805   001252  6ADA               	clrf	fsr2h,c
  5806   001254  0E01               	movlw	high _dbuf
  5807   001256  22DA               	addwfc	fsr2h,f,c
  5808   001258  C0F1  F0D8         	movff	vfpfcnvrt@convarg,___almod@dividend
  5809   00125C  C0F2  F0D9         	movff	vfpfcnvrt@convarg+1,___almod@dividend+1
  5810   001260  C0F3  F0DA         	movff	vfpfcnvrt@convarg+2,___almod@dividend+2
  5811   001264  C0F4  F0DB         	movff	vfpfcnvrt@convarg+3,___almod@dividend+3
  5812   001268  0E0A               	movlw	10
  5813   00126A  6FDC               	movwf	___almod@divisor& (0+255),b
  5814   00126C  0E00               	movlw	0
  5815   00126E  6FDD               	movwf	(___almod@divisor+1)& (0+255),b
  5816   001270  0E00               	movlw	0
  5817   001272  6FDE               	movwf	(___almod@divisor+2)& (0+255),b
  5818   001274  0E00               	movlw	0
  5819   001276  6FDF               	movwf	(___almod@divisor+3)& (0+255),b
  5820   001278  ECB1  F010         	call	___almod	;wreg free
  5821   00127C  C0D8  F0E2         	movff	?___almod,abs@a
  5822   001280  C0D9  F0E3         	movff	?___almod+1,abs@a+1
  5823   001284  ECFF  F017         	call	_abs	;wreg free
  5824   001288  0100               	movlb	0	; () banked
  5825   00128A  51E2               	movf	?_abs& (0+255),w,b
  5826   00128C  0F30               	addlw	48
  5827   00128E  6EDF               	movwf	indf2,c
  5828   001290                     
  5829                           ; BSR set to: 0
  5830                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  5831   001290  C0F1  F0D8         	movff	vfpfcnvrt@convarg,___aldiv@dividend
  5832   001294  C0F2  F0D9         	movff	vfpfcnvrt@convarg+1,___aldiv@dividend+1
  5833   001298  C0F3  F0DA         	movff	vfpfcnvrt@convarg+2,___aldiv@dividend+2
  5834   00129C  C0F4  F0DB         	movff	vfpfcnvrt@convarg+3,___aldiv@dividend+3
  5835   0012A0  0E0A               	movlw	10
  5836   0012A2  6FDC               	movwf	___aldiv@divisor& (0+255),b
  5837   0012A4  0E00               	movlw	0
  5838   0012A6  6FDD               	movwf	(___aldiv@divisor+1)& (0+255),b
  5839   0012A8  0E00               	movlw	0
  5840   0012AA  6FDE               	movwf	(___aldiv@divisor+2)& (0+255),b
  5841   0012AC  0E00               	movlw	0
  5842   0012AE  6FDF               	movwf	(___aldiv@divisor+3)& (0+255),b
  5843   0012B0  EC2A  F010         	call	___aldiv	;wreg free
  5844   0012B4  C0D8  F0F1         	movff	?___aldiv,vfpfcnvrt@convarg
  5845   0012B8  C0D9  F0F2         	movff	?___aldiv+1,vfpfcnvrt@convarg+1
  5846   0012BC  C0DA  F0F3         	movff	?___aldiv+2,vfpfcnvrt@convarg+2
  5847   0012C0  C0DB  F0F4         	movff	?___aldiv+3,vfpfcnvrt@convarg+3
  5848   0012C4                     
  5849                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  5850   0012C4  0100               	movlb	0	; () banked
  5851   0012C6  51F1               	movf	vfpfcnvrt@convarg& (0+255),w,b
  5852   0012C8  11F2               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  5853   0012CA  11F3               	iorwf	(vfpfcnvrt@convarg+2)& (0+255),w,b
  5854   0012CC  11F4               	iorwf	(vfpfcnvrt@convarg+3)& (0+255),w,b
  5855   0012CE  B4D8               	btfsc	status,2,c
  5856   0012D0  EF6C  F009         	goto	u5531
  5857   0012D4  EF6E  F009         	goto	u5530
  5858   0012D8                     u5531:
  5859   0012D8  EF76  F009         	goto	l8617
  5860   0012DC                     u5530:
  5861   0012DC                     
  5862                           ; BSR set to: 0
  5863   0012DC  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  5864   0012DE  A4D8               	btfss	status,2,c
  5865   0012E0  EF74  F009         	goto	u5541
  5866   0012E4  EF76  F009         	goto	u5540
  5867   0012E8                     u5541:
  5868   0012E8  EF25  F009         	goto	l8609
  5869   0012EC                     u5540:
  5870   0012EC                     l8617:
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  5874   0012EC  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  5875   0012EE  B4D8               	btfsc	status,2,c
  5876   0012F0  EF7C  F009         	goto	u5551
  5877   0012F4  EF7E  F009         	goto	u5550
  5878   0012F8                     u5551:
  5879   0012F8  EFA4  F009         	goto	l8627
  5880   0012FC                     u5550:
  5881   0012FC                     
  5882                           ; BSR set to: 0
  5883   0012FC  51EF               	movf	vfpfcnvrt@done& (0+255),w,b
  5884   0012FE  B4D8               	btfsc	status,2,c
  5885   001300  EF84  F009         	goto	u5561
  5886   001304  EF86  F009         	goto	u5560
  5887   001308                     u5561:
  5888   001308  EFA4  F009         	goto	l8627
  5889   00130C                     u5560:
  5890   00130C                     
  5891                           ; BSR set to: 0
  5892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  5893   00130C  07F5               	decf	vfpfcnvrt@c& (0+255),f,b
  5894   00130E  0E24               	movlw	low _dbuf
  5895   001310  25F5               	addwf	vfpfcnvrt@c& (0+255),w,b
  5896   001312  6ED9               	movwf	fsr2l,c
  5897   001314  6ADA               	clrf	fsr2h,c
  5898   001316  0E01               	movlw	high _dbuf
  5899   001318  22DA               	addwfc	fsr2h,f,c
  5900   00131A  0E2D               	movlw	45
  5901   00131C  6EDF               	movwf	indf2,c
  5902   00131E  EFA4  F009         	goto	l8627
  5903   001322                     l8623:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  5907   001322  0E24               	movlw	low _dbuf
  5908   001324  25F5               	addwf	vfpfcnvrt@c& (0+255),w,b
  5909   001326  6ED9               	movwf	fsr2l,c
  5910   001328  6ADA               	clrf	fsr2h,c
  5911   00132A  0E01               	movlw	high _dbuf
  5912   00132C  22DA               	addwfc	fsr2h,f,c
  5913   00132E  50DF               	movf	indf2,w,c
  5914   001330  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  5915   001332  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  5916   001334  6FD8               	movwf	fputc@c& (0+255),b
  5917   001336  6BD9               	clrf	(fputc@c+1)& (0+255),b
  5918   001338  C0E6  F0DA         	movff	vfpfcnvrt@fp,fputc@fp
  5919   00133C  C0E7  F0DB         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5920   001340  EC8A  F011         	call	_fputc	;wreg free
  5921   001344  0100               	movlb	0	; () banked
  5922   001346  2BF5               	incf	vfpfcnvrt@c& (0+255),f,b
  5923   001348                     l8627:
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  5927   001348  0E20               	movlw	32
  5928   00134A  19F5               	xorwf	vfpfcnvrt@c& (0+255),w,b
  5929   00134C  A4D8               	btfss	status,2,c
  5930   00134E  EFAB  F009         	goto	u5571
  5931   001352  EFAD  F009         	goto	u5570
  5932   001356                     u5571:
  5933   001356  EF91  F009         	goto	l8623
  5934   00135A                     u5570:
  5935   00135A  EFB1  F00A         	goto	l1939
  5936   00135E                     l8629:
  5937                           
  5938                           ; BSR set to: 0
  5939   00135E  C0F0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5940   001362                     	if	1	;There is more than 1 active tblptr byte
  5941   001362  0E10               	movlw	high __smallconst
  5942   001364  6EF7               	movwf	tblptrh,c
  5943   001366                     	endif
  5944   001366                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5945   001366  6AF8               	clrf	tblptru,c
  5946   001368                     	endif
  5947   001368                     	if	0	;tblptru may be non-zero
  5948   001368                     	endif
  5949   001368  0008               	tblrd		*
  5950   00136A  50F5               	movf	tablat,w,c
  5951   00136C  0A75               	xorlw	117
  5952   00136E  A4D8               	btfss	status,2,c
  5953   001370  EFBC  F009         	goto	u5581
  5954   001374  EFBE  F009         	goto	u5580
  5955   001378                     u5581:
  5956   001378  EF96  F00A         	goto	l8661
  5957   00137C                     u5580:
  5958   00137C  EFF6  F009         	goto	l8637
  5959   001380                     l8631:
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  5963   001380  C0E9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5964   001384  C0EA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5965   001388  CFDF F0EB          	movff	indf2,??_vfpfcnvrt
  5966   00138C  0E02               	movlw	2
  5967   00138E  26DE               	addwf	postinc2,f,c
  5968   001390  CFDF F0EC          	movff	indf2,??_vfpfcnvrt+1
  5969   001394  0E00               	movlw	0
  5970   001396  22DD               	addwfc	postdec2,f,c
  5971   001398  C0EB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5972   00139C  C0EC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5973   0013A0  CFDE F0ED          	movff	postinc2,??_vfpfcnvrt+2
  5974   0013A4  CFDD F0EE          	movff	postdec2,??_vfpfcnvrt+3
  5975   0013A8  C0ED  F0F1         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  5976   0013AC  C0EE  F0F2         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  5977   0013B0  6BF3               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  5978   0013B2  6BF4               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  5979                           
  5980                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1457:      break;
  5981   0013B4  EF0B  F00A         	goto	l8639
  5982   0013B8                     l8633:
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  5986   0013B8  C0E9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5987   0013BC  C0EA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5988   0013C0  CFDF F0EB          	movff	indf2,??_vfpfcnvrt
  5989   0013C4  0E04               	movlw	4
  5990   0013C6  26DE               	addwf	postinc2,f,c
  5991   0013C8  CFDF F0EC          	movff	indf2,??_vfpfcnvrt+1
  5992   0013CC  0E00               	movlw	0
  5993   0013CE  22DD               	addwfc	postdec2,f,c
  5994   0013D0  C0EB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5995   0013D4  C0EC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5996   0013D8  CFDE F0F1          	movff	postinc2,vfpfcnvrt@convarg
  5997   0013DC  CFDE F0F2          	movff	postinc2,vfpfcnvrt@convarg+1
  5998   0013E0  CFDE F0F3          	movff	postinc2,vfpfcnvrt@convarg+2
  5999   0013E4  CFDE F0F4          	movff	postinc2,vfpfcnvrt@convarg+3
  6000                           
  6001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1471:      break;
  6002   0013E8  EF0B  F00A         	goto	l8639
  6003   0013EC                     l8637:
  6004                           
  6005                           ; BSR set to: 0
  6006   0013EC  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  6007   0013EE  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  6008   0013F0  6BEC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6009                           
  6010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6011                           ; Switch size 1, requested type "simple"
  6012                           ; Number of cases is 1, Range of values is 0 to 0
  6013                           ; switch strategies available:
  6014                           ; Name         Instructions Cycles
  6015                           ; simple_byte            4     3 (average)
  6016                           ;	Chosen strategy is simple_byte
  6017   0013F2  51EC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6018   0013F4  0A00               	xorlw	0	; case 0
  6019   0013F6  B4D8               	btfsc	status,2,c
  6020   0013F8  EF00  F00A         	goto	l9431
  6021   0013FC  EF0B  F00A         	goto	l8639
  6022   001400                     l9431:
  6023                           
  6024                           ; BSR set to: 0
  6025                           ; Switch size 1, requested type "simple"
  6026                           ; Number of cases is 2, Range of values is 105 to 108
  6027                           ; switch strategies available:
  6028                           ; Name         Instructions Cycles
  6029                           ; simple_byte            7     4 (average)
  6030                           ;	Chosen strategy is simple_byte
  6031   001400  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  6032   001402  0A69               	xorlw	105	; case 105
  6033   001404  B4D8               	btfsc	status,2,c
  6034   001406  EFC0  F009         	goto	l8631
  6035   00140A  0A05               	xorlw	5	; case 108
  6036   00140C  B4D8               	btfsc	status,2,c
  6037   00140E  EFDC  F009         	goto	l8633
  6038   001412  EF0B  F00A         	goto	l8639
  6039   001416                     l8639:
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  6043   001416  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6044   001418  6ED9               	movwf	fsr2l,c
  6045   00141A  6ADA               	clrf	fsr2h,c
  6046   00141C  29F0               	incf	vfpfcnvrt@cp& (0+255),w,b
  6047   00141E  6EDF               	movwf	indf2,c
  6048                           
  6049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  6050   001420  EF7F  F00A         	goto	l8659
  6051   001424                     l8641:
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  6055   001424  0E20               	movlw	32
  6056   001426  6FF5               	movwf	vfpfcnvrt@c& (0+255),b
  6057   001428                     l8643:
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  6061   001428  07F5               	decf	vfpfcnvrt@c& (0+255),f,b
  6062   00142A  0E24               	movlw	low _dbuf
  6063   00142C  25F5               	addwf	vfpfcnvrt@c& (0+255),w,b
  6064   00142E  6ED9               	movwf	fsr2l,c
  6065   001430  6ADA               	clrf	fsr2h,c
  6066   001432  0E01               	movlw	high _dbuf
  6067   001434  22DA               	addwfc	fsr2h,f,c
  6068   001436  C0F1  F0D8         	movff	vfpfcnvrt@convarg,___llmod@dividend
  6069   00143A  C0F2  F0D9         	movff	vfpfcnvrt@convarg+1,___llmod@dividend+1
  6070   00143E  C0F3  F0DA         	movff	vfpfcnvrt@convarg+2,___llmod@dividend+2
  6071   001442  C0F4  F0DB         	movff	vfpfcnvrt@convarg+3,___llmod@dividend+3
  6072   001446  0E0A               	movlw	10
  6073   001448  6FDC               	movwf	___llmod@divisor& (0+255),b
  6074   00144A  0E00               	movlw	0
  6075   00144C  6FDD               	movwf	(___llmod@divisor+1)& (0+255),b
  6076   00144E  0E00               	movlw	0
  6077   001450  6FDE               	movwf	(___llmod@divisor+2)& (0+255),b
  6078   001452  0E00               	movlw	0
  6079   001454  6FDF               	movwf	(___llmod@divisor+3)& (0+255),b
  6080   001456  EC32  F013         	call	___llmod	;wreg free
  6081   00145A  0100               	movlb	0	; () banked
  6082   00145C  51D8               	movf	?___llmod& (0+255),w,b
  6083   00145E  0F30               	addlw	48
  6084   001460  6EDF               	movwf	indf2,c
  6085   001462                     
  6086                           ; BSR set to: 0
  6087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  6088   001462  C0F1  F0D8         	movff	vfpfcnvrt@convarg,___lldiv@dividend
  6089   001466  C0F2  F0D9         	movff	vfpfcnvrt@convarg+1,___lldiv@dividend+1
  6090   00146A  C0F3  F0DA         	movff	vfpfcnvrt@convarg+2,___lldiv@dividend+2
  6091   00146E  C0F4  F0DB         	movff	vfpfcnvrt@convarg+3,___lldiv@dividend+3
  6092   001472  0E0A               	movlw	10
  6093   001474  6FDC               	movwf	___lldiv@divisor& (0+255),b
  6094   001476  0E00               	movlw	0
  6095   001478  6FDD               	movwf	(___lldiv@divisor+1)& (0+255),b
  6096   00147A  0E00               	movlw	0
  6097   00147C  6FDE               	movwf	(___lldiv@divisor+2)& (0+255),b
  6098   00147E  0E00               	movlw	0
  6099   001480  6FDF               	movwf	(___lldiv@divisor+3)& (0+255),b
  6100   001482  EC3B  F012         	call	___lldiv	;wreg free
  6101   001486  C0D8  F0F1         	movff	?___lldiv,vfpfcnvrt@convarg
  6102   00148A  C0D9  F0F2         	movff	?___lldiv+1,vfpfcnvrt@convarg+1
  6103   00148E  C0DA  F0F3         	movff	?___lldiv+2,vfpfcnvrt@convarg+2
  6104   001492  C0DB  F0F4         	movff	?___lldiv+3,vfpfcnvrt@convarg+3
  6105   001496                     
  6106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  6107   001496  0100               	movlb	0	; () banked
  6108   001498  51F1               	movf	vfpfcnvrt@convarg& (0+255),w,b
  6109   00149A  11F2               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  6110   00149C  11F3               	iorwf	(vfpfcnvrt@convarg+2)& (0+255),w,b
  6111   00149E  11F4               	iorwf	(vfpfcnvrt@convarg+3)& (0+255),w,b
  6112   0014A0  B4D8               	btfsc	status,2,c
  6113   0014A2  EF55  F00A         	goto	u5591
  6114   0014A6  EF57  F00A         	goto	u5590
  6115   0014AA                     u5591:
  6116   0014AA  EF74  F00A         	goto	l8655
  6117   0014AE                     u5590:
  6118   0014AE                     
  6119                           ; BSR set to: 0
  6120   0014AE  51F5               	movf	vfpfcnvrt@c& (0+255),w,b
  6121   0014B0  A4D8               	btfss	status,2,c
  6122   0014B2  EF5D  F00A         	goto	u5601
  6123   0014B6  EF5F  F00A         	goto	u5600
  6124   0014BA                     u5601:
  6125   0014BA  EF14  F00A         	goto	l8643
  6126   0014BE                     u5600:
  6127   0014BE  EF74  F00A         	goto	l8655
  6128   0014C2                     l8651:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  6132   0014C2  0E24               	movlw	low _dbuf
  6133   0014C4  25F5               	addwf	vfpfcnvrt@c& (0+255),w,b
  6134   0014C6  6ED9               	movwf	fsr2l,c
  6135   0014C8  6ADA               	clrf	fsr2h,c
  6136   0014CA  0E01               	movlw	high _dbuf
  6137   0014CC  22DA               	addwfc	fsr2h,f,c
  6138   0014CE  50DF               	movf	indf2,w,c
  6139   0014D0  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  6140   0014D2  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  6141   0014D4  6FD8               	movwf	fputc@c& (0+255),b
  6142   0014D6  6BD9               	clrf	(fputc@c+1)& (0+255),b
  6143   0014D8  C0E6  F0DA         	movff	vfpfcnvrt@fp,fputc@fp
  6144   0014DC  C0E7  F0DB         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6145   0014E0  EC8A  F011         	call	_fputc	;wreg free
  6146   0014E4  0100               	movlb	0	; () banked
  6147   0014E6  2BF5               	incf	vfpfcnvrt@c& (0+255),f,b
  6148   0014E8                     l8655:
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  6152   0014E8  0E20               	movlw	32
  6153   0014EA  19F5               	xorwf	vfpfcnvrt@c& (0+255),w,b
  6154   0014EC  A4D8               	btfss	status,2,c
  6155   0014EE  EF7B  F00A         	goto	u5611
  6156   0014F2  EF7D  F00A         	goto	u5610
  6157   0014F6                     u5611:
  6158   0014F6  EF61  F00A         	goto	l8651
  6159   0014FA                     u5610:
  6160   0014FA  EFB1  F00A         	goto	l1939
  6161   0014FE                     l8659:
  6162                           
  6163                           ; BSR set to: 0
  6164   0014FE  C0F0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6165   001502                     	if	1	;There is more than 1 active tblptr byte
  6166   001502  0E10               	movlw	high __smallconst
  6167   001504  6EF7               	movwf	tblptrh,c
  6168   001506                     	endif
  6169   001506                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6170   001506  6AF8               	clrf	tblptru,c
  6171   001508                     	endif
  6172   001508                     	if	0	;tblptru may be non-zero
  6173   001508                     	endif
  6174   001508  0008               	tblrd		*
  6175   00150A  50F5               	movf	tablat,w,c
  6176   00150C  6FEB               	movwf	??_vfpfcnvrt& (0+255),b
  6177   00150E  6BEC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6178                           
  6179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6180                           ; Switch size 1, requested type "simple"
  6181                           ; Number of cases is 1, Range of values is 0 to 0
  6182                           ; switch strategies available:
  6183                           ; Name         Instructions Cycles
  6184                           ; simple_byte            4     3 (average)
  6185                           ;	Chosen strategy is simple_byte
  6186   001510  51EC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6187   001512  0A00               	xorlw	0	; case 0
  6188   001514  B4D8               	btfsc	status,2,c
  6189   001516  EF8F  F00A         	goto	l9433
  6190   00151A  EF96  F00A         	goto	l8661
  6191   00151E                     l9433:
  6192                           
  6193                           ; BSR set to: 0
  6194                           ; Switch size 1, requested type "simple"
  6195                           ; Number of cases is 1, Range of values is 117 to 117
  6196                           ; switch strategies available:
  6197                           ; Name         Instructions Cycles
  6198                           ; simple_byte            4     3 (average)
  6199                           ;	Chosen strategy is simple_byte
  6200   00151E  51EB               	movf	??_vfpfcnvrt& (0+255),w,b
  6201   001520  0A75               	xorlw	117	; case 117
  6202   001522  B4D8               	btfsc	status,2,c
  6203   001524  EF12  F00A         	goto	l8641
  6204   001528  EF96  F00A         	goto	l8661
  6205   00152C                     l8661:
  6206                           
  6207                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6208   00152C  0100               	movlb	0	; () banked
  6209   00152E  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6210   001530  6ED9               	movwf	fsr2l,c
  6211   001532  6ADA               	clrf	fsr2h,c
  6212   001534  2ADF               	incf	indf2,f,c
  6213   001536  EFB1  F00A         	goto	l1939
  6214   00153A                     l8665:
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6218   00153A  51E8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6219   00153C  6ED9               	movwf	fsr2l,c
  6220   00153E  6ADA               	clrf	fsr2h,c
  6221   001540  CFDF FFF6          	movff	indf2,tblptrl
  6222   001544                     	if	1	;There is more than 1 active tblptr byte
  6223   001544  0E10               	movlw	high __smallconst
  6224   001546  6EF7               	movwf	tblptrh,c
  6225   001548                     	endif
  6226   001548                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6227   001548  6AF8               	clrf	tblptru,c
  6228   00154A                     	endif
  6229   00154A                     	if	0	;tblptru may be non-zero
  6230   00154A                     	endif
  6231   00154A  0008               	tblrd		*
  6232   00154C  50F5               	movf	tablat,w,c
  6233   00154E  6FD8               	movwf	fputc@c& (0+255),b
  6234   001550  6BD9               	clrf	(fputc@c+1)& (0+255),b
  6235   001552  C0E6  F0DA         	movff	vfpfcnvrt@fp,fputc@fp
  6236   001556  C0E7  F0DB         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6237   00155A  EC8A  F011         	call	_fputc	;wreg free
  6238   00155E  EF96  F00A         	goto	l8661
  6239   001562                     l1939:
  6240                           
  6241                           ; BSR set to: 0
  6242   001562  0012               	return		;funcret
  6243   001564                     __end_of_vfpfcnvrt:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function _fputc *****************
  6247 ;; Defined at:
  6248 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  c               2    0[BANK0 ] int 
  6251 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  6252 ;;		 -> sprintf@f(12), NULL(0), 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;		None
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  2    0[BANK0 ] int 
  6257 ;; Registers used:
  6258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;Total ram usage:        9 bytes
  6269 ;; Hardware stack levels used: 1
  6270 ;; Hardware stack levels required when called: 11
  6271 ;; This function calls:
  6272 ;;		_putch
  6273 ;; This function is called by:
  6274 ;;		_vfpfcnvrt
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text40
  6279   002314                     __ptext40:
  6280                           	callstack 0
  6281   002314                     _fputc:
  6282                           	callstack 16
  6283   002314  0100               	movlb	0	; () banked
  6284   002316  51DA               	movf	fputc@fp& (0+255),w,b
  6285   002318  11DB               	iorwf	(fputc@fp+1)& (0+255),w,b
  6286   00231A  B4D8               	btfsc	status,2,c
  6287   00231C  EF92  F011         	goto	u5431
  6288   002320  EF94  F011         	goto	u5430
  6289   002324                     u5431:
  6290   002324  EF9D  F011         	goto	l8555
  6291   002328                     u5430:
  6292   002328                     
  6293                           ; BSR set to: 0
  6294   002328  51DA               	movf	fputc@fp& (0+255),w,b
  6295   00232A  11DB               	iorwf	(fputc@fp+1)& (0+255),w,b
  6296   00232C  A4D8               	btfss	status,2,c
  6297   00232E  EF9B  F011         	goto	u5441
  6298   002332  EF9D  F011         	goto	u5440
  6299   002336                     u5441:
  6300   002336  EFA2  F011         	goto	l8557
  6301   00233A                     u5440:
  6302   00233A                     l8555:
  6303                           
  6304                           ; BSR set to: 0
  6305   00233A  51D8               	movf	fputc@c& (0+255),w,b
  6306   00233C  EC0E  F01B         	call	_putch
  6307   002340  EFE7  F011         	goto	l1981
  6308   002344                     l8557:
  6309                           
  6310                           ; BSR set to: 0
  6311   002344  EE20 F00A          	lfsr	2,10
  6312   002348  51DA               	movf	fputc@fp& (0+255),w,b
  6313   00234A  26D9               	addwf	fsr2l,f,c
  6314   00234C  51DB               	movf	(fputc@fp+1)& (0+255),w,b
  6315   00234E  22DA               	addwfc	fsr2h,f,c
  6316   002350  50DE               	movf	postinc2,w,c
  6317   002352  10DE               	iorwf	postinc2,w,c
  6318   002354  B4D8               	btfsc	status,2,c
  6319   002356  EFAF  F011         	goto	u5451
  6320   00235A  EFB1  F011         	goto	u5450
  6321   00235E                     u5451:
  6322   00235E  EFCC  F011         	goto	l8561
  6323   002362                     u5450:
  6324   002362                     
  6325                           ; BSR set to: 0
  6326   002362  EE20 F00A          	lfsr	2,10
  6327   002366  51DA               	movf	fputc@fp& (0+255),w,b
  6328   002368  26D9               	addwf	fsr2l,f,c
  6329   00236A  51DB               	movf	(fputc@fp+1)& (0+255),w,b
  6330   00236C  22DA               	addwfc	fsr2h,f,c
  6331   00236E  EE10 F003          	lfsr	1,3
  6332   002372  51DA               	movf	fputc@fp& (0+255),w,b
  6333   002374  26E1               	addwf	fsr1l,f,c
  6334   002376  51DB               	movf	(fputc@fp+1)& (0+255),w,b
  6335   002378  22E2               	addwfc	fsr1h,f,c
  6336   00237A  50DE               	movf	postinc2,w,c
  6337   00237C  5CE6               	subwf	postinc1,w,c
  6338   00237E  50E6               	movf	postinc1,w,c
  6339   002380  0A80               	xorlw	128
  6340   002382  6FE0               	movwf	(??_fputc+4)& (0+255),b
  6341   002384  50DE               	movf	postinc2,w,c
  6342   002386  0A80               	xorlw	128
  6343   002388  59E0               	subwfb	(??_fputc+4)& (0+255),w,b
  6344   00238A  B0D8               	btfsc	status,0,c
  6345   00238C  EFCA  F011         	goto	u5461
  6346   002390  EFCC  F011         	goto	u5460
  6347   002394                     u5461:
  6348   002394  EFE7  F011         	goto	l1981
  6349   002398                     u5460:
  6350   002398                     l8561:
  6351                           
  6352                           ; BSR set to: 0
  6353   002398  EE20 F003          	lfsr	2,3
  6354   00239C  51DA               	movf	fputc@fp& (0+255),w,b
  6355   00239E  26D9               	addwf	fsr2l,f,c
  6356   0023A0  51DB               	movf	(fputc@fp+1)& (0+255),w,b
  6357   0023A2  22DA               	addwfc	fsr2h,f,c
  6358   0023A4  50DF               	movf	indf2,w,c
  6359   0023A6  6FDC               	movwf	??_fputc& (0+255),b
  6360   0023A8  C0DA  FFD9         	movff	fputc@fp,fsr2l
  6361   0023AC  C0DB  FFDA         	movff	fputc@fp+1,fsr2h
  6362   0023B0  50DF               	movf	indf2,w,c
  6363   0023B2  25DC               	addwf	??_fputc& (0+255),w,b
  6364   0023B4  6ED9               	movwf	fsr2l,c
  6365   0023B6  6ADA               	clrf	fsr2h,c
  6366   0023B8  C0D8  FFDF         	movff	fputc@c,indf2
  6367   0023BC  EE20 F003          	lfsr	2,3
  6368   0023C0  51DA               	movf	fputc@fp& (0+255),w,b
  6369   0023C2  26D9               	addwf	fsr2l,f,c
  6370   0023C4  51DB               	movf	(fputc@fp+1)& (0+255),w,b
  6371   0023C6  22DA               	addwfc	fsr2h,f,c
  6372   0023C8  2ADE               	incf	postinc2,f,c
  6373   0023CA  0E00               	movlw	0
  6374   0023CC  22DD               	addwfc	postdec2,f,c
  6375   0023CE                     l1981:
  6376   0023CE  0012               	return		;funcret
  6377   0023D0                     __end_of_fputc:
  6378                           	callstack 0
  6379                           
  6380 ;; *************** function _putch *****************
  6381 ;; Defined at:
  6382 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  c               1    wreg     unsigned char 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  c               1    0[COMRAM] unsigned char 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      void 
  6389 ;; Registers used:
  6390 ;;		wreg
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;Total ram usage:        0 bytes
  6401 ;; Hardware stack levels used: 1
  6402 ;; Hardware stack levels required when called: 10
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_fputc
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           	psect	text41
  6411   00361C                     __ptext41:
  6412                           	callstack 0
  6413   00361C                     _putch:
  6414                           	callstack 16
  6415   00361C  0012               	return		;funcret
  6416   00361E                     __end_of_putch:
  6417                           	callstack 0
  6418                           
  6419 ;; *************** function _abs *****************
  6420 ;; Defined at:
  6421 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  a               2   10[BANK0 ] int 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  2   10[BANK0 ] int 
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6435 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;Total ram usage:        4 bytes
  6440 ;; Hardware stack levels used: 1
  6441 ;; Hardware stack levels required when called: 10
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		_vfpfcnvrt
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text42
  6450   002FFE                     __ptext42:
  6451                           	callstack 0
  6452   002FFE                     _abs:
  6453                           	callstack 17
  6454   002FFE  0100               	movlb	0	; () banked
  6455   003000  BFE3               	btfsc	(abs@a+1)& (0+255),7,b
  6456   003002  EF05  F018         	goto	u5471
  6457   003006  EF07  F018         	goto	u5470
  6458   00300A                     u5471:
  6459   00300A  EF0D  F018         	goto	l1966
  6460   00300E                     u5470:
  6461   00300E                     
  6462                           ; BSR set to: 0
  6463   00300E  C0E2  F0E2         	movff	abs@a,?_abs
  6464   003012  C0E3  F0E3         	movff	abs@a+1,?_abs+1
  6465   003016  EF19  F018         	goto	l1969
  6466   00301A                     l1966:
  6467                           
  6468                           ; BSR set to: 0
  6469   00301A  C0E2  F0E4         	movff	abs@a,??_abs
  6470   00301E  C0E3  F0E5         	movff	abs@a+1,??_abs+1
  6471   003022  1FE4               	comf	??_abs& (0+255),f,b
  6472   003024  1FE5               	comf	(??_abs+1)& (0+255),f,b
  6473   003026  4BE4               	infsnz	??_abs& (0+255),f,b
  6474   003028  2BE5               	incf	(??_abs+1)& (0+255),f,b
  6475   00302A  C0E4  F0E2         	movff	??_abs,?_abs
  6476   00302E  C0E5  F0E3         	movff	??_abs+1,?_abs+1
  6477   003032                     l1969:
  6478                           
  6479                           ; BSR set to: 0
  6480   003032  0012               	return		;funcret
  6481   003034                     __end_of_abs:
  6482                           	callstack 0
  6483                           
  6484 ;; *************** function ___llmod *****************
  6485 ;; Defined at:
  6486 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  dividend        4    0[BANK0 ] unsigned long 
  6489 ;;  divisor         4    4[BANK0 ] unsigned long 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  counter         1    8[BANK0 ] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  4    0[BANK0 ] unsigned long 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6501 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;Total ram usage:        9 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 10
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_vfpfcnvrt
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text43
  6516   002664                     __ptext43:
  6517                           	callstack 0
  6518   002664                     ___llmod:
  6519                           	callstack 17
  6520   002664  0100               	movlb	0	; () banked
  6521   002666  51DC               	movf	___llmod@divisor& (0+255),w,b
  6522   002668  11DD               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6523   00266A  11DE               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6524   00266C  11DF               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6525   00266E  B4D8               	btfsc	status,2,c
  6526   002670  EF3C  F013         	goto	u5401
  6527   002674  EF3E  F013         	goto	u5400
  6528   002678                     u5401:
  6529   002678  EF6E  F013         	goto	l1626
  6530   00267C                     u5400:
  6531   00267C                     
  6532                           ; BSR set to: 0
  6533   00267C  0E01               	movlw	1
  6534   00267E  6FE0               	movwf	___llmod@counter& (0+255),b
  6535   002680  EF48  F013         	goto	l8541
  6536   002684                     l8539:
  6537                           
  6538                           ; BSR set to: 0
  6539   002684  90D8               	bcf	status,0,c
  6540   002686  37DC               	rlcf	___llmod@divisor& (0+255),f,b
  6541   002688  37DD               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6542   00268A  37DE               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6543   00268C  37DF               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6544   00268E  2BE0               	incf	___llmod@counter& (0+255),f,b
  6545   002690                     l8541:
  6546                           
  6547                           ; BSR set to: 0
  6548   002690  AFDF               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6549   002692  EF4D  F013         	goto	u5411
  6550   002696  EF4F  F013         	goto	u5410
  6551   00269A                     u5411:
  6552   00269A  EF42  F013         	goto	l8539
  6553   00269E                     u5410:
  6554   00269E                     l8543:
  6555                           
  6556                           ; BSR set to: 0
  6557   00269E  51DC               	movf	___llmod@divisor& (0+255),w,b
  6558   0026A0  5DD8               	subwf	___llmod@dividend& (0+255),w,b
  6559   0026A2  51DD               	movf	(___llmod@divisor+1)& (0+255),w,b
  6560   0026A4  59D9               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6561   0026A6  51DE               	movf	(___llmod@divisor+2)& (0+255),w,b
  6562   0026A8  59DA               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6563   0026AA  51DF               	movf	(___llmod@divisor+3)& (0+255),w,b
  6564   0026AC  59DB               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6565   0026AE  A0D8               	btfss	status,0,c
  6566   0026B0  EF5C  F013         	goto	u5421
  6567   0026B4  EF5E  F013         	goto	u5420
  6568   0026B8                     u5421:
  6569   0026B8  EF66  F013         	goto	l8547
  6570   0026BC                     u5420:
  6571   0026BC                     
  6572                           ; BSR set to: 0
  6573   0026BC  51DC               	movf	___llmod@divisor& (0+255),w,b
  6574   0026BE  5FD8               	subwf	___llmod@dividend& (0+255),f,b
  6575   0026C0  51DD               	movf	(___llmod@divisor+1)& (0+255),w,b
  6576   0026C2  5BD9               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6577   0026C4  51DE               	movf	(___llmod@divisor+2)& (0+255),w,b
  6578   0026C6  5BDA               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6579   0026C8  51DF               	movf	(___llmod@divisor+3)& (0+255),w,b
  6580   0026CA  5BDB               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6581   0026CC                     l8547:
  6582                           
  6583                           ; BSR set to: 0
  6584   0026CC  90D8               	bcf	status,0,c
  6585   0026CE  33DF               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6586   0026D0  33DE               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6587   0026D2  33DD               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6588   0026D4  33DC               	rrcf	___llmod@divisor& (0+255),f,b
  6589   0026D6                     
  6590                           ; BSR set to: 0
  6591   0026D6  2FE0               	decfsz	___llmod@counter& (0+255),f,b
  6592   0026D8  EF4F  F013         	goto	l8543
  6593   0026DC                     l1626:
  6594                           
  6595                           ; BSR set to: 0
  6596   0026DC  C0D8  F0D8         	movff	___llmod@dividend,?___llmod
  6597   0026E0  C0D9  F0D9         	movff	___llmod@dividend+1,?___llmod+1
  6598   0026E4  C0DA  F0DA         	movff	___llmod@dividend+2,?___llmod+2
  6599   0026E8  C0DB  F0DB         	movff	___llmod@dividend+3,?___llmod+3
  6600   0026EC                     
  6601                           ; BSR set to: 0
  6602   0026EC  0012               	return		;funcret
  6603   0026EE                     __end_of___llmod:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function ___lldiv *****************
  6607 ;; Defined at:
  6608 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  dividend        4    0[BANK0 ] unsigned long 
  6611 ;;  divisor         4    4[BANK0 ] unsigned long 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  quotient        4    9[BANK0 ] unsigned long 
  6614 ;;  counter         1    8[BANK0 ] unsigned char 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  4    0[BANK0 ] unsigned long 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6624 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6627 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6628 ;;Total ram usage:       13 bytes
  6629 ;; Hardware stack levels used: 1
  6630 ;; Hardware stack levels required when called: 10
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_vfpfcnvrt
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text44
  6639   002476                     __ptext44:
  6640                           	callstack 0
  6641   002476                     ___lldiv:
  6642                           	callstack 17
  6643   002476  0E00               	movlw	0
  6644   002478  0100               	movlb	0	; () banked
  6645   00247A  6FE1               	movwf	___lldiv@quotient& (0+255),b
  6646   00247C  0E00               	movlw	0
  6647   00247E  6FE2               	movwf	(___lldiv@quotient+1)& (0+255),b
  6648   002480  0E00               	movlw	0
  6649   002482  6FE3               	movwf	(___lldiv@quotient+2)& (0+255),b
  6650   002484  0E00               	movlw	0
  6651   002486  6FE4               	movwf	(___lldiv@quotient+3)& (0+255),b
  6652   002488                     
  6653                           ; BSR set to: 0
  6654   002488  51DC               	movf	___lldiv@divisor& (0+255),w,b
  6655   00248A  11DD               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6656   00248C  11DE               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6657   00248E  11DF               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6658   002490  B4D8               	btfsc	status,2,c
  6659   002492  EF4D  F012         	goto	u5251
  6660   002496  EF4F  F012         	goto	u5250
  6661   00249A                     u5251:
  6662   00249A  EF85  F012         	goto	l1233
  6663   00249E                     u5250:
  6664   00249E                     
  6665                           ; BSR set to: 0
  6666   00249E  0E01               	movlw	1
  6667   0024A0  6FE0               	movwf	___lldiv@counter& (0+255),b
  6668   0024A2  EF59  F012         	goto	l8441
  6669   0024A6                     l8439:
  6670                           
  6671                           ; BSR set to: 0
  6672   0024A6  90D8               	bcf	status,0,c
  6673   0024A8  37DC               	rlcf	___lldiv@divisor& (0+255),f,b
  6674   0024AA  37DD               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6675   0024AC  37DE               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6676   0024AE  37DF               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6677   0024B0  2BE0               	incf	___lldiv@counter& (0+255),f,b
  6678   0024B2                     l8441:
  6679                           
  6680                           ; BSR set to: 0
  6681   0024B2  AFDF               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6682   0024B4  EF5E  F012         	goto	u5261
  6683   0024B8  EF60  F012         	goto	u5260
  6684   0024BC                     u5261:
  6685   0024BC  EF53  F012         	goto	l8439
  6686   0024C0                     u5260:
  6687   0024C0                     l8443:
  6688                           
  6689                           ; BSR set to: 0
  6690   0024C0  90D8               	bcf	status,0,c
  6691   0024C2  37E1               	rlcf	___lldiv@quotient& (0+255),f,b
  6692   0024C4  37E2               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6693   0024C6  37E3               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6694   0024C8  37E4               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6695   0024CA                     
  6696                           ; BSR set to: 0
  6697   0024CA  51DC               	movf	___lldiv@divisor& (0+255),w,b
  6698   0024CC  5DD8               	subwf	___lldiv@dividend& (0+255),w,b
  6699   0024CE  51DD               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6700   0024D0  59D9               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6701   0024D2  51DE               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6702   0024D4  59DA               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6703   0024D6  51DF               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6704   0024D8  59DB               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6705   0024DA  A0D8               	btfss	status,0,c
  6706   0024DC  EF72  F012         	goto	u5271
  6707   0024E0  EF74  F012         	goto	u5270
  6708   0024E4                     u5271:
  6709   0024E4  EF7D  F012         	goto	l8451
  6710   0024E8                     u5270:
  6711   0024E8                     
  6712                           ; BSR set to: 0
  6713   0024E8  51DC               	movf	___lldiv@divisor& (0+255),w,b
  6714   0024EA  5FD8               	subwf	___lldiv@dividend& (0+255),f,b
  6715   0024EC  51DD               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6716   0024EE  5BD9               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6717   0024F0  51DE               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6718   0024F2  5BDA               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6719   0024F4  51DF               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6720   0024F6  5BDB               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6721   0024F8                     
  6722                           ; BSR set to: 0
  6723   0024F8  81E1               	bsf	___lldiv@quotient& (0+255),0,b
  6724   0024FA                     l8451:
  6725                           
  6726                           ; BSR set to: 0
  6727   0024FA  90D8               	bcf	status,0,c
  6728   0024FC  33DF               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6729   0024FE  33DE               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6730   002500  33DD               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6731   002502  33DC               	rrcf	___lldiv@divisor& (0+255),f,b
  6732   002504                     
  6733                           ; BSR set to: 0
  6734   002504  2FE0               	decfsz	___lldiv@counter& (0+255),f,b
  6735   002506  EF60  F012         	goto	l8443
  6736   00250A                     l1233:
  6737                           
  6738                           ; BSR set to: 0
  6739   00250A  C0E1  F0D8         	movff	___lldiv@quotient,?___lldiv
  6740   00250E  C0E2  F0D9         	movff	___lldiv@quotient+1,?___lldiv+1
  6741   002512  C0E3  F0DA         	movff	___lldiv@quotient+2,?___lldiv+2
  6742   002516  C0E4  F0DB         	movff	___lldiv@quotient+3,?___lldiv+3
  6743   00251A                     
  6744                           ; BSR set to: 0
  6745   00251A  0012               	return		;funcret
  6746   00251C                     __end_of___lldiv:
  6747                           	callstack 0
  6748                           
  6749 ;; *************** function ___almod *****************
  6750 ;; Defined at:
  6751 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\almod.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  dividend        4    0[BANK0 ] long 
  6754 ;;  divisor         4    4[BANK0 ] long 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  sign            1    9[BANK0 ] unsigned char 
  6757 ;;  counter         1    8[BANK0 ] unsigned char 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  4    0[BANK0 ] long 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6767 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;Total ram usage:       10 bytes
  6772 ;; Hardware stack levels used: 1
  6773 ;; Hardware stack levels required when called: 10
  6774 ;; This function calls:
  6775 ;;		Nothing
  6776 ;; This function is called by:
  6777 ;;		_vfpfcnvrt
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text45
  6782   002162                     __ptext45:
  6783                           	callstack 0
  6784   002162                     ___almod:
  6785                           	callstack 17
  6786   002162  0E00               	movlw	0
  6787   002164  0100               	movlb	0	; () banked
  6788   002166  6FE1               	movwf	___almod@sign& (0+255),b
  6789   002168                     
  6790                           ; BSR set to: 0
  6791   002168  BFDB               	btfsc	(___almod@dividend+3)& (0+255),7,b
  6792   00216A  EFBB  F010         	goto	u5340
  6793   00216E  EFB9  F010         	goto	u5341
  6794   002172                     u5341:
  6795   002172  EFC5  F010         	goto	l8507
  6796   002176                     u5340:
  6797   002176                     
  6798                           ; BSR set to: 0
  6799   002176  1FDB               	comf	(___almod@dividend+3)& (0+255),f,b
  6800   002178  1FDA               	comf	(___almod@dividend+2)& (0+255),f,b
  6801   00217A  1FD9               	comf	(___almod@dividend+1)& (0+255),f,b
  6802   00217C  6DD8               	negf	___almod@dividend& (0+255),b
  6803   00217E  0E00               	movlw	0
  6804   002180  23D9               	addwfc	(___almod@dividend+1)& (0+255),f,b
  6805   002182  23DA               	addwfc	(___almod@dividend+2)& (0+255),f,b
  6806   002184  23DB               	addwfc	(___almod@dividend+3)& (0+255),f,b
  6807   002186                     
  6808                           ; BSR set to: 0
  6809   002186  0E01               	movlw	1
  6810   002188  6FE1               	movwf	___almod@sign& (0+255),b
  6811   00218A                     l8507:
  6812                           
  6813                           ; BSR set to: 0
  6814   00218A  BFDF               	btfsc	(___almod@divisor+3)& (0+255),7,b
  6815   00218C  EFCC  F010         	goto	u5350
  6816   002190  EFCA  F010         	goto	u5351
  6817   002194                     u5351:
  6818   002194  EFD4  F010         	goto	l8511
  6819   002198                     u5350:
  6820   002198                     
  6821                           ; BSR set to: 0
  6822   002198  1FDF               	comf	(___almod@divisor+3)& (0+255),f,b
  6823   00219A  1FDE               	comf	(___almod@divisor+2)& (0+255),f,b
  6824   00219C  1FDD               	comf	(___almod@divisor+1)& (0+255),f,b
  6825   00219E  6DDC               	negf	___almod@divisor& (0+255),b
  6826   0021A0  0E00               	movlw	0
  6827   0021A2  23DD               	addwfc	(___almod@divisor+1)& (0+255),f,b
  6828   0021A4  23DE               	addwfc	(___almod@divisor+2)& (0+255),f,b
  6829   0021A6  23DF               	addwfc	(___almod@divisor+3)& (0+255),f,b
  6830   0021A8                     l8511:
  6831                           
  6832                           ; BSR set to: 0
  6833   0021A8  51DC               	movf	___almod@divisor& (0+255),w,b
  6834   0021AA  11DD               	iorwf	(___almod@divisor+1)& (0+255),w,b
  6835   0021AC  11DE               	iorwf	(___almod@divisor+2)& (0+255),w,b
  6836   0021AE  11DF               	iorwf	(___almod@divisor+3)& (0+255),w,b
  6837   0021B0  B4D8               	btfsc	status,2,c
  6838   0021B2  EFDD  F010         	goto	u5361
  6839   0021B6  EFDF  F010         	goto	u5360
  6840   0021BA                     u5361:
  6841   0021BA  EF0F  F011         	goto	l8527
  6842   0021BE                     u5360:
  6843   0021BE                     
  6844                           ; BSR set to: 0
  6845   0021BE  0E01               	movlw	1
  6846   0021C0  6FE0               	movwf	___almod@counter& (0+255),b
  6847   0021C2  EFE9  F010         	goto	l8517
  6848   0021C6                     l8515:
  6849                           
  6850                           ; BSR set to: 0
  6851   0021C6  90D8               	bcf	status,0,c
  6852   0021C8  37DC               	rlcf	___almod@divisor& (0+255),f,b
  6853   0021CA  37DD               	rlcf	(___almod@divisor+1)& (0+255),f,b
  6854   0021CC  37DE               	rlcf	(___almod@divisor+2)& (0+255),f,b
  6855   0021CE  37DF               	rlcf	(___almod@divisor+3)& (0+255),f,b
  6856   0021D0  2BE0               	incf	___almod@counter& (0+255),f,b
  6857   0021D2                     l8517:
  6858                           
  6859                           ; BSR set to: 0
  6860   0021D2  AFDF               	btfss	(___almod@divisor+3)& (0+255),7,b
  6861   0021D4  EFEE  F010         	goto	u5371
  6862   0021D8  EFF0  F010         	goto	u5370
  6863   0021DC                     u5371:
  6864   0021DC  EFE3  F010         	goto	l8515
  6865   0021E0                     u5370:
  6866   0021E0                     l8519:
  6867                           
  6868                           ; BSR set to: 0
  6869   0021E0  51DC               	movf	___almod@divisor& (0+255),w,b
  6870   0021E2  5DD8               	subwf	___almod@dividend& (0+255),w,b
  6871   0021E4  51DD               	movf	(___almod@divisor+1)& (0+255),w,b
  6872   0021E6  59D9               	subwfb	(___almod@dividend+1)& (0+255),w,b
  6873   0021E8  51DE               	movf	(___almod@divisor+2)& (0+255),w,b
  6874   0021EA  59DA               	subwfb	(___almod@dividend+2)& (0+255),w,b
  6875   0021EC  51DF               	movf	(___almod@divisor+3)& (0+255),w,b
  6876   0021EE  59DB               	subwfb	(___almod@dividend+3)& (0+255),w,b
  6877   0021F0  A0D8               	btfss	status,0,c
  6878   0021F2  EFFD  F010         	goto	u5381
  6879   0021F6  EFFF  F010         	goto	u5380
  6880   0021FA                     u5381:
  6881   0021FA  EF07  F011         	goto	l8523
  6882   0021FE                     u5380:
  6883   0021FE                     
  6884                           ; BSR set to: 0
  6885   0021FE  51DC               	movf	___almod@divisor& (0+255),w,b
  6886   002200  5FD8               	subwf	___almod@dividend& (0+255),f,b
  6887   002202  51DD               	movf	(___almod@divisor+1)& (0+255),w,b
  6888   002204  5BD9               	subwfb	(___almod@dividend+1)& (0+255),f,b
  6889   002206  51DE               	movf	(___almod@divisor+2)& (0+255),w,b
  6890   002208  5BDA               	subwfb	(___almod@dividend+2)& (0+255),f,b
  6891   00220A  51DF               	movf	(___almod@divisor+3)& (0+255),w,b
  6892   00220C  5BDB               	subwfb	(___almod@dividend+3)& (0+255),f,b
  6893   00220E                     l8523:
  6894                           
  6895                           ; BSR set to: 0
  6896   00220E  90D8               	bcf	status,0,c
  6897   002210  33DF               	rrcf	(___almod@divisor+3)& (0+255),f,b
  6898   002212  33DE               	rrcf	(___almod@divisor+2)& (0+255),f,b
  6899   002214  33DD               	rrcf	(___almod@divisor+1)& (0+255),f,b
  6900   002216  33DC               	rrcf	___almod@divisor& (0+255),f,b
  6901   002218                     
  6902                           ; BSR set to: 0
  6903   002218  2FE0               	decfsz	___almod@counter& (0+255),f,b
  6904   00221A  EFF0  F010         	goto	l8519
  6905   00221E                     l8527:
  6906                           
  6907                           ; BSR set to: 0
  6908   00221E  51E1               	movf	___almod@sign& (0+255),w,b
  6909   002220  B4D8               	btfsc	status,2,c
  6910   002222  EF15  F011         	goto	u5391
  6911   002226  EF17  F011         	goto	u5390
  6912   00222A                     u5391:
  6913   00222A  EF1F  F011         	goto	l8531
  6914   00222E                     u5390:
  6915   00222E                     
  6916                           ; BSR set to: 0
  6917   00222E  1FDB               	comf	(___almod@dividend+3)& (0+255),f,b
  6918   002230  1FDA               	comf	(___almod@dividend+2)& (0+255),f,b
  6919   002232  1FD9               	comf	(___almod@dividend+1)& (0+255),f,b
  6920   002234  6DD8               	negf	___almod@dividend& (0+255),b
  6921   002236  0E00               	movlw	0
  6922   002238  23D9               	addwfc	(___almod@dividend+1)& (0+255),f,b
  6923   00223A  23DA               	addwfc	(___almod@dividend+2)& (0+255),f,b
  6924   00223C  23DB               	addwfc	(___almod@dividend+3)& (0+255),f,b
  6925   00223E                     l8531:
  6926                           
  6927                           ; BSR set to: 0
  6928   00223E  C0D8  F0D8         	movff	___almod@dividend,?___almod
  6929   002242  C0D9  F0D9         	movff	___almod@dividend+1,?___almod+1
  6930   002246  C0DA  F0DA         	movff	___almod@dividend+2,?___almod+2
  6931   00224A  C0DB  F0DB         	movff	___almod@dividend+3,?___almod+3
  6932   00224E                     
  6933                           ; BSR set to: 0
  6934   00224E  0012               	return		;funcret
  6935   002250                     __end_of___almod:
  6936                           	callstack 0
  6937                           
  6938 ;; *************** function ___aldiv *****************
  6939 ;; Defined at:
  6940 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aldiv.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  dividend        4    0[BANK0 ] long 
  6943 ;;  divisor         4    4[BANK0 ] long 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  quotient        4   10[BANK0 ] long 
  6946 ;;  sign            1    9[BANK0 ] unsigned char 
  6947 ;;  counter         1    8[BANK0 ] unsigned char 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  4    0[BANK0 ] long 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6957 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;Total ram usage:       14 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; Hardware stack levels required when called: 10
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_vfpfcnvrt
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text46
  6972   002054                     __ptext46:
  6973                           	callstack 0
  6974   002054                     ___aldiv:
  6975                           	callstack 17
  6976   002054  0E00               	movlw	0
  6977   002056  0100               	movlb	0	; () banked
  6978   002058  6FE1               	movwf	___aldiv@sign& (0+255),b
  6979   00205A                     
  6980                           ; BSR set to: 0
  6981   00205A  BFDF               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  6982   00205C  EF34  F010         	goto	u5280
  6983   002060  EF32  F010         	goto	u5281
  6984   002064                     u5281:
  6985   002064  EF3E  F010         	goto	l8463
  6986   002068                     u5280:
  6987   002068                     
  6988                           ; BSR set to: 0
  6989   002068  1FDF               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6990   00206A  1FDE               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6991   00206C  1FDD               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6992   00206E  6DDC               	negf	___aldiv@divisor& (0+255),b
  6993   002070  0E00               	movlw	0
  6994   002072  23DD               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6995   002074  23DE               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6996   002076  23DF               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6997   002078                     
  6998                           ; BSR set to: 0
  6999   002078  0E01               	movlw	1
  7000   00207A  6FE1               	movwf	___aldiv@sign& (0+255),b
  7001   00207C                     l8463:
  7002                           
  7003                           ; BSR set to: 0
  7004   00207C  BFDB               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  7005   00207E  EF45  F010         	goto	u5290
  7006   002082  EF43  F010         	goto	u5291
  7007   002086                     u5291:
  7008   002086  EF4F  F010         	goto	l8469
  7009   00208A                     u5290:
  7010   00208A                     
  7011                           ; BSR set to: 0
  7012   00208A  1FDB               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7013   00208C  1FDA               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7014   00208E  1FD9               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7015   002090  6DD8               	negf	___aldiv@dividend& (0+255),b
  7016   002092  0E00               	movlw	0
  7017   002094  23D9               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7018   002096  23DA               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7019   002098  23DB               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7020   00209A                     
  7021                           ; BSR set to: 0
  7022   00209A  0E01               	movlw	1
  7023   00209C  1BE1               	xorwf	___aldiv@sign& (0+255),f,b
  7024   00209E                     l8469:
  7025                           
  7026                           ; BSR set to: 0
  7027   00209E  0E00               	movlw	0
  7028   0020A0  6FE2               	movwf	___aldiv@quotient& (0+255),b
  7029   0020A2  0E00               	movlw	0
  7030   0020A4  6FE3               	movwf	(___aldiv@quotient+1)& (0+255),b
  7031   0020A6  0E00               	movlw	0
  7032   0020A8  6FE4               	movwf	(___aldiv@quotient+2)& (0+255),b
  7033   0020AA  0E00               	movlw	0
  7034   0020AC  6FE5               	movwf	(___aldiv@quotient+3)& (0+255),b
  7035   0020AE                     
  7036                           ; BSR set to: 0
  7037   0020AE  51DC               	movf	___aldiv@divisor& (0+255),w,b
  7038   0020B0  11DD               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7039   0020B2  11DE               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7040   0020B4  11DF               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7041   0020B6  B4D8               	btfsc	status,2,c
  7042   0020B8  EF60  F010         	goto	u5301
  7043   0020BC  EF62  F010         	goto	u5300
  7044   0020C0                     u5301:
  7045   0020C0  EF98  F010         	goto	l8491
  7046   0020C4                     u5300:
  7047   0020C4                     
  7048                           ; BSR set to: 0
  7049   0020C4  0E01               	movlw	1
  7050   0020C6  6FE0               	movwf	___aldiv@counter& (0+255),b
  7051   0020C8  EF6C  F010         	goto	l8477
  7052   0020CC                     l8475:
  7053                           
  7054                           ; BSR set to: 0
  7055   0020CC  90D8               	bcf	status,0,c
  7056   0020CE  37DC               	rlcf	___aldiv@divisor& (0+255),f,b
  7057   0020D0  37DD               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7058   0020D2  37DE               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7059   0020D4  37DF               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7060   0020D6  2BE0               	incf	___aldiv@counter& (0+255),f,b
  7061   0020D8                     l8477:
  7062                           
  7063                           ; BSR set to: 0
  7064   0020D8  AFDF               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7065   0020DA  EF71  F010         	goto	u5311
  7066   0020DE  EF73  F010         	goto	u5310
  7067   0020E2                     u5311:
  7068   0020E2  EF66  F010         	goto	l8475
  7069   0020E6                     u5310:
  7070   0020E6                     l8479:
  7071                           
  7072                           ; BSR set to: 0
  7073   0020E6  90D8               	bcf	status,0,c
  7074   0020E8  37E2               	rlcf	___aldiv@quotient& (0+255),f,b
  7075   0020EA  37E3               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7076   0020EC  37E4               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7077   0020EE  37E5               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7078   0020F0                     
  7079                           ; BSR set to: 0
  7080   0020F0  51DC               	movf	___aldiv@divisor& (0+255),w,b
  7081   0020F2  5DD8               	subwf	___aldiv@dividend& (0+255),w,b
  7082   0020F4  51DD               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7083   0020F6  59D9               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7084   0020F8  51DE               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7085   0020FA  59DA               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7086   0020FC  51DF               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7087   0020FE  59DB               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7088   002100  A0D8               	btfss	status,0,c
  7089   002102  EF85  F010         	goto	u5321
  7090   002106  EF87  F010         	goto	u5320
  7091   00210A                     u5321:
  7092   00210A  EF90  F010         	goto	l8487
  7093   00210E                     u5320:
  7094   00210E                     
  7095                           ; BSR set to: 0
  7096   00210E  51DC               	movf	___aldiv@divisor& (0+255),w,b
  7097   002110  5FD8               	subwf	___aldiv@dividend& (0+255),f,b
  7098   002112  51DD               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7099   002114  5BD9               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7100   002116  51DE               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7101   002118  5BDA               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7102   00211A  51DF               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7103   00211C  5BDB               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7104   00211E                     
  7105                           ; BSR set to: 0
  7106   00211E  81E2               	bsf	___aldiv@quotient& (0+255),0,b
  7107   002120                     l8487:
  7108                           
  7109                           ; BSR set to: 0
  7110   002120  90D8               	bcf	status,0,c
  7111   002122  33DF               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7112   002124  33DE               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7113   002126  33DD               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7114   002128  33DC               	rrcf	___aldiv@divisor& (0+255),f,b
  7115   00212A                     
  7116                           ; BSR set to: 0
  7117   00212A  2FE0               	decfsz	___aldiv@counter& (0+255),f,b
  7118   00212C  EF73  F010         	goto	l8479
  7119   002130                     l8491:
  7120                           
  7121                           ; BSR set to: 0
  7122   002130  51E1               	movf	___aldiv@sign& (0+255),w,b
  7123   002132  B4D8               	btfsc	status,2,c
  7124   002134  EF9E  F010         	goto	u5331
  7125   002138  EFA0  F010         	goto	u5330
  7126   00213C                     u5331:
  7127   00213C  EFA8  F010         	goto	l8495
  7128   002140                     u5330:
  7129   002140                     
  7130                           ; BSR set to: 0
  7131   002140  1FE5               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7132   002142  1FE4               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7133   002144  1FE3               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7134   002146  6DE2               	negf	___aldiv@quotient& (0+255),b
  7135   002148  0E00               	movlw	0
  7136   00214A  23E3               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7137   00214C  23E4               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7138   00214E  23E5               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7139   002150                     l8495:
  7140                           
  7141                           ; BSR set to: 0
  7142   002150  C0E2  F0D8         	movff	___aldiv@quotient,?___aldiv
  7143   002154  C0E3  F0D9         	movff	___aldiv@quotient+1,?___aldiv+1
  7144   002158  C0E4  F0DA         	movff	___aldiv@quotient+2,?___aldiv+2
  7145   00215C  C0E5  F0DB         	movff	___aldiv@quotient+3,?___aldiv+3
  7146   002160                     
  7147                           ; BSR set to: 0
  7148   002160  0012               	return		;funcret
  7149   002162                     __end_of___aldiv:
  7150                           	callstack 0
  7151                           
  7152 ;; *************** function _EXTEEPROM_WriteByte *****************
  7153 ;; Defined at:
  7154 ;;		line 9 in file "AECUL/ExtEEPROM/ExtEEPROM.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  Eadd            1    wreg     unsigned char 
  7157 ;;  Byteadd         1   12[BANK0 ] unsigned char 
  7158 ;;  data            1   13[BANK0 ] unsigned char 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  Eadd            1   14[BANK0 ] unsigned char 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      void 
  7163 ;; Registers used:
  7164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;Total ram usage:        3 bytes
  7175 ;; Hardware stack levels used: 1
  7176 ;; Hardware stack levels required when called: 14
  7177 ;; This function calls:
  7178 ;;		_I2C_Write1ByteRegister
  7179 ;; This function is called by:
  7180 ;;		_main
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           	psect	text47
  7185   00348C                     __ptext47:
  7186                           	callstack 0
  7187   00348C                     _EXTEEPROM_WriteByte:
  7188                           	callstack 16
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;incstack = 0
  7192                           ;EXTEEPROM_WriteByte@Eadd stored from wreg
  7193   00348C  0100               	movlb	0	; () banked
  7194   00348E  6FE6               	movwf	EXTEEPROM_WriteByte@Eadd& (0+255),b
  7195   003490                     
  7196                           ;AECUL/ExtEEPROM/ExtEEPROM.c: 10:     I2C_Write1ByteRegister(Eadd,Byteadd,data);
  7197   003490  C0E4  F0E1         	movff	EXTEEPROM_WriteByte@Byteadd,I2C_Write1ByteRegister@reg
  7198   003494  C0E5  F0E2         	movff	EXTEEPROM_WriteByte@data,I2C_Write1ByteRegister@data
  7199   003498  0100               	movlb	0	; () banked
  7200   00349A  51E6               	movf	EXTEEPROM_WriteByte@Eadd& (0+255),w,b
  7201   00349C  EC34  F014         	call	_I2C_Write1ByteRegister
  7202   0034A0  0012               	return		;funcret
  7203   0034A2                     __end_of_EXTEEPROM_WriteByte:
  7204                           	callstack 0
  7205                           
  7206 ;; *************** function _I2C_Write1ByteRegister *****************
  7207 ;; Defined at:
  7208 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  address         1    wreg     unsigned char 
  7211 ;;  reg             1    9[BANK0 ] unsigned char 
  7212 ;;  data            1   10[BANK0 ] unsigned char 
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;  address         1   11[BANK0 ] unsigned char 
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1    wreg      void 
  7217 ;; Registers used:
  7218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7227 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7228 ;;Total ram usage:        3 bytes
  7229 ;; Hardware stack levels used: 1
  7230 ;; Hardware stack levels required when called: 13
  7231 ;; This function calls:
  7232 ;;		_I2C_Close
  7233 ;;		_I2C_MasterWrite
  7234 ;;		_I2C_Open
  7235 ;;		_I2C_SetAddressNackCallback
  7236 ;;		_I2C_SetBuffer
  7237 ;;		_I2C_SetDataCompleteCallback
  7238 ;; This function is called by:
  7239 ;;		_EXTEEPROM_WriteByte
  7240 ;;		_main
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text48
  7245   002868                     __ptext48:
  7246                           	callstack 0
  7247   002868                     _I2C_Write1ByteRegister:
  7248                           	callstack 17
  7249                           
  7250                           ;incstack = 0
  7251                           ;I2C_Write1ByteRegister@address stored from wreg
  7252   002868  0100               	movlb	0	; () banked
  7253   00286A  6FE3               	movwf	I2C_Write1ByteRegister@address& (0+255),b
  7254   00286C                     l6519:
  7255   00286C  0100               	movlb	0	; () banked
  7256   00286E  51E3               	movf	I2C_Write1ByteRegister@address& (0+255),w,b
  7257   002870  ECE1  F012         	call	_I2C_Open
  7258   002874  0900               	iorlw	0
  7259   002876  B4D8               	btfsc	status,2,c
  7260   002878  EF40  F014         	goto	u3961
  7261   00287C  EF42  F014         	goto	u3960
  7262   002880                     u3961:
  7263   002880  EF36  F014         	goto	l6519
  7264   002884                     u3960:
  7265   002884                     
  7266                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  7267   002884  0EFE               	movlw	low _wr1RegCompleteHandler
  7268   002886  0100               	movlb	0	; () banked
  7269   002888  6FDD               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  7270   00288A  0E31               	movlw	high _wr1RegCompleteHandler
  7271   00288C  6FDE               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  7272   00288E  0EE2               	movlw	low I2C_Write1ByteRegister@data
  7273   002890  6FDF               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  7274   002892  6BE0               	clrf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  7275   002894  EC22  F01A         	call	_I2C_SetDataCompleteCallback	;wreg free
  7276   002898                     
  7277                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  7278   002898  0EE1               	movlw	low I2C_Write1ByteRegister@reg
  7279   00289A  0100               	movlb	0	; () banked
  7280   00289C  6FD8               	movwf	I2C_SetBuffer@buffer& (0+255),b
  7281   00289E  6BD9               	clrf	(I2C_SetBuffer@buffer+1)& (0+255),b
  7282   0028A0  0E00               	movlw	0
  7283   0028A2  6FDB               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
  7284   0028A4  0E01               	movlw	1
  7285   0028A6  6FDA               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
  7286   0028A8  ECC9  F019         	call	_I2C_SetBuffer	;wreg free
  7287   0028AC                     
  7288                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  7289   0028AC  0E00               	movlw	0
  7290   0028AE  0100               	movlb	0	; () banked
  7291   0028B0  6FDD               	movwf	I2C_SetAddressNackCallback@cb& (0+255),b
  7292   0028B2  0E00               	movlw	0
  7293   0028B4  6FDE               	movwf	(I2C_SetAddressNackCallback@cb+1)& (0+255),b
  7294   0028B6  0E00               	movlw	0
  7295   0028B8  6FDF               	movwf	I2C_SetAddressNackCallback@ptr& (0+255),b
  7296   0028BA  0E00               	movlw	0
  7297   0028BC  6FE0               	movwf	(I2C_SetAddressNackCallback@ptr+1)& (0+255),b
  7298   0028BE  EC2E  F01A         	call	_I2C_SetAddressNackCallback	;wreg free
  7299   0028C2                     
  7300                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  7301   0028C2  ECBB  F01A         	call	_I2C_MasterWrite	;wreg free
  7302   0028C6                     l6529:
  7303   0028C6  EC62  F018         	call	_I2C_Close	;wreg free
  7304   0028CA  06E8               	decf	wreg,f,c
  7305   0028CC  B4D8               	btfsc	status,2,c
  7306   0028CE  EF6B  F014         	goto	u3971
  7307   0028D2  EF6D  F014         	goto	u3970
  7308   0028D6                     u3971:
  7309   0028D6  EF63  F014         	goto	l6529
  7310   0028DA                     u3970:
  7311   0028DA  0012               	return		;funcret
  7312   0028DC                     __end_of_I2C_Write1ByteRegister:
  7313                           	callstack 0
  7314                           
  7315 ;; *************** function _EXTEEPROM_ReadByte *****************
  7316 ;; Defined at:
  7317 ;;		line 13 in file "AECUL/ExtEEPROM/ExtEEPROM.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  Eadd            1    wreg     unsigned char 
  7320 ;;  Byteadd         1   12[BANK0 ] unsigned char 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  Eadd            1   13[BANK0 ] unsigned char 
  7323 ;;  read            1   14[BANK0 ] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      unsigned char 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7333 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7337 ;;Total ram usage:        3 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 14
  7340 ;; This function calls:
  7341 ;;		_I2C_Read1ByteRegister
  7342 ;; This function is called by:
  7343 ;;		_main
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text49
  7348   00342C                     __ptext49:
  7349                           	callstack 0
  7350   00342C                     _EXTEEPROM_ReadByte:
  7351                           	callstack 16
  7352                           
  7353                           ;incstack = 0
  7354                           ;EXTEEPROM_ReadByte@Eadd stored from wreg
  7355   00342C  0100               	movlb	0	; () banked
  7356   00342E  6FE5               	movwf	EXTEEPROM_ReadByte@Eadd& (0+255),b
  7357   003430                     
  7358                           ;AECUL/ExtEEPROM/ExtEEPROM.c: 14:     uint8_t read;;AECUL/ExtEEPROM/ExtEEPROM.c: 15:    
      +                           read = I2C_Read1ByteRegister(Eadd,Byteadd);
  7359   003430  C0E4  F0E1         	movff	EXTEEPROM_ReadByte@Byteadd,I2C_Read1ByteRegister@reg
  7360   003434  0100               	movlb	0	; () banked
  7361   003436  51E5               	movf	EXTEEPROM_ReadByte@Eadd& (0+255),w,b
  7362   003438  ECB7  F013         	call	_I2C_Read1ByteRegister
  7363   00343C  0100               	movlb	0	; () banked
  7364   00343E  6FE6               	movwf	EXTEEPROM_ReadByte@read& (0+255),b
  7365   003440                     
  7366                           ; BSR set to: 0
  7367                           ;AECUL/ExtEEPROM/ExtEEPROM.c: 16:     return read;
  7368   003440  51E6               	movf	EXTEEPROM_ReadByte@read& (0+255),w,b
  7369   003442                     
  7370                           ; BSR set to: 0
  7371   003442  0012               	return		;funcret
  7372   003444                     __end_of_EXTEEPROM_ReadByte:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function _I2C_Read1ByteRegister *****************
  7376 ;; Defined at:
  7377 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  address         1    wreg     unsigned char 
  7380 ;;  reg             1    9[BANK0 ] unsigned char 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  address         1   10[BANK0 ] unsigned char 
  7383 ;;  returnValue     1   11[BANK0 ] unsigned char 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      unsigned char 
  7386 ;; Registers used:
  7387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7393 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;Total ram usage:        3 bytes
  7398 ;; Hardware stack levels used: 1
  7399 ;; Hardware stack levels required when called: 13
  7400 ;; This function calls:
  7401 ;;		_I2C_Close
  7402 ;;		_I2C_MasterWrite
  7403 ;;		_I2C_Open
  7404 ;;		_I2C_SetAddressNackCallback
  7405 ;;		_I2C_SetBuffer
  7406 ;;		_I2C_SetDataCompleteCallback
  7407 ;; This function is called by:
  7408 ;;		_EXTEEPROM_ReadByte
  7409 ;;		_GetDataAndTime
  7410 ;;		_ReadTemp
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text50
  7415   00276E                     __ptext50:
  7416                           	callstack 0
  7417   00276E                     _I2C_Read1ByteRegister:
  7418                           	callstack 14
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;incstack = 0
  7422                           ;I2C_Read1ByteRegister@address stored from wreg
  7423   00276E  0100               	movlb	0	; () banked
  7424   002770  6FE2               	movwf	I2C_Read1ByteRegister@address& (0+255),b
  7425   002772                     
  7426                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  7427   002772  0E00               	movlw	0
  7428   002774  0100               	movlb	0	; () banked
  7429   002776  6FE3               	movwf	I2C_Read1ByteRegister@returnValue& (0+255),b
  7430   002778                     l6101:
  7431   002778  0100               	movlb	0	; () banked
  7432   00277A  51E2               	movf	I2C_Read1ByteRegister@address& (0+255),w,b
  7433   00277C  ECE1  F012         	call	_I2C_Open
  7434   002780  0900               	iorlw	0
  7435   002782  B4D8               	btfsc	status,2,c
  7436   002784  EFC6  F013         	goto	u3671
  7437   002788  EFC8  F013         	goto	u3670
  7438   00278C                     u3671:
  7439   00278C  EFBC  F013         	goto	l6101
  7440   002790                     u3670:
  7441   002790                     
  7442                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  7443   002790  0E56               	movlw	low _rd1RegCompleteHandler
  7444   002792  0100               	movlb	0	; () banked
  7445   002794  6FDD               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
  7446   002796  0E32               	movlw	high _rd1RegCompleteHandler
  7447   002798  6FDE               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
  7448   00279A  0EE3               	movlw	low I2C_Read1ByteRegister@returnValue
  7449   00279C  6FDF               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
  7450   00279E  6BE0               	clrf	(I2C_SetDataCompleteCallback@ptr+1)& (0+255),b
  7451   0027A0  EC22  F01A         	call	_I2C_SetDataCompleteCallback	;wreg free
  7452   0027A4                     
  7453                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  7454   0027A4  0EE1               	movlw	low I2C_Read1ByteRegister@reg
  7455   0027A6  0100               	movlb	0	; () banked
  7456   0027A8  6FD8               	movwf	I2C_SetBuffer@buffer& (0+255),b
  7457   0027AA  6BD9               	clrf	(I2C_SetBuffer@buffer+1)& (0+255),b
  7458   0027AC  0E00               	movlw	0
  7459   0027AE  6FDB               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
  7460   0027B0  0E01               	movlw	1
  7461   0027B2  6FDA               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
  7462   0027B4  ECC9  F019         	call	_I2C_SetBuffer	;wreg free
  7463   0027B8                     
  7464                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  7465   0027B8  0E00               	movlw	0
  7466   0027BA  0100               	movlb	0	; () banked
  7467   0027BC  6FDD               	movwf	I2C_SetAddressNackCallback@cb& (0+255),b
  7468   0027BE  0E00               	movlw	0
  7469   0027C0  6FDE               	movwf	(I2C_SetAddressNackCallback@cb+1)& (0+255),b
  7470   0027C2  0E00               	movlw	0
  7471   0027C4  6FDF               	movwf	I2C_SetAddressNackCallback@ptr& (0+255),b
  7472   0027C6  0E00               	movlw	0
  7473   0027C8  6FE0               	movwf	(I2C_SetAddressNackCallback@ptr+1)& (0+255),b
  7474   0027CA  EC2E  F01A         	call	_I2C_SetAddressNackCallback	;wreg free
  7475   0027CE                     
  7476                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  7477   0027CE  ECBB  F01A         	call	_I2C_MasterWrite	;wreg free
  7478   0027D2                     l6111:
  7479   0027D2  EC62  F018         	call	_I2C_Close	;wreg free
  7480   0027D6  06E8               	decf	wreg,f,c
  7481   0027D8  B4D8               	btfsc	status,2,c
  7482   0027DA  EFF1  F013         	goto	u3681
  7483   0027DE  EFF3  F013         	goto	u3680
  7484   0027E2                     u3681:
  7485   0027E2  EFE9  F013         	goto	l6111
  7486   0027E6                     u3680:
  7487   0027E6                     
  7488                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  7489   0027E6  0100               	movlb	0	; () banked
  7490   0027E8  51E3               	movf	I2C_Read1ByteRegister@returnValue& (0+255),w,b
  7491   0027EA                     
  7492                           ; BSR set to: 0
  7493   0027EA  0012               	return		;funcret
  7494   0027EC                     __end_of_I2C_Read1ByteRegister:
  7495                           	callstack 0
  7496                           
  7497 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7498 ;; Defined at:
  7499 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  7502 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7503 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7504 ;;  ptr             2    7[BANK0 ] PTR void 
  7505 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7506 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;		None
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  1    wreg      void 
  7511 ;; Registers used:
  7512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;Total ram usage:        4 bytes
  7523 ;; Hardware stack levels used: 1
  7524 ;; Hardware stack levels required when called: 11
  7525 ;; This function calls:
  7526 ;;		_I2C_SetCallback
  7527 ;; This function is called by:
  7528 ;;		_I2C_Read1ByteRegister
  7529 ;;		_I2C_Write1ByteRegister
  7530 ;;		_I2C_Read2ByteRegister
  7531 ;;		_I2C_Write2ByteRegister
  7532 ;;		_I2C_ReadDataBlock
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text51
  7537   003444                     __ptext51:
  7538                           	callstack 0
  7539   003444                     _I2C_SetDataCompleteCallback:
  7540                           	callstack 15
  7541   003444                     
  7542                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7543   003444  C0DD  F0D8         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  7544   003448  C0DE  F0D9         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  7545   00344C  C0DF  F0DA         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  7546   003450  C0E0  F0DB         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  7547   003454  0E00               	movlw	0
  7548   003456  EC13  F015         	call	_I2C_SetCallback
  7549   00345A  0012               	return		;funcret
  7550   00345C                     __end_of_I2C_SetDataCompleteCallback:
  7551                           	callstack 0
  7552                           
  7553 ;; *************** function _I2C_SetBuffer *****************
  7554 ;; Defined at:
  7555 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  buffer          2    0[BANK0 ] PTR void 
  7558 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  7559 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  7560 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  7561 ;;  bufferSize      2    2[BANK0 ] unsigned int 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;		None
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  1    wreg      void 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2, status,0
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7576 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7577 ;;Total ram usage:        4 bytes
  7578 ;; Hardware stack levels used: 1
  7579 ;; Hardware stack levels required when called: 10
  7580 ;; This function calls:
  7581 ;;		Nothing
  7582 ;; This function is called by:
  7583 ;;		_I2C_Read1ByteRegister
  7584 ;;		_I2C_Write1ByteRegister
  7585 ;;		_I2C_Read2ByteRegister
  7586 ;;		_I2C_Write2ByteRegister
  7587 ;;		_I2C_WriteNBytes
  7588 ;;		_I2C_ReadNBytes
  7589 ;;		_I2C_ReadDataBlock
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text52
  7594   003392                     __ptext52:
  7595                           	callstack 0
  7596   003392                     _I2C_SetBuffer:
  7597                           	callstack 16
  7598   003392                     
  7599                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  7600   003392  0100               	movlb	0	; () banked
  7601   003394  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  7602   003396  EFCF  F019         	goto	u3641
  7603   00339A  EFD1  F019         	goto	u3640
  7604   00339E                     u3641:
  7605   00339E  EFDA  F019         	goto	l527
  7606   0033A2                     u3640:
  7607   0033A2                     
  7608                           ; BSR set to: 0
  7609                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  7610   0033A2  C0D8  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  7611   0033A6  C0D9  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  7612   0033AA                     
  7613                           ; BSR set to: 0
  7614                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  7615   0033AA  C0DA  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  7616   0033AE  C0DB  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  7617   0033B2                     
  7618                           ; BSR set to: 0
  7619                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  7620   0033B2  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  7621   0033B4                     l527:
  7622                           
  7623                           ; BSR set to: 0
  7624   0033B4  0012               	return		;funcret
  7625   0033B6                     __end_of_I2C_SetBuffer:
  7626                           	callstack 0
  7627                           
  7628 ;; *************** function _I2C_SetAddressNackCallback *****************
  7629 ;; Defined at:
  7630 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  cb              2    5[BANK0 ] PTR FTN(PTR void ,)enum 
  7633 ;;		 -> NULL(1), 
  7634 ;;  ptr             2    7[BANK0 ] PTR void 
  7635 ;;		 -> NULL(0), 
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;		None
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7647 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7650 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7651 ;;Total ram usage:        4 bytes
  7652 ;; Hardware stack levels used: 1
  7653 ;; Hardware stack levels required when called: 11
  7654 ;; This function calls:
  7655 ;;		_I2C_SetCallback
  7656 ;; This function is called by:
  7657 ;;		_I2C_Read1ByteRegister
  7658 ;;		_I2C_Write1ByteRegister
  7659 ;;		_I2C_Read2ByteRegister
  7660 ;;		_I2C_Write2ByteRegister
  7661 ;;		_I2C_WriteNBytes
  7662 ;;		_I2C_ReadDataBlock
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           	psect	text53
  7667   00345C                     __ptext53:
  7668                           	callstack 0
  7669   00345C                     _I2C_SetAddressNackCallback:
  7670                           	callstack 15
  7671   00345C                     
  7672                           ;mcc_generated_files/i2c_master.c: 284: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 285: {;mcc_generated_files/i2c_master.c:
      +                           286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  7673   00345C  C0DD  F0D8         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  7674   003460  C0DE  F0D9         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  7675   003464  C0DF  F0DA         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  7676   003468  C0E0  F0DB         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  7677   00346C  0E02               	movlw	2
  7678   00346E  EC13  F015         	call	_I2C_SetCallback
  7679   003472  0012               	return		;funcret
  7680   003474                     __end_of_I2C_SetAddressNackCallback:
  7681                           	callstack 0
  7682                           
  7683 ;; *************** function _I2C_SetCallback *****************
  7684 ;; Defined at:
  7685 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;  idx             1    wreg     enum E3152
  7688 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  7689 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7690 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  7691 ;;  ptr             2    2[BANK0 ] PTR void 
  7692 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7693 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;  idx             1    4[BANK0 ] enum E3152
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  1    wreg      void 
  7698 ;; Registers used:
  7699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7705 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;Total ram usage:        5 bytes
  7710 ;; Hardware stack levels used: 1
  7711 ;; Hardware stack levels required when called: 10
  7712 ;; This function calls:
  7713 ;;		Nothing
  7714 ;; This function is called by:
  7715 ;;		_I2C_SetDataCompleteCallback
  7716 ;;		_I2C_SetAddressNackCallback
  7717 ;;		_I2C_SetWriteCollisionCallback
  7718 ;;		_I2C_SetDataNackCallback
  7719 ;;		_I2C_SetTimeoutCallback
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           	psect	text54
  7724   002A26                     __ptext54:
  7725                           	callstack 0
  7726   002A26                     _I2C_SetCallback:
  7727                           	callstack 15
  7728                           
  7729                           ;incstack = 0
  7730                           ;I2C_SetCallback@idx stored from wreg
  7731   002A26  0100               	movlb	0	; () banked
  7732   002A28  6FDC               	movwf	I2C_SetCallback@idx& (0+255),b
  7733   002A2A                     
  7734                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  7735   002A2A  0100               	movlb	0	; () banked
  7736   002A2C  51D8               	movf	I2C_SetCallback@cb& (0+255),w,b
  7737   002A2E  11D9               	iorwf	(I2C_SetCallback@cb+1)& (0+255),w,b
  7738   002A30  B4D8               	btfsc	status,2,c
  7739   002A32  EF1D  F015         	goto	u3611
  7740   002A36  EF1F  F015         	goto	u3610
  7741   002A3A                     u3611:
  7742   002A3A  EF35  F015         	goto	l5993
  7743   002A3E                     u3610:
  7744   002A3E                     
  7745                           ; BSR set to: 0
  7746                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7747   002A3E  51DC               	movf	I2C_SetCallback@idx& (0+255),w,b
  7748   002A40  0D02               	mullw	2
  7749   002A42  50F3               	movf	243,w,c
  7750   002A44  0F60               	addlw	low _I2C_Status
  7751   002A46  6ED9               	movwf	fsr2l,c
  7752   002A48  6ADA               	clrf	fsr2h,c
  7753   002A4A  C0D8  FFDE         	movff	I2C_SetCallback@cb,postinc2
  7754   002A4E  C0D9  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  7755                           
  7756                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  7757   002A52  51DC               	movf	I2C_SetCallback@idx& (0+255),w,b
  7758   002A54  0D02               	mullw	2
  7759   002A56  50F3               	movf	243,w,c
  7760   002A58  0F6C               	addlw	low (_I2C_Status+12)
  7761   002A5A  6ED9               	movwf	fsr2l,c
  7762   002A5C  6ADA               	clrf	fsr2h,c
  7763   002A5E  C0DA  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  7764   002A62  C0DB  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  7765                           
  7766                           ;mcc_generated_files/i2c_master.c: 310:     }
  7767   002A66  EF47  F015         	goto	l550
  7768   002A6A                     l5993:
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7772   002A6A  51DC               	movf	I2C_SetCallback@idx& (0+255),w,b
  7773   002A6C  0D02               	mullw	2
  7774   002A6E  50F3               	movf	243,w,c
  7775   002A70  0F60               	addlw	low _I2C_Status
  7776   002A72  6ED9               	movwf	fsr2l,c
  7777   002A74  6ADA               	clrf	fsr2h,c
  7778   002A76  0E10               	movlw	low _I2C_CallbackReturnStop
  7779   002A78  6EDE               	movwf	postinc2,c
  7780   002A7A  0E36               	movlw	high _I2C_CallbackReturnStop
  7781   002A7C  6EDD               	movwf	postdec2,c
  7782                           
  7783                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7784   002A7E  51DC               	movf	I2C_SetCallback@idx& (0+255),w,b
  7785   002A80  0D02               	mullw	2
  7786   002A82  50F3               	movf	243,w,c
  7787   002A84  0F6C               	addlw	low (_I2C_Status+12)
  7788   002A86  6ED9               	movwf	fsr2l,c
  7789   002A88  6ADA               	clrf	fsr2h,c
  7790   002A8A  6ADE               	clrf	postinc2,c
  7791   002A8C  6ADD               	clrf	postdec2,c
  7792   002A8E                     l550:
  7793                           
  7794                           ; BSR set to: 0
  7795   002A8E  0012               	return		;funcret
  7796   002A90                     __end_of_I2C_SetCallback:
  7797                           	callstack 0
  7798                           
  7799 ;; *************** function _I2C_Open *****************
  7800 ;; Defined at:
  7801 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  address         1    wreg     unsigned char 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  address         1    2[BANK0 ] unsigned char 
  7806 ;;  returnValue     1    3[BANK0 ] enum E358
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1    wreg      enum E358
  7809 ;; Registers used:
  7810 ;;		wreg, status,2, status,0, cstack
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7819 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;Total ram usage:        2 bytes
  7821 ;; Hardware stack levels used: 1
  7822 ;; Hardware stack levels required when called: 11
  7823 ;; This function calls:
  7824 ;;		_I2C_MasterClearIrq
  7825 ;;		_I2C_MasterEnableIrq
  7826 ;;		_I2C_MasterOpen
  7827 ;;		_I2C_SetInterruptHandler
  7828 ;; This function is called by:
  7829 ;;		_I2C_Read1ByteRegister
  7830 ;;		_I2C_Write1ByteRegister
  7831 ;;		_I2C_Read2ByteRegister
  7832 ;;		_I2C_Write2ByteRegister
  7833 ;;		_I2C_WriteNBytes
  7834 ;;		_I2C_ReadNBytes
  7835 ;;		_I2C_ReadDataBlock
  7836 ;; This function uses a non-reentrant model
  7837 ;;
  7838                           
  7839                           	psect	text55
  7840   0025C2                     __ptext55:
  7841                           	callstack 0
  7842   0025C2                     _I2C_Open:
  7843                           	callstack 15
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;incstack = 0
  7847                           ;I2C_Open@address stored from wreg
  7848   0025C2  0100               	movlb	0	; () banked
  7849   0025C4  6FDA               	movwf	I2C_Open@address& (0+255),b
  7850   0025C6                     
  7851                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  7852   0025C6  0E01               	movlw	1
  7853   0025C8  0100               	movlb	0	; () banked
  7854   0025CA  6FDB               	movwf	I2C_Open@returnValue& (0+255),b
  7855   0025CC                     
  7856                           ; BSR set to: 0
  7857                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  7858   0025CC  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  7859   0025CE  EFEB  F012         	goto	u3631
  7860   0025D2  EFED  F012         	goto	u3630
  7861   0025D6                     u3631:
  7862   0025D6  EF30  F013         	goto	l6053
  7863   0025DA                     u3630:
  7864   0025DA                     
  7865                           ; BSR set to: 0
  7866                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  7867   0025DA  C0DA  F07C         	movff	I2C_Open@address,_I2C_Status+28
  7868   0025DE                     
  7869                           ; BSR set to: 0
  7870                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  7871   0025DE  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  7872   0025E0                     
  7873                           ; BSR set to: 0
  7874                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  7875   0025E0  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  7876   0025E2                     
  7877                           ; BSR set to: 0
  7878                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  7879   0025E2  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  7880   0025E4                     
  7881                           ; BSR set to: 0
  7882                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  7883   0025E4  0E0E               	movlw	14
  7884   0025E6  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  7885   0025E8                     
  7886                           ; BSR set to: 0
  7887                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  7888   0025E8  0E01               	movlw	1
  7889   0025EA  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  7890   0025EC  0EF4               	movlw	244
  7891   0025EE  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  7892   0025F0                     
  7893                           ; BSR set to: 0
  7894                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  7895   0025F0  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  7896   0025F2                     
  7897                           ; BSR set to: 0
  7898                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  7899   0025F2  0E10               	movlw	low _I2C_CallbackReturnStop
  7900   0025F4  6F60               	movwf	_I2C_Status& (0+255),b
  7901   0025F6  0E36               	movlw	high _I2C_CallbackReturnStop
  7902   0025F8  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  7903   0025FA                     
  7904                           ; BSR set to: 0
  7905                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  7906   0025FA  0E00               	movlw	0
  7907   0025FC  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  7908   0025FE  0E00               	movlw	0
  7909   002600  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  7910   002602                     
  7911                           ; BSR set to: 0
  7912                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  7913   002602  0E10               	movlw	low _I2C_CallbackReturnStop
  7914   002604  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  7915   002606  0E36               	movlw	high _I2C_CallbackReturnStop
  7916   002608  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  7917   00260A                     
  7918                           ; BSR set to: 0
  7919                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  7920   00260A  0E00               	movlw	0
  7921   00260C  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  7922   00260E  0E00               	movlw	0
  7923   002610  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  7924   002612                     
  7925                           ; BSR set to: 0
  7926                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  7927   002612  0E10               	movlw	low _I2C_CallbackReturnStop
  7928   002614  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  7929   002616  0E36               	movlw	high _I2C_CallbackReturnStop
  7930   002618  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  7931   00261A                     
  7932                           ; BSR set to: 0
  7933                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  7934   00261A  0E00               	movlw	0
  7935   00261C  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  7936   00261E  0E00               	movlw	0
  7937   002620  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  7938   002622                     
  7939                           ; BSR set to: 0
  7940                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  7941   002622  0E10               	movlw	low _I2C_CallbackReturnStop
  7942   002624  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  7943   002626  0E36               	movlw	high _I2C_CallbackReturnStop
  7944   002628  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  7945   00262A                     
  7946                           ; BSR set to: 0
  7947                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  7948   00262A  0E00               	movlw	0
  7949   00262C  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  7950   00262E  0E00               	movlw	0
  7951   002630  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  7952   002632                     
  7953                           ; BSR set to: 0
  7954                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  7955   002632  0E0C               	movlw	low _I2C_CallbackReturnReset
  7956   002634  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  7957   002636  0E36               	movlw	high _I2C_CallbackReturnReset
  7958   002638  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  7959   00263A                     
  7960                           ; BSR set to: 0
  7961                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  7962   00263A  0E00               	movlw	0
  7963   00263C  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  7964   00263E  0E00               	movlw	0
  7965   002640  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  7966   002642                     
  7967                           ; BSR set to: 0
  7968                           ;mcc_generated_files/i2c_master.c: 202:         I2C_SetInterruptHandler(I2C_MasterIsr);
  7969   002642  0ED6               	movlw	low _I2C_MasterIsr
  7970   002644  6FD8               	movwf	I2C_SetInterruptHandler@InterruptHandler& (0+255),b
  7971   002646  0E35               	movlw	high _I2C_MasterIsr
  7972   002648  6FD9               	movwf	(I2C_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7973   00264A  ECB6  F01A         	call	_I2C_SetInterruptHandler	;wreg free
  7974   00264E                     
  7975                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterClearIrq();
  7976   00264E  ECFC  F01A         	call	_I2C_MasterClearIrq	;wreg free
  7977   002652                     
  7978                           ;mcc_generated_files/i2c_master.c: 204:         I2C_MasterOpen();
  7979   002652  ECED  F019         	call	_I2C_MasterOpen	;wreg free
  7980   002656                     
  7981                           ;mcc_generated_files/i2c_master.c: 205:         I2C_MasterEnableIrq();
  7982   002656  ECF4  F01A         	call	_I2C_MasterEnableIrq	;wreg free
  7983   00265A                     
  7984                           ;mcc_generated_files/i2c_master.c: 206:         returnValue = I2C_NOERR;
  7985   00265A  0E00               	movlw	0
  7986   00265C  0100               	movlb	0	; () banked
  7987   00265E  6FDB               	movwf	I2C_Open@returnValue& (0+255),b
  7988   002660                     l6053:
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;mcc_generated_files/i2c_master.c: 208:     return returnValue;
  7992   002660  51DB               	movf	I2C_Open@returnValue& (0+255),w,b
  7993   002662                     
  7994                           ; BSR set to: 0
  7995   002662  0012               	return		;funcret
  7996   002664                     __end_of_I2C_Open:
  7997                           	callstack 0
  7998                           
  7999 ;; *************** function _I2C_SetInterruptHandler *****************
  8000 ;; Defined at:
  8001 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8004 ;;		 -> I2C_MasterIsr(1), 
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		wreg, status,2, status,0
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8020 ;;Total ram usage:        2 bytes
  8021 ;; Hardware stack levels used: 1
  8022 ;; Hardware stack levels required when called: 10
  8023 ;; This function calls:
  8024 ;;		Nothing
  8025 ;; This function is called by:
  8026 ;;		_I2C_Open
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text56
  8031   00356C                     __ptext56:
  8032                           	callstack 0
  8033   00356C                     _I2C_SetInterruptHandler:
  8034                           	callstack 15
  8035   00356C                     
  8036                           ;mcc_generated_files/i2c_master.c: 299: void I2C_SetInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/i2c_master.c: 300: {;mcc_generated_files/i2c_master.c:
      +                           301:     MSSP_InterruptHandler = InterruptHandler;
  8037   00356C  C0D8  F02C         	movff	I2C_SetInterruptHandler@InterruptHandler,_MSSP_InterruptHandler
  8038   003570  C0D9  F02D         	movff	I2C_SetInterruptHandler@InterruptHandler+1,_MSSP_InterruptHandler+1
  8039   003574  0012               	return		;funcret
  8040   003576                     __end_of_I2C_SetInterruptHandler:
  8041                           	callstack 0
  8042                           
  8043 ;; *************** function _I2C_MasterOpen *****************
  8044 ;; Defined at:
  8045 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;		None
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      _Bool 
  8052 ;; Registers used:
  8053 ;;		wreg, status,2
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;Total ram usage:        0 bytes
  8064 ;; Hardware stack levels used: 1
  8065 ;; Hardware stack levels required when called: 10
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_I2C_Open
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text57
  8074   0033DA                     __ptext57:
  8075                           	callstack 0
  8076   0033DA                     _I2C_MasterOpen:
  8077                           	callstack 15
  8078   0033DA                     
  8079                           ;mcc_generated_files/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  8080   0033DA  BAC6               	btfsc	198,5,c	;volatile
  8081   0033DC  EFF2  F019         	goto	u3581
  8082   0033E0  EFF4  F019         	goto	u3580
  8083   0033E4                     u3581:
  8084   0033E4  EFFD  F019         	goto	l669
  8085   0033E8                     u3580:
  8086   0033E8                     
  8087                           ;mcc_generated_files/i2c_master.c: 547:     {;mcc_generated_files/i2c_master.c: 548:    
      +                               SSPSTAT = 0x00;
  8088   0033E8  0E00               	movlw	0
  8089   0033EA  6EC7               	movwf	199,c	;volatile
  8090                           
  8091                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON1 = 0x08;
  8092   0033EC  0E08               	movlw	8
  8093   0033EE  6EC6               	movwf	198,c	;volatile
  8094                           
  8095                           ;mcc_generated_files/i2c_master.c: 550:         SSPCON2 = 0x00;
  8096   0033F0  0E00               	movlw	0
  8097   0033F2  6EC5               	movwf	197,c	;volatile
  8098                           
  8099                           ;mcc_generated_files/i2c_master.c: 551:         SSPADD = 0x27;
  8100   0033F4  0E27               	movlw	39
  8101   0033F6  6EC8               	movwf	200,c	;volatile
  8102   0033F8                     
  8103                           ;mcc_generated_files/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  8104   0033F8  8AC6               	bsf	198,5,c	;volatile
  8105   0033FA                     l669:
  8106   0033FA  0012               	return		;funcret
  8107   0033FC                     __end_of_I2C_MasterOpen:
  8108                           	callstack 0
  8109                           
  8110 ;; *************** function _I2C_MasterEnableIrq *****************
  8111 ;; Defined at:
  8112 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;		None
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1    wreg      void 
  8119 ;; Registers used:
  8120 ;;		None
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;Total ram usage:        0 bytes
  8131 ;; Hardware stack levels used: 1
  8132 ;; Hardware stack levels required when called: 10
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_I2C_Open
  8137 ;;		_I2C_SetTimeOut
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text58
  8142   0035E8                     __ptext58:
  8143                           	callstack 0
  8144   0035E8                     _I2C_MasterEnableIrq:
  8145                           	callstack 15
  8146   0035E8                     
  8147                           ;mcc_generated_files/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  8148   0035E8  869D               	bsf	157,3,c	;volatile
  8149   0035EA  0012               	return		;funcret
  8150   0035EC                     __end_of_I2C_MasterEnableIrq:
  8151                           	callstack 0
  8152                           
  8153 ;; *************** function _I2C_MasterWrite *****************
  8154 ;; Defined at:
  8155 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;		None
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;		None
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  1    wreg      enum E358
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8173 ;;Total ram usage:        0 bytes
  8174 ;; Hardware stack levels used: 1
  8175 ;; Hardware stack levels required when called: 12
  8176 ;; This function calls:
  8177 ;;		_I2C_MasterOperation
  8178 ;; This function is called by:
  8179 ;;		_I2C_Read1ByteRegister
  8180 ;;		_I2C_Write1ByteRegister
  8181 ;;		_I2C_Read2ByteRegister
  8182 ;;		_I2C_Write2ByteRegister
  8183 ;;		_I2C_WriteNBytes
  8184 ;;		_I2C_ReadDataBlock
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text59
  8189   003576                     __ptext59:
  8190                           	callstack 0
  8191   003576                     _I2C_MasterWrite:
  8192                           	callstack 14
  8193   003576                     
  8194                           ;mcc_generated_files/i2c_master.c: 254:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  8195   003576  0E00               	movlw	0
  8196   003578  EC7D  F017         	call	_I2C_MasterOperation
  8197   00357C  0012               	return		;funcret
  8198   00357E                     __end_of_I2C_MasterWrite:
  8199                           	callstack 0
  8200                           
  8201 ;; *************** function _I2C_MasterOperation *****************
  8202 ;; Defined at:
  8203 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;  read            1    wreg     _Bool 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  read            1    0[BANK0 ] _Bool 
  8208 ;;  returnValue     1    1[BANK0 ] enum E358
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      enum E358
  8211 ;; Registers used:
  8212 ;;		wreg, status,2, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8219 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8221 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8222 ;;Total ram usage:        2 bytes
  8223 ;; Hardware stack levels used: 1
  8224 ;; Hardware stack levels required when called: 11
  8225 ;; This function calls:
  8226 ;;		_I2C_MasterStart
  8227 ;; This function is called by:
  8228 ;;		_I2C_MasterWrite
  8229 ;;		_I2C_MasterRead
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text60
  8234   002EFA                     __ptext60:
  8235                           	callstack 0
  8236   002EFA                     _I2C_MasterOperation:
  8237                           	callstack 14
  8238                           
  8239                           ;incstack = 0
  8240                           ;I2C_MasterOperation@read stored from wreg
  8241   002EFA  0100               	movlb	0	; () banked
  8242   002EFC  6FD8               	movwf	I2C_MasterOperation@read& (0+255),b
  8243   002EFE                     
  8244                           ;mcc_generated_files/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 227: {;mcc_generated_files/i2c_master.c: 228:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8245   002EFE  0E01               	movlw	1
  8246   002F00  0100               	movlb	0	; () banked
  8247   002F02  6FD9               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  8248   002F04                     
  8249                           ; BSR set to: 0
  8250                           ;mcc_generated_files/i2c_master.c: 229:     if(!I2C_Status.busy)
  8251   002F04  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  8252   002F06  EF87  F017         	goto	u3591
  8253   002F0A  EF89  F017         	goto	u3590
  8254   002F0E                     u3591:
  8255   002F0E  EF9C  F017         	goto	l5985
  8256   002F12                     u3590:
  8257   002F12                     
  8258                           ; BSR set to: 0
  8259                           ;mcc_generated_files/i2c_master.c: 230:     {;mcc_generated_files/i2c_master.c: 231:    
      +                               I2C_Status.busy = 1;
  8260   002F12  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  8261   002F14                     
  8262                           ; BSR set to: 0
  8263                           ;mcc_generated_files/i2c_master.c: 232:         returnValue = I2C_NOERR;
  8264   002F14  0E00               	movlw	0
  8265   002F16  6FD9               	movwf	I2C_MasterOperation@returnValue& (0+255),b
  8266   002F18                     
  8267                           ; BSR set to: 0
  8268                           ;mcc_generated_files/i2c_master.c: 234:         if(read)
  8269   002F18  51D8               	movf	I2C_MasterOperation@read& (0+255),w,b
  8270   002F1A  B4D8               	btfsc	status,2,c
  8271   002F1C  EF92  F017         	goto	u3601
  8272   002F20  EF94  F017         	goto	u3600
  8273   002F24                     u3601:
  8274   002F24  EF98  F017         	goto	l5981
  8275   002F28                     u3600:
  8276   002F28                     
  8277                           ; BSR set to: 0
  8278                           ;mcc_generated_files/i2c_master.c: 235:         {;mcc_generated_files/i2c_master.c: 236:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  8279   002F28  0E01               	movlw	1
  8280   002F2A  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8281                           
  8282                           ;mcc_generated_files/i2c_master.c: 237:         }
  8283   002F2C  EF9A  F017         	goto	l5983
  8284   002F30                     l5981:
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;mcc_generated_files/i2c_master.c: 239:         {;mcc_generated_files/i2c_master.c: 240:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  8288   002F30  0E02               	movlw	2
  8289   002F32  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8290   002F34                     l5983:
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;mcc_generated_files/i2c_master.c: 242:         I2C_MasterStart();
  8294   002F34  ECF6  F01A         	call	_I2C_MasterStart	;wreg free
  8295   002F38                     l5985:
  8296                           
  8297                           ;mcc_generated_files/i2c_master.c: 244:     return returnValue;
  8298   002F38  0100               	movlb	0	; () banked
  8299   002F3A  51D9               	movf	I2C_MasterOperation@returnValue& (0+255),w,b
  8300   002F3C                     
  8301                           ; BSR set to: 0
  8302   002F3C  0012               	return		;funcret
  8303   002F3E                     __end_of_I2C_MasterOperation:
  8304                           	callstack 0
  8305                           
  8306 ;; *************** function _I2C_MasterStart *****************
  8307 ;; Defined at:
  8308 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		None
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;Total ram usage:        0 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 10
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_I2C_MasterOperation
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text61
  8337   0035EC                     __ptext61:
  8338                           	callstack 0
  8339   0035EC                     _I2C_MasterStart:
  8340                           	callstack 14
  8341   0035EC                     
  8342                           ;mcc_generated_files/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  8343   0035EC  80C5               	bsf	197,0,c	;volatile
  8344   0035EE  0012               	return		;funcret
  8345   0035F0                     __end_of_I2C_MasterStart:
  8346                           	callstack 0
  8347                           
  8348 ;; *************** function _I2C_Close *****************
  8349 ;; Defined at:
  8350 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;		None
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;  returnValue     1    0[BANK0 ] enum E358
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  1    wreg      enum E358
  8357 ;; Registers used:
  8358 ;;		wreg, status,2, cstack
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8368 ;;Total ram usage:        1 bytes
  8369 ;; Hardware stack levels used: 1
  8370 ;; Hardware stack levels required when called: 11
  8371 ;; This function calls:
  8372 ;;		_I2C_MasterClearIrq
  8373 ;;		_I2C_MasterClose
  8374 ;;		_I2C_MasterDisableIrq
  8375 ;; This function is called by:
  8376 ;;		_I2C_Read1ByteRegister
  8377 ;;		_I2C_Write1ByteRegister
  8378 ;;		_I2C_Read2ByteRegister
  8379 ;;		_I2C_Write2ByteRegister
  8380 ;;		_I2C_WriteNBytes
  8381 ;;		_I2C_ReadNBytes
  8382 ;;		_I2C_ReadDataBlock
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text62
  8387   0030C4                     __ptext62:
  8388                           	callstack 0
  8389   0030C4                     _I2C_Close:
  8390                           	callstack 15
  8391   0030C4                     
  8392                           ;mcc_generated_files/i2c_master.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  8393   0030C4  0E01               	movlw	1
  8394   0030C6  0100               	movlb	0	; () banked
  8395   0030C8  6FD8               	movwf	I2C_Close@returnValue& (0+255),b
  8396   0030CA                     
  8397                           ; BSR set to: 0
  8398                           ;mcc_generated_files/i2c_master.c: 214:     if(!I2C_Status.busy)
  8399   0030CA  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  8400   0030CC  EF6A  F018         	goto	u3651
  8401   0030D0  EF6C  F018         	goto	u3650
  8402   0030D4                     u3651:
  8403   0030D4  EF76  F018         	goto	l6083
  8404   0030D8                     u3650:
  8405   0030D8                     
  8406                           ; BSR set to: 0
  8407                           ;mcc_generated_files/i2c_master.c: 215:     {;mcc_generated_files/i2c_master.c: 216:    
      +                               I2C_Status.inUse = 0;
  8408   0030D8  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  8409                           
  8410                           ;mcc_generated_files/i2c_master.c: 217:         I2C_Status.address = 0xff;
  8411   0030DA  697C               	setf	(_I2C_Status+28)& (0+255),b
  8412   0030DC                     
  8413                           ; BSR set to: 0
  8414                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClearIrq();
  8415   0030DC  ECFC  F01A         	call	_I2C_MasterClearIrq	;wreg free
  8416                           
  8417                           ;mcc_generated_files/i2c_master.c: 219:         I2C_MasterDisableIrq();
  8418   0030E0  ECF8  F01A         	call	_I2C_MasterDisableIrq	;wreg free
  8419                           
  8420                           ;mcc_generated_files/i2c_master.c: 220:         I2C_MasterClose();
  8421   0030E4  ECFA  F01A         	call	_I2C_MasterClose	;wreg free
  8422   0030E8                     
  8423                           ;mcc_generated_files/i2c_master.c: 221:         returnValue = I2C_Status.error;
  8424   0030E8  C082  F0D8         	movff	_I2C_Status+34,I2C_Close@returnValue
  8425   0030EC                     l6083:
  8426                           
  8427                           ;mcc_generated_files/i2c_master.c: 223:     return returnValue;
  8428   0030EC  0100               	movlb	0	; () banked
  8429   0030EE  51D8               	movf	I2C_Close@returnValue& (0+255),w,b
  8430   0030F0                     
  8431                           ; BSR set to: 0
  8432   0030F0  0012               	return		;funcret
  8433   0030F2                     __end_of_I2C_Close:
  8434                           	callstack 0
  8435                           
  8436 ;; *************** function _I2C_MasterDisableIrq *****************
  8437 ;; Defined at:
  8438 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;		None
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      void 
  8445 ;; Registers used:
  8446 ;;		None
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;Total ram usage:        0 bytes
  8457 ;; Hardware stack levels used: 1
  8458 ;; Hardware stack levels required when called: 10
  8459 ;; This function calls:
  8460 ;;		Nothing
  8461 ;; This function is called by:
  8462 ;;		_I2C_Close
  8463 ;;		_I2C_SetTimeOut
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text63
  8468   0035F0                     __ptext63:
  8469                           	callstack 0
  8470   0035F0                     _I2C_MasterDisableIrq:
  8471                           	callstack 15
  8472   0035F0                     
  8473                           ;mcc_generated_files/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  8474   0035F0  969D               	bcf	157,3,c	;volatile
  8475   0035F2  0012               	return		;funcret
  8476   0035F4                     __end_of_I2C_MasterDisableIrq:
  8477                           	callstack 0
  8478                           
  8479 ;; *************** function _I2C_MasterClose *****************
  8480 ;; Defined at:
  8481 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;		None
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;		None
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		None
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8499 ;;Total ram usage:        0 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; Hardware stack levels required when called: 10
  8502 ;; This function calls:
  8503 ;;		Nothing
  8504 ;; This function is called by:
  8505 ;;		_I2C_Close
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text64
  8510   0035F4                     __ptext64:
  8511                           	callstack 0
  8512   0035F4                     _I2C_MasterClose:
  8513                           	callstack 15
  8514   0035F4                     
  8515                           ;mcc_generated_files/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  8516   0035F4  9AC6               	bcf	198,5,c	;volatile
  8517   0035F6  0012               	return		;funcret
  8518   0035F8                     __end_of_I2C_MasterClose:
  8519                           	callstack 0
  8520                           
  8521 ;; *************** function _I2C_MasterClearIrq *****************
  8522 ;; Defined at:
  8523 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;		None
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		None
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8541 ;;Total ram usage:        0 bytes
  8542 ;; Hardware stack levels used: 1
  8543 ;; Hardware stack levels required when called: 10
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_I2C_Open
  8548 ;;		_I2C_Close
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text65
  8553   0035F8                     __ptext65:
  8554                           	callstack 0
  8555   0035F8                     _I2C_MasterClearIrq:
  8556                           	callstack 15
  8557   0035F8                     
  8558                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  8559   0035F8  969E               	bcf	158,3,c	;volatile
  8560   0035FA  0012               	return		;funcret
  8561   0035FC                     __end_of_I2C_MasterClearIrq:
  8562                           	callstack 0
  8563                           
  8564 ;; *************** function _ADC_GetConversion *****************
  8565 ;; Defined at:
  8566 ;;		line 115 in file "mcc_generated_files/adc.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;  channel         1    wreg     enum E2740
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;  channel         1    4[BANK0 ] enum E2740
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  2    0[BANK0 ] unsigned short 
  8573 ;; Registers used:
  8574 ;;		wreg, status,2, status,0
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8580 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8584 ;;Total ram usage:        5 bytes
  8585 ;; Hardware stack levels used: 1
  8586 ;; Hardware stack levels required when called: 10
  8587 ;; This function calls:
  8588 ;;		Nothing
  8589 ;; This function is called by:
  8590 ;;		_main
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text66
  8595   002F80                     __ptext66:
  8596                           	callstack 0
  8597   002F80                     _ADC_GetConversion:
  8598                           	callstack 20
  8599                           
  8600                           ;incstack = 0
  8601                           ;ADC_GetConversion@channel stored from wreg
  8602   002F80  0100               	movlb	0	; () banked
  8603   002F82  6FDC               	movwf	ADC_GetConversion@channel& (0+255),b
  8604   002F84                     
  8605                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  8606   002F84  C0DC  F0DA         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  8607   002F88  0100               	movlb	0	; () banked
  8608   002F8A  47DA               	rlncf	??_ADC_GetConversion& (0+255),f,b
  8609   002F8C  47DA               	rlncf	??_ADC_GetConversion& (0+255),f,b
  8610   002F8E  50C2               	movf	194,w,c	;volatile
  8611   002F90  19DA               	xorwf	??_ADC_GetConversion& (0+255),w,b
  8612   002F92  0BC3               	andlw	-61
  8613   002F94  19DA               	xorwf	??_ADC_GetConversion& (0+255),w,b
  8614   002F96  6EC2               	movwf	194,c	;volatile
  8615   002F98                     
  8616                           ; BSR set to: 0
  8617                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  8618   002F98  80C2               	bsf	194,0,c	;volatile
  8619   002F9A                     
  8620                           ; BSR set to: 0
  8621                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  8622   002F9A  82C2               	bsf	194,1,c	;volatile
  8623   002F9C                     l825:
  8624                           
  8625                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  8626   002F9C  B2C2               	btfsc	194,1,c	;volatile
  8627   002F9E  EFD3  F017         	goto	u4141
  8628   002FA2  EFD5  F017         	goto	u4140
  8629   002FA6                     u4141:
  8630   002FA6  EFCE  F017         	goto	l825
  8631   002FAA                     u4140:
  8632   002FAA                     
  8633                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8634   002FAA  50C4               	movf	196,w,c	;volatile
  8635   002FAC  0100               	movlb	0	; () banked
  8636   002FAE  6FDB               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  8637   002FB0  6BDA               	clrf	??_ADC_GetConversion& (0+255),b
  8638   002FB2  50C3               	movf	195,w,c	;volatile
  8639   002FB4  25DA               	addwf	??_ADC_GetConversion& (0+255),w,b
  8640   002FB6  6FD8               	movwf	?_ADC_GetConversion& (0+255),b
  8641   002FB8  0E00               	movlw	0
  8642   002FBA  21DB               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  8643   002FBC  6FD9               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  8644   002FBE                     
  8645                           ; BSR set to: 0
  8646   002FBE  0012               	return		;funcret
  8647   002FC0                     __end_of_ADC_GetConversion:
  8648                           	callstack 0
  8649                           
  8650 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  8651 ;; Defined at:
  8652 ;;		line 108 in file "mcc_generated_files/interrupt_manager.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;		None
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;		None
  8657 ;; Return value:  Size  Location     Type
  8658 ;;                  1    wreg      void 
  8659 ;; Registers used:
  8660 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8661 ;; Tracked objects:
  8662 ;;		On entry : 0/0
  8663 ;;		On exit  : 0/0
  8664 ;;		Unchanged: 0/0
  8665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8668 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8669 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8670 ;;Total ram usage:        5 bytes
  8671 ;; Hardware stack levels used: 1
  8672 ;; Hardware stack levels required when called: 9
  8673 ;; This function calls:
  8674 ;;		_ADC_ISR
  8675 ;; This function is called by:
  8676 ;;		Interrupt level 1
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680                           	psect	intcodelo
  8681   000018                     __pintcodelo:
  8682                           	callstack 0
  8683   000018                     _INTERRUPT_InterruptManagerLow:
  8684                           	callstack 11
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;incstack = 0
  8688   000018  8041               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8689   00001A  CFD8 F01C          	movff	status,??_INTERRUPT_InterruptManagerLow
  8690   00001E  CFE8 F01D          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  8691   000022  CFE0 F01E          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  8692   000026  CFFA F01F          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  8693   00002A  CFFB F020          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  8694   00002E                     
  8695                           ;mcc_generated_files/interrupt_manager.c: 111:     if(PIE1bits.ADIE == 1 && PIR1bits.ADI
      +                          F == 1)
  8696   00002E  AC9D               	btfss	157,6,c	;volatile
  8697   000030  EF1C  F000         	goto	i1u312_21
  8698   000034  EF1E  F000         	goto	i1u312_20
  8699   000038                     i1u312_21:
  8700   000038  EF27  F000         	goto	i1l783
  8701   00003C                     i1u312_20:
  8702   00003C  AC9E               	btfss	158,6,c	;volatile
  8703   00003E  EF23  F000         	goto	i1u313_21
  8704   000042  EF25  F000         	goto	i1u313_20
  8705   000046                     i1u313_21:
  8706   000046  EF27  F000         	goto	i1l783
  8707   00004A                     i1u313_20:
  8708   00004A                     
  8709                           ;mcc_generated_files/interrupt_manager.c: 112:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 113:         ADC_ISR();
  8710   00004A  EC79  F018         	call	_ADC_ISR	;wreg free
  8711   00004E                     i1l783:
  8712   00004E  C020  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  8713   000052  C01F  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  8714   000056  C01E  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  8715   00005A  C01D  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  8716   00005E  C01C  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  8717   000062  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8718   000064  0010               	retfie	
  8719   000066                     __end_of_INTERRUPT_InterruptManagerLow:
  8720                           	callstack 0
  8721                           
  8722 ;; *************** function _ADC_ISR *****************
  8723 ;; Defined at:
  8724 ;;		line 140 in file "mcc_generated_files/adc.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;		None
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;		None
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  1    wreg      void 
  8731 ;; Registers used:
  8732 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8742 ;;Total ram usage:        0 bytes
  8743 ;; Hardware stack levels used: 1
  8744 ;; Hardware stack levels required when called: 8
  8745 ;; This function calls:
  8746 ;;		NULL
  8747 ;;		_ADC_DefaultInterruptHandler
  8748 ;;		_lightSwitch
  8749 ;; This function is called by:
  8750 ;;		_INTERRUPT_InterruptManagerLow
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           	psect	text68
  8755   0030F2                     __ptext68:
  8756                           	callstack 0
  8757   0030F2                     _ADC_ISR:
  8758                           	callstack 11
  8759   0030F2                     
  8760                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
  8761   0030F2  9C9E               	bcf	158,6,c	;volatile
  8762   0030F4                     
  8763                           ;mcc_generated_files/adc.c: 145:  if(ADC_InterruptHandler)
  8764   0030F4  503E               	movf	_ADC_InterruptHandler^0,w,c
  8765   0030F6  103F               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
  8766   0030F8  B4D8               	btfsc	status,2,c
  8767   0030FA  EF81  F018         	goto	i1u279_21
  8768   0030FE  EF83  F018         	goto	i1u279_20
  8769   003102                     i1u279_21:
  8770   003102  EF8F  F018         	goto	i1l835
  8771   003106                     i1u279_20:
  8772   003106                     
  8773                           ;mcc_generated_files/adc.c: 146:     {;mcc_generated_files/adc.c: 147:         ADC_Inter
      +                          ruptHandler();
  8774   003106  D802               	call	i1u280_28
  8775   003108  EF8F  F018         	goto	i1u280_29
  8776   00310C                     i1u280_28:
  8777   00310C  0005               	push	
  8778   00310E  6EFA               	movwf	pclath,c
  8779   003110  503E               	movf	_ADC_InterruptHandler^0,w,c
  8780   003112  6EFD               	movwf	tosl,c
  8781   003114  503F               	movf	(_ADC_InterruptHandler+1)^0,w,c
  8782   003116  6EFE               	movwf	tosh,c
  8783   003118  6AFF               	clrf	tosu,c
  8784   00311A  50FA               	movf	pclath,w,c
  8785   00311C  0012               	return		;indir
  8786   00311E                     i1u280_29:
  8787   00311E                     i1l835:
  8788   00311E  0012               	return		;funcret
  8789   003120                     __end_of_ADC_ISR:
  8790                           	callstack 0
  8791                           
  8792 ;; *************** function _ADC_DefaultInterruptHandler *****************
  8793 ;; Defined at:
  8794 ;;		line 155 in file "mcc_generated_files/adc.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;		None
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		None
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;Total ram usage:        0 bytes
  8813 ;; Hardware stack levels used: 1
  8814 ;; Hardware stack levels required when called: 7
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_ADC_Initialize
  8819 ;;		_ADC_ISR
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text69
  8824   00361E                     __ptext69:
  8825                           	callstack 0
  8826   00361E                     _ADC_DefaultInterruptHandler:
  8827                           	callstack 11
  8828   00361E  0012               	return		;funcret
  8829   003620                     __end_of_ADC_DefaultInterruptHandler:
  8830                           	callstack 0
  8831                           
  8832 ;; *************** function _lightSwitch *****************
  8833 ;; Defined at:
  8834 ;;		line 113 in file "main.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;		None
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;		None
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  1    wreg      void 
  8841 ;; Registers used:
  8842 ;;		wreg, status,2, status,0
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8852 ;;Total ram usage:        0 bytes
  8853 ;; Hardware stack levels used: 1
  8854 ;; Hardware stack levels required when called: 7
  8855 ;; This function calls:
  8856 ;;		Nothing
  8857 ;; This function is called by:
  8858 ;;		_main
  8859 ;;		_ADC_ISR
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           	psect	text70
  8864   002A90                     __ptext70:
  8865                           	callstack 0
  8866   002A90                     _lightSwitch:
  8867                           	callstack 11
  8868   002A90                     
  8869                           ;main.c: 114:     if (homelightauto == 0x01){
  8870   002A90  0100               	movlb	0	; () banked
  8871   002A92  05CB               	decf	_homelightauto& (0+255),w,b
  8872   002A94  A4D8               	btfss	status,2,c
  8873   002A96  EF4F  F015         	goto	i1u268_21
  8874   002A9A  EF51  F015         	goto	i1u268_20
  8875   002A9E                     i1u268_21:
  8876   002A9E  EF60  F015         	goto	i1l4939
  8877   002AA2                     i1u268_20:
  8878   002AA2                     
  8879                           ; BSR set to: 0
  8880                           ;main.c: 116:         if (lightread <= 10000){
  8881   002AA2  0E11               	movlw	17
  8882   002AA4  5D8B               	subwf	_lightread& (0+255),w,b
  8883   002AA6  0E27               	movlw	39
  8884   002AA8  598C               	subwfb	(_lightread+1)& (0+255),w,b
  8885   002AAA  B0D8               	btfsc	status,0,c
  8886   002AAC  EF5A  F015         	goto	i1u269_21
  8887   002AB0  EF5C  F015         	goto	i1u269_20
  8888   002AB4                     i1u269_21:
  8889   002AB4  EF5F  F015         	goto	i1l991
  8890   002AB8                     i1u269_20:
  8891   002AB8                     
  8892                           ; BSR set to: 0
  8893   002AB8  8689               	bsf	137,3,c	;volatile
  8894   002ABA  EF60  F015         	goto	i1l4939
  8895   002ABE                     i1l991:
  8896                           
  8897                           ; BSR set to: 0
  8898   002ABE  9689               	bcf	137,3,c	;volatile
  8899   002AC0                     i1l4939:
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;main.c: 122:     if (doorlightauto == 0x01){
  8903   002AC0  05CA               	decf	_doorlightauto& (0+255),w,b
  8904   002AC2  A4D8               	btfss	status,2,c
  8905   002AC4  EF66  F015         	goto	i1u270_21
  8906   002AC8  EF68  F015         	goto	i1u270_20
  8907   002ACC                     i1u270_21:
  8908   002ACC  EF7C  F015         	goto	i1l1002
  8909   002AD0                     i1u270_20:
  8910   002AD0                     
  8911                           ; BSR set to: 0
  8912                           ;main.c: 125:         if ((timer.hour >= 0x18)||(timer.hour <= 0x04)){
  8913   002AD0  0E18               	movlw	24
  8914   002AD2  6186               	cpfslt	(_timer+2)& (0+255),b
  8915   002AD4  EF6E  F015         	goto	i1u271_21
  8916   002AD8  EF70  F015         	goto	i1u271_20
  8917   002ADC                     i1u271_21:
  8918   002ADC  EF78  F015         	goto	i1l997
  8919   002AE0                     i1u271_20:
  8920   002AE0                     
  8921                           ; BSR set to: 0
  8922   002AE0  0E05               	movlw	5
  8923   002AE2  6186               	cpfslt	(_timer+2)& (0+255),b
  8924   002AE4  EF76  F015         	goto	i1u272_21
  8925   002AE8  EF78  F015         	goto	i1u272_20
  8926   002AEC                     i1u272_21:
  8927   002AEC  EF7B  F015         	goto	i1l1000
  8928   002AF0                     i1u272_20:
  8929   002AF0                     i1l997:
  8930                           
  8931                           ; BSR set to: 0
  8932   002AF0  8889               	bsf	137,4,c	;volatile
  8933   002AF2  EF7C  F015         	goto	i1l1002
  8934   002AF6                     i1l1000:
  8935                           
  8936                           ; BSR set to: 0
  8937   002AF6  9889               	bcf	137,4,c	;volatile
  8938   002AF8                     i1l1002:
  8939                           
  8940                           ; BSR set to: 0
  8941   002AF8  0012               	return		;funcret
  8942   002AFA                     __end_of_lightSwitch:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  8946 ;; Defined at:
  8947 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;		None
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;		None
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  1    wreg      void 
  8954 ;; Registers used:
  8955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8963 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8964 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8965 ;;Total ram usage:       10 bytes
  8966 ;; Hardware stack levels used: 1
  8967 ;; Hardware stack levels required when called: 6
  8968 ;; This function calls:
  8969 ;;		NULL
  8970 ;;		_I2C_MasterIsr
  8971 ;;		_INT0_ISR
  8972 ;;		_INT1_ISR
  8973 ;;		_INT2_ISR
  8974 ;; This function is called by:
  8975 ;;		Interrupt level 2
  8976 ;; This function uses a non-reentrant model
  8977 ;;
  8978                           
  8979                           	psect	intcode
  8980   000008                     __pintcode:
  8981                           	callstack 0
  8982   000008                     _INTERRUPT_InterruptManagerHigh:
  8983                           	callstack 11
  8984                           
  8985                           ; BSR set to: 0
  8986                           ;incstack = 0
  8987   000008  8241               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8988   00000A  EF9E  F00F         	goto	int_func
  8989                           
  8990                           	psect	intcode_body
  8991   001F3C                     __pintcode_body:
  8992                           	callstack 11
  8993   001F3C                     int_func:
  8994                           	callstack 11
  8995   001F3C  CFFA F012          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  8996   001F40  CFFB F013          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  8997   001F44  CFD9 F014          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
  8998   001F48  CFDA F015          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
  8999   001F4C  CFF3 F016          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+4
  9000   001F50  CFF4 F017          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+5
  9001   001F54  CFF6 F018          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+6
  9002   001F58  CFF7 F019          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+7
  9003   001F5C  CFF8 F01A          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+8
  9004   001F60  CFF5 F01B          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+9
  9005   001F64                     
  9006                           ;mcc_generated_files/interrupt_manager.c: 82:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
  9007   001F64  A8F2               	btfss	242,4,c	;volatile
  9008   001F66  EFB7  F00F         	goto	i2u434_41
  9009   001F6A  EFB9  F00F         	goto	i2u434_40
  9010   001F6E                     i2u434_41:
  9011   001F6E  EFC4  F00F         	goto	i2l766
  9012   001F72                     i2u434_40:
  9013   001F72  A2F2               	btfss	242,1,c	;volatile
  9014   001F74  EFBE  F00F         	goto	i2u435_41
  9015   001F78  EFC0  F00F         	goto	i2u435_40
  9016   001F7C                     i2u435_41:
  9017   001F7C  EFC4  F00F         	goto	i2l766
  9018   001F80                     i2u435_40:
  9019   001F80                     
  9020                           ;mcc_generated_files/interrupt_manager.c: 83:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 84:         INT0_ISR();
  9021   001F80  ECC7  F01A         	call	_INT0_ISR	;wreg free
  9022                           
  9023                           ;mcc_generated_files/interrupt_manager.c: 85:     }
  9024   001F84  EF14  F010         	goto	i2l776
  9025   001F88                     i2l766:
  9026   001F88  A6F0               	btfss	240,3,c	;volatile
  9027   001F8A  EFC9  F00F         	goto	i2u436_41
  9028   001F8E  EFCB  F00F         	goto	i2u436_40
  9029   001F92                     i2u436_41:
  9030   001F92  EFD6  F00F         	goto	i2l768
  9031   001F96                     i2u436_40:
  9032   001F96  A0F0               	btfss	240,0,c	;volatile
  9033   001F98  EFD0  F00F         	goto	i2u437_41
  9034   001F9C  EFD2  F00F         	goto	i2u437_40
  9035   001FA0                     i2u437_41:
  9036   001FA0  EFD6  F00F         	goto	i2l768
  9037   001FA4                     i2u437_40:
  9038   001FA4                     
  9039                           ;mcc_generated_files/interrupt_manager.c: 87:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 88:         INT1_ISR();
  9040   001FA4  ECC3  F01A         	call	_INT1_ISR	;wreg free
  9041                           
  9042                           ;mcc_generated_files/interrupt_manager.c: 89:     }
  9043   001FA8  EF14  F010         	goto	i2l776
  9044   001FAC                     i2l768:
  9045   001FAC  A8F0               	btfss	240,4,c	;volatile
  9046   001FAE  EFDB  F00F         	goto	i2u438_41
  9047   001FB2  EFDD  F00F         	goto	i2u438_40
  9048   001FB6                     i2u438_41:
  9049   001FB6  EFE8  F00F         	goto	i2l770
  9050   001FBA                     i2u438_40:
  9051   001FBA  A2F0               	btfss	240,1,c	;volatile
  9052   001FBC  EFE2  F00F         	goto	i2u439_41
  9053   001FC0  EFE4  F00F         	goto	i2u439_40
  9054   001FC4                     i2u439_41:
  9055   001FC4  EFE8  F00F         	goto	i2l770
  9056   001FC8                     i2u439_40:
  9057   001FC8                     
  9058                           ;mcc_generated_files/interrupt_manager.c: 91:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 92:         INT2_ISR();
  9059   001FC8  ECBF  F01A         	call	_INT2_ISR	;wreg free
  9060                           
  9061                           ;mcc_generated_files/interrupt_manager.c: 93:     }
  9062   001FCC  EF14  F010         	goto	i2l776
  9063   001FD0                     i2l770:
  9064   001FD0  A69D               	btfss	157,3,c	;volatile
  9065   001FD2  EFED  F00F         	goto	i2u440_41
  9066   001FD6  EFEF  F00F         	goto	i2u440_40
  9067   001FDA                     i2u440_41:
  9068   001FDA  EF04  F010         	goto	i2l772
  9069   001FDE                     i2u440_40:
  9070   001FDE  A69E               	btfss	158,3,c	;volatile
  9071   001FE0  EFF4  F00F         	goto	i2u441_41
  9072   001FE4  EFF6  F00F         	goto	i2u441_40
  9073   001FE8                     i2u441_41:
  9074   001FE8  EF04  F010         	goto	i2l772
  9075   001FEC                     i2u441_40:
  9076   001FEC                     i2l7057:
  9077                           
  9078                           ;mcc_generated_files/interrupt_manager.c: 95:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 96:         MSSP_InterruptHandler();
  9079   001FEC  D802               	call	i2u442_48
  9080   001FEE  EF02  F010         	goto	i2u442_49
  9081   001FF2                     i2u442_48:
  9082   001FF2  0005               	push	
  9083   001FF4  6EFA               	movwf	pclath,c
  9084   001FF6  502C               	movf	_MSSP_InterruptHandler^0,w,c
  9085   001FF8  6EFD               	movwf	tosl,c
  9086   001FFA  502D               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  9087   001FFC  6EFE               	movwf	tosh,c
  9088   001FFE  6AFF               	clrf	tosu,c
  9089   002000  50FA               	movf	pclath,w,c
  9090   002002  0012               	return		;indir
  9091   002004                     i2u442_49:
  9092                           
  9093                           ;mcc_generated_files/interrupt_manager.c: 97:     }
  9094   002004  EF14  F010         	goto	i2l776
  9095   002008                     i2l772:
  9096   002008  A6A0               	btfss	160,3,c	;volatile
  9097   00200A  EF09  F010         	goto	i2u443_41
  9098   00200E  EF0B  F010         	goto	i2u443_40
  9099   002012                     i2u443_41:
  9100   002012  EF14  F010         	goto	i2l771
  9101   002016                     i2u443_40:
  9102   002016  A6A1               	btfss	161,3,c	;volatile
  9103   002018  EF10  F010         	goto	i2u444_41
  9104   00201C  EF12  F010         	goto	i2u444_40
  9105   002020                     i2u444_41:
  9106   002020  EF14  F010         	goto	i2l771
  9107   002024                     i2u444_40:
  9108   002024  EFF6  F00F         	goto	i2l7057
  9109   002028                     i2l771:
  9110   002028                     i2l776:
  9111   002028  C01B  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+9,tablat
  9112   00202C  C01A  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+8,tblptru
  9113   002030  C019  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+7,tblptrh
  9114   002034  C018  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+6,tblptrl
  9115   002038  C017  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+5,prodh
  9116   00203C  C016  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+4,prodl
  9117   002040  C015  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
  9118   002044  C014  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
  9119   002048  C013  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  9120   00204C  C012  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  9121   002050  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9122   002052  0011               	retfie		f
  9123   002054                     __end_of_INTERRUPT_InterruptManagerHigh:
  9124                           	callstack 0
  9125                           
  9126 ;; *************** function _INT2_ISR *****************
  9127 ;; Defined at:
  9128 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  9129 ;; Parameters:    Size  Location     Type
  9130 ;;		None
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;		None
  9133 ;; Return value:  Size  Location     Type
  9134 ;;                  1    wreg      void 
  9135 ;; Registers used:
  9136 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9146 ;;Total ram usage:        0 bytes
  9147 ;; Hardware stack levels used: 1
  9148 ;; Hardware stack levels required when called: 2
  9149 ;; This function calls:
  9150 ;;		_INT2_CallBack
  9151 ;; This function is called by:
  9152 ;;		_INTERRUPT_InterruptManagerHigh
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text72
  9157   00357E                     __ptext72:
  9158                           	callstack 0
  9159   00357E                     _INT2_ISR:
  9160                           	callstack 14
  9161   00357E                     
  9162                           ;mcc_generated_files/ext_int.c: 88:     (INTCON3bits.INT2IF = 0);
  9163   00357E  92F0               	bcf	240,1,c	;volatile
  9164   003580                     
  9165                           ;mcc_generated_files/ext_int.c: 91:     INT2_CallBack();
  9166   003580  ECBD  F018         	call	_INT2_CallBack	;wreg free
  9167   003584  0012               	return		;funcret
  9168   003586                     __end_of_INT2_ISR:
  9169                           	callstack 0
  9170                           
  9171 ;; *************** function _INT2_CallBack *****************
  9172 ;; Defined at:
  9173 ;;		line 95 in file "mcc_generated_files/ext_int.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;		None
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      void 
  9180 ;; Registers used:
  9181 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9191 ;;Total ram usage:        0 bytes
  9192 ;; Hardware stack levels used: 1
  9193 ;; Hardware stack levels required when called: 1
  9194 ;; This function calls:
  9195 ;;		NULL
  9196 ;;		_INT2_DefaultInterruptHandler
  9197 ;;		_manual_Doorlight
  9198 ;; This function is called by:
  9199 ;;		_INT2_ISR
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text73
  9204   00317A                     __ptext73:
  9205                           	callstack 0
  9206   00317A                     _INT2_CallBack:
  9207                           	callstack 14
  9208   00317A                     
  9209                           ;mcc_generated_files/ext_int.c: 98:     if(INT2_InterruptHandler)
  9210   00317A  5038               	movf	_INT2_InterruptHandler^0,w,c
  9211   00317C  1039               	iorwf	(_INT2_InterruptHandler+1)^0,w,c
  9212   00317E  B4D8               	btfsc	status,2,c
  9213   003180  EFC4  F018         	goto	i2u261_41
  9214   003184  EFC6  F018         	goto	i2u261_40
  9215   003188                     i2u261_41:
  9216   003188  EFD2  F018         	goto	i2l892
  9217   00318C                     i2u261_40:
  9218   00318C                     
  9219                           ;mcc_generated_files/ext_int.c: 99:     {;mcc_generated_files/ext_int.c: 100:         IN
      +                          T2_InterruptHandler();
  9220   00318C  D802               	call	i2u262_48
  9221   00318E  EFD2  F018         	goto	i2u262_49
  9222   003192                     i2u262_48:
  9223   003192  0005               	push	
  9224   003194  6EFA               	movwf	pclath,c
  9225   003196  5038               	movf	_INT2_InterruptHandler^0,w,c
  9226   003198  6EFD               	movwf	tosl,c
  9227   00319A  5039               	movf	(_INT2_InterruptHandler+1)^0,w,c
  9228   00319C  6EFE               	movwf	tosh,c
  9229   00319E  6AFF               	clrf	tosu,c
  9230   0031A0  50FA               	movf	pclath,w,c
  9231   0031A2  0012               	return		;indir
  9232   0031A4                     i2u262_49:
  9233   0031A4                     i2l892:
  9234   0031A4  0012               	return		;funcret
  9235   0031A6                     __end_of_INT2_CallBack:
  9236                           	callstack 0
  9237                           
  9238 ;; *************** function _INT2_DefaultInterruptHandler *****************
  9239 ;; Defined at:
  9240 ;;		line 108 in file "mcc_generated_files/ext_int.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;		None
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;		None
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      void 
  9247 ;; Registers used:
  9248 ;;		None
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;Total ram usage:        0 bytes
  9259 ;; Hardware stack levels used: 1
  9260 ;; This function calls:
  9261 ;;		Nothing
  9262 ;; This function is called by:
  9263 ;;		_EXT_INT_Initialize
  9264 ;;		_INT2_CallBack
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text74
  9269   003620                     __ptext74:
  9270                           	callstack 0
  9271   003620                     _INT2_DefaultInterruptHandler:
  9272                           	callstack 14
  9273   003620  0012               	return		;funcret
  9274   003622                     __end_of_INT2_DefaultInterruptHandler:
  9275                           	callstack 0
  9276                           
  9277 ;; *************** function _manual_Doorlight *****************
  9278 ;; Defined at:
  9279 ;;		line 187 in file "main.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;		None
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;		None
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  1    wreg      void 
  9286 ;; Registers used:
  9287 ;;		wreg, status,2, status,0
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9297 ;;Total ram usage:        1 bytes
  9298 ;; Hardware stack levels used: 1
  9299 ;; This function calls:
  9300 ;;		Nothing
  9301 ;; This function is called by:
  9302 ;;		_main
  9303 ;;		_INT2_CallBack
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text75
  9308   0032AE                     __ptext75:
  9309                           	callstack 0
  9310   0032AE                     _manual_Doorlight:
  9311                           	callstack 14
  9312   0032AE  B889               	btfsc	137,4,c	;volatile
  9313   0032B0  EF5C  F019         	goto	i2u244_41
  9314   0032B4  EF5F  F019         	goto	i2u244_40
  9315   0032B8                     i2u244_41:
  9316   0032B8  0E01               	movlw	1
  9317   0032BA  EF60  F019         	goto	i2u244_46
  9318   0032BE                     i2u244_40:
  9319   0032BE  0E00               	movlw	0
  9320   0032C0                     i2u244_46:
  9321   0032C0  0AFF               	xorlw	255
  9322   0032C2  6E01               	movwf	??_manual_Doorlight^0,c
  9323   0032C4  3A01               	swapf	??_manual_Doorlight^0,f,c
  9324   0032C6  5089               	movf	137,w,c	;volatile
  9325   0032C8  1801               	xorwf	??_manual_Doorlight^0,w,c
  9326   0032CA  0BEF               	andlw	-17
  9327   0032CC  1801               	xorwf	??_manual_Doorlight^0,w,c
  9328   0032CE  6E89               	movwf	137,c	;volatile
  9329   0032D0                     
  9330                           ;main.c: 191:     doorlightauto = 0x00;
  9331   0032D0  0E00               	movlw	0
  9332   0032D2  0100               	movlb	0	; () banked
  9333   0032D4  6FCA               	movwf	_doorlightauto& (0+255),b
  9334   0032D6                     
  9335                           ; BSR set to: 0
  9336   0032D6  0012               	return		;funcret
  9337   0032D8                     __end_of_manual_Doorlight:
  9338                           	callstack 0
  9339                           
  9340 ;; *************** function _INT1_ISR *****************
  9341 ;; Defined at:
  9342 ;;		line 60 in file "mcc_generated_files/ext_int.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;		None
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;Total ram usage:        0 bytes
  9361 ;; Hardware stack levels used: 1
  9362 ;; Hardware stack levels required when called: 2
  9363 ;; This function calls:
  9364 ;;		_INT1_CallBack
  9365 ;; This function is called by:
  9366 ;;		_INTERRUPT_InterruptManagerHigh
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text76
  9371   003586                     __ptext76:
  9372                           	callstack 0
  9373   003586                     _INT1_ISR:
  9374                           	callstack 14
  9375   003586                     
  9376                           ;mcc_generated_files/ext_int.c: 62:     (INTCON3bits.INT1IF = 0);
  9377   003586  90F0               	bcf	240,0,c	;volatile
  9378   003588                     
  9379                           ;mcc_generated_files/ext_int.c: 65:     INT1_CallBack();
  9380   003588  ECD3  F018         	call	_INT1_CallBack	;wreg free
  9381   00358C  0012               	return		;funcret
  9382   00358E                     __end_of_INT1_ISR:
  9383                           	callstack 0
  9384                           
  9385 ;; *************** function _INT1_CallBack *****************
  9386 ;; Defined at:
  9387 ;;		line 69 in file "mcc_generated_files/ext_int.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;		None
  9390 ;; Auto vars:     Size  Location     Type
  9391 ;;		None
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  1    wreg      void 
  9394 ;; Registers used:
  9395 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9405 ;;Total ram usage:        0 bytes
  9406 ;; Hardware stack levels used: 1
  9407 ;; Hardware stack levels required when called: 1
  9408 ;; This function calls:
  9409 ;;		NULL
  9410 ;;		_INT1_DefaultInterruptHandler
  9411 ;;		_manual_homelight
  9412 ;; This function is called by:
  9413 ;;		_INT1_ISR
  9414 ;; This function uses a non-reentrant model
  9415 ;;
  9416                           
  9417                           	psect	text77
  9418   0031A6                     __ptext77:
  9419                           	callstack 0
  9420   0031A6                     _INT1_CallBack:
  9421                           	callstack 14
  9422   0031A6                     
  9423                           ;mcc_generated_files/ext_int.c: 72:     if(INT1_InterruptHandler)
  9424   0031A6  503A               	movf	_INT1_InterruptHandler^0,w,c
  9425   0031A8  103B               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  9426   0031AA  B4D8               	btfsc	status,2,c
  9427   0031AC  EFDA  F018         	goto	i2u259_41
  9428   0031B0  EFDC  F018         	goto	i2u259_40
  9429   0031B4                     i2u259_41:
  9430   0031B4  EFE8  F018         	goto	i2l879
  9431   0031B8                     i2u259_40:
  9432   0031B8                     
  9433                           ;mcc_generated_files/ext_int.c: 73:     {;mcc_generated_files/ext_int.c: 74:         INT
      +                          1_InterruptHandler();
  9434   0031B8  D802               	call	i2u260_48
  9435   0031BA  EFE8  F018         	goto	i2u260_49
  9436   0031BE                     i2u260_48:
  9437   0031BE  0005               	push	
  9438   0031C0  6EFA               	movwf	pclath,c
  9439   0031C2  503A               	movf	_INT1_InterruptHandler^0,w,c
  9440   0031C4  6EFD               	movwf	tosl,c
  9441   0031C6  503B               	movf	(_INT1_InterruptHandler+1)^0,w,c
  9442   0031C8  6EFE               	movwf	tosh,c
  9443   0031CA  6AFF               	clrf	tosu,c
  9444   0031CC  50FA               	movf	pclath,w,c
  9445   0031CE  0012               	return		;indir
  9446   0031D0                     i2u260_49:
  9447   0031D0                     i2l879:
  9448   0031D0  0012               	return		;funcret
  9449   0031D2                     __end_of_INT1_CallBack:
  9450                           	callstack 0
  9451                           
  9452 ;; *************** function _INT1_DefaultInterruptHandler *****************
  9453 ;; Defined at:
  9454 ;;		line 82 in file "mcc_generated_files/ext_int.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;		None
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;		None
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		None
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;Total ram usage:        0 bytes
  9473 ;; Hardware stack levels used: 1
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_EXT_INT_Initialize
  9478 ;;		_INT1_CallBack
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text78
  9483   003622                     __ptext78:
  9484                           	callstack 0
  9485   003622                     _INT1_DefaultInterruptHandler:
  9486                           	callstack 14
  9487   003622  0012               	return		;funcret
  9488   003624                     __end_of_INT1_DefaultInterruptHandler:
  9489                           	callstack 0
  9490                           
  9491 ;; *************** function _manual_homelight *****************
  9492 ;; Defined at:
  9493 ;;		line 173 in file "main.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;		None
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;		None
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  1    wreg      void 
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9511 ;;Total ram usage:        1 bytes
  9512 ;; Hardware stack levels used: 1
  9513 ;; This function calls:
  9514 ;;		Nothing
  9515 ;; This function is called by:
  9516 ;;		_main
  9517 ;;		_INT1_CallBack
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           	psect	text79
  9522   003120                     __ptext79:
  9523                           	callstack 0
  9524   003120                     _manual_homelight:
  9525                           	callstack 14
  9526   003120  B689               	btfsc	137,3,c	;volatile
  9527   003122  EF95  F018         	goto	i2u243_41
  9528   003126  EF98  F018         	goto	i2u243_40
  9529   00312A                     i2u243_41:
  9530   00312A  0E01               	movlw	1
  9531   00312C  EF99  F018         	goto	i2u243_46
  9532   003130                     i2u243_40:
  9533   003130  0E00               	movlw	0
  9534   003132                     i2u243_46:
  9535   003132  0AFF               	xorlw	255
  9536   003134  6E01               	movwf	??_manual_homelight^0,c
  9537   003136  4601               	rlncf	??_manual_homelight^0,f,c
  9538   003138  4601               	rlncf	??_manual_homelight^0,f,c
  9539   00313A  4601               	rlncf	??_manual_homelight^0,f,c
  9540   00313C  5089               	movf	137,w,c	;volatile
  9541   00313E  1801               	xorwf	??_manual_homelight^0,w,c
  9542   003140  0BF7               	andlw	-9
  9543   003142  1801               	xorwf	??_manual_homelight^0,w,c
  9544   003144  6E89               	movwf	137,c	;volatile
  9545   003146                     
  9546                           ;main.c: 177:     homelightauto = 0x00;
  9547   003146  0E00               	movlw	0
  9548   003148  0100               	movlb	0	; () banked
  9549   00314A  6FCB               	movwf	_homelightauto& (0+255),b
  9550   00314C                     
  9551                           ; BSR set to: 0
  9552   00314C  0012               	return		;funcret
  9553   00314E                     __end_of_manual_homelight:
  9554                           	callstack 0
  9555                           
  9556 ;; *************** function _INT0_ISR *****************
  9557 ;; Defined at:
  9558 ;;		line 34 in file "mcc_generated_files/ext_int.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;		None
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;		None
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  1    wreg      void 
  9565 ;; Registers used:
  9566 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9576 ;;Total ram usage:        0 bytes
  9577 ;; Hardware stack levels used: 1
  9578 ;; Hardware stack levels required when called: 2
  9579 ;; This function calls:
  9580 ;;		_INT0_CallBack
  9581 ;; This function is called by:
  9582 ;;		_INTERRUPT_InterruptManagerHigh
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           	psect	text80
  9587   00358E                     __ptext80:
  9588                           	callstack 0
  9589   00358E                     _INT0_ISR:
  9590                           	callstack 14
  9591   00358E                     
  9592                           ;mcc_generated_files/ext_int.c: 36:     (INTCONbits.INT0IF = 0);
  9593   00358E  92F2               	bcf	242,1,c	;volatile
  9594   003590                     
  9595                           ;mcc_generated_files/ext_int.c: 39:     INT0_CallBack();
  9596   003590  ECE9  F018         	call	_INT0_CallBack	;wreg free
  9597   003594  0012               	return		;funcret
  9598   003596                     __end_of_INT0_ISR:
  9599                           	callstack 0
  9600                           
  9601 ;; *************** function _INT0_CallBack *****************
  9602 ;; Defined at:
  9603 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;		None
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;		None
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;Total ram usage:        0 bytes
  9622 ;; Hardware stack levels used: 1
  9623 ;; Hardware stack levels required when called: 1
  9624 ;; This function calls:
  9625 ;;		NULL
  9626 ;;		_INT0_DefaultInterruptHandler
  9627 ;;		_manual_Override
  9628 ;; This function is called by:
  9629 ;;		_INT0_ISR
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text81
  9634   0031D2                     __ptext81:
  9635                           	callstack 0
  9636   0031D2                     _INT0_CallBack:
  9637                           	callstack 14
  9638   0031D2                     
  9639                           ;mcc_generated_files/ext_int.c: 46:     if(INT0_InterruptHandler)
  9640   0031D2  503C               	movf	_INT0_InterruptHandler^0,w,c
  9641   0031D4  103D               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  9642   0031D6  B4D8               	btfsc	status,2,c
  9643   0031D8  EFF0  F018         	goto	i2u257_41
  9644   0031DC  EFF2  F018         	goto	i2u257_40
  9645   0031E0                     i2u257_41:
  9646   0031E0  EFFE  F018         	goto	i2l866
  9647   0031E4                     i2u257_40:
  9648   0031E4                     
  9649                           ;mcc_generated_files/ext_int.c: 47:     {;mcc_generated_files/ext_int.c: 48:         INT
      +                          0_InterruptHandler();
  9650   0031E4  D802               	call	i2u258_48
  9651   0031E6  EFFE  F018         	goto	i2u258_49
  9652   0031EA                     i2u258_48:
  9653   0031EA  0005               	push	
  9654   0031EC  6EFA               	movwf	pclath,c
  9655   0031EE  503C               	movf	_INT0_InterruptHandler^0,w,c
  9656   0031F0  6EFD               	movwf	tosl,c
  9657   0031F2  503D               	movf	(_INT0_InterruptHandler+1)^0,w,c
  9658   0031F4  6EFE               	movwf	tosh,c
  9659   0031F6  6AFF               	clrf	tosu,c
  9660   0031F8  50FA               	movf	pclath,w,c
  9661   0031FA  0012               	return		;indir
  9662   0031FC                     i2u258_49:
  9663   0031FC                     i2l866:
  9664   0031FC  0012               	return		;funcret
  9665   0031FE                     __end_of_INT0_CallBack:
  9666                           	callstack 0
  9667                           
  9668 ;; *************** function _INT0_DefaultInterruptHandler *****************
  9669 ;; Defined at:
  9670 ;;		line 56 in file "mcc_generated_files/ext_int.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;		None
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;		None
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  1    wreg      void 
  9677 ;; Registers used:
  9678 ;;		None
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;Total ram usage:        0 bytes
  9689 ;; Hardware stack levels used: 1
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_EXT_INT_Initialize
  9694 ;;		_INT0_CallBack
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text82
  9699   003624                     __ptext82:
  9700                           	callstack 0
  9701   003624                     _INT0_DefaultInterruptHandler:
  9702                           	callstack 14
  9703   003624  0012               	return		;funcret
  9704   003626                     __end_of_INT0_DefaultInterruptHandler:
  9705                           	callstack 0
  9706                           
  9707 ;; *************** function _manual_Override *****************
  9708 ;; Defined at:
  9709 ;;		line 140 in file "main.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;		None
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;		None
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  1    wreg      void 
  9716 ;; Registers used:
  9717 ;;		wreg, status,2, status,0
  9718 ;; Tracked objects:
  9719 ;;		On entry : 0/0
  9720 ;;		On exit  : 0/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;Total ram usage:        1 bytes
  9728 ;; Hardware stack levels used: 1
  9729 ;; This function calls:
  9730 ;;		Nothing
  9731 ;; This function is called by:
  9732 ;;		_main
  9733 ;;		_INT0_CallBack
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           	psect	text83
  9738   0026EE                     __ptext83:
  9739                           	callstack 0
  9740   0026EE                     _manual_Override:
  9741                           	callstack 14
  9742   0026EE                     
  9743                           ;main.c: 141:     if (homelightauto == doorlightauto){
  9744   0026EE  0100               	movlb	0	; () banked
  9745   0026F0  51CA               	movf	_doorlightauto& (0+255),w,b
  9746   0026F2  19CB               	xorwf	_homelightauto& (0+255),w,b
  9747   0026F4  A4D8               	btfss	status,2,c
  9748   0026F6  EF7F  F013         	goto	i2u239_41
  9749   0026FA  EF81  F013         	goto	i2u239_40
  9750   0026FE                     i2u239_41:
  9751   0026FE  EFB2  F013         	goto	i2l4685
  9752   002702                     i2u239_40:
  9753   002702                     
  9754                           ; BSR set to: 0
  9755                           ;main.c: 143:         if (homelightauto == 0x01){
  9756   002702  05CB               	decf	_homelightauto& (0+255),w,b
  9757   002704  A4D8               	btfss	status,2,c
  9758   002706  EF87  F013         	goto	i2u240_41
  9759   00270A  EF89  F013         	goto	i2u240_40
  9760   00270E                     i2u240_41:
  9761   00270E  EFA0  F013         	goto	i2l4669
  9762   002712                     i2u240_40:
  9763   002712                     
  9764                           ; BSR set to: 0
  9765   002712  B689               	btfsc	137,3,c	;volatile
  9766   002714  EF8E  F013         	goto	i2u241_41
  9767   002718  EF91  F013         	goto	i2u241_40
  9768   00271C                     i2u241_41:
  9769   00271C  0E01               	movlw	1
  9770   00271E  EF92  F013         	goto	i2u241_46
  9771   002722                     i2u241_40:
  9772   002722  0E00               	movlw	0
  9773   002724                     i2u241_46:
  9774   002724  0AFF               	xorlw	255
  9775   002726  6E01               	movwf	??_manual_Override^0,c
  9776   002728  4601               	rlncf	??_manual_Override^0,f,c
  9777   00272A  4601               	rlncf	??_manual_Override^0,f,c
  9778   00272C  4601               	rlncf	??_manual_Override^0,f,c
  9779   00272E  5089               	movf	137,w,c	;volatile
  9780   002730  1801               	xorwf	??_manual_Override^0,w,c
  9781   002732  0BF7               	andlw	-9
  9782   002734  1801               	xorwf	??_manual_Override^0,w,c
  9783   002736  6E89               	movwf	137,c	;volatile
  9784   002738                     
  9785                           ; BSR set to: 0
  9786                           ;main.c: 145:             homelightauto = 0x00;
  9787   002738  0E00               	movlw	0
  9788   00273A  6FCB               	movwf	_homelightauto& (0+255),b
  9789                           
  9790                           ;main.c: 146:         }
  9791   00273C  EFA2  F013         	goto	i2l4675
  9792   002740                     i2l4669:
  9793   002740                     
  9794                           ; BSR set to: 0
  9795                           ;main.c: 148:             homelightauto = 0x01;
  9796   002740  0E01               	movlw	1
  9797   002742  6FCB               	movwf	_homelightauto& (0+255),b
  9798   002744                     i2l4675:
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;main.c: 154:         if (doorlightauto == 0x01) {doorlightauto = 0x00;}
  9802   002744  05CA               	decf	_doorlightauto& (0+255),w,b
  9803   002746  A4D8               	btfss	status,2,c
  9804   002748  EFA8  F013         	goto	i2u242_41
  9805   00274C  EFAA  F013         	goto	i2u242_40
  9806   002750                     i2u242_41:
  9807   002750  EFAE  F013         	goto	i2l4679
  9808   002754                     i2u242_40:
  9809   002754                     
  9810                           ; BSR set to: 0
  9811   002754  0E00               	movlw	0
  9812   002756  6FCA               	movwf	_doorlightauto& (0+255),b
  9813   002758  EFB6  F013         	goto	i2l1017
  9814   00275C                     i2l4679:
  9815   00275C                     
  9816                           ; BSR set to: 0
  9817   00275C  0E01               	movlw	1
  9818   00275E  6FCA               	movwf	_doorlightauto& (0+255),b
  9819   002760  EFB6  F013         	goto	i2l1017
  9820   002764                     i2l4685:
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;main.c: 161:         homelightauto = 0x01;
  9824   002764  0E01               	movlw	1
  9825   002766  6FCB               	movwf	_homelightauto& (0+255),b
  9826                           
  9827                           ;main.c: 162:         doorlightauto = 0x01;
  9828   002768  0E01               	movlw	1
  9829   00276A  6FCA               	movwf	_doorlightauto& (0+255),b
  9830   00276C                     i2l1017:
  9831                           
  9832                           ; BSR set to: 0
  9833   00276C  0012               	return		;funcret
  9834   00276E                     __end_of_manual_Override:
  9835                           	callstack 0
  9836                           
  9837 ;; *************** function _I2C_MasterIsr *****************
  9838 ;; Defined at:
  9839 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;		None
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;		None
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  1    wreg      void 
  9846 ;; Registers used:
  9847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 0/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9857 ;;Total ram usage:        0 bytes
  9858 ;; Hardware stack levels used: 1
  9859 ;; Hardware stack levels required when called: 5
  9860 ;; This function calls:
  9861 ;;		_I2C_MasterFsm
  9862 ;; This function is called by:
  9863 ;;		_I2C_Open
  9864 ;;		_INTERRUPT_InterruptManagerHigh
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           	psect	text84
  9869   0035D6                     __ptext84:
  9870                           	callstack 0
  9871   0035D6                     _I2C_MasterIsr:
  9872                           	callstack 11
  9873   0035D6                     
  9874                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  9875   0035D6  ECA7  F014         	call	_I2C_MasterFsm	;wreg free
  9876   0035DA  0012               	return		;funcret
  9877   0035DC                     __end_of_I2C_MasterIsr:
  9878                           	callstack 0
  9879                           
  9880 ;; *************** function _I2C_MasterFsm *****************
  9881 ;; Defined at:
  9882 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;		None
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;		None
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      void 
  9889 ;; Registers used:
  9890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9898 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9899 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9900 ;;Total ram usage:        3 bytes
  9901 ;; Hardware stack levels used: 1
  9902 ;; Hardware stack levels required when called: 4
  9903 ;; This function calls:
  9904 ;;		_I2C_DO_ADDRESS_NACK
  9905 ;;		_I2C_DO_IDLE
  9906 ;;		_I2C_DO_RCEN
  9907 ;;		_I2C_DO_RESET
  9908 ;;		_I2C_DO_RX
  9909 ;;		_I2C_DO_RX_ACK
  9910 ;;		_I2C_DO_RX_NACK_RESTART
  9911 ;;		_I2C_DO_RX_NACK_STOP
  9912 ;;		_I2C_DO_SEND_ADR_READ
  9913 ;;		_I2C_DO_SEND_ADR_WRITE
  9914 ;;		_I2C_DO_SEND_RESTART
  9915 ;;		_I2C_DO_SEND_RESTART_READ
  9916 ;;		_I2C_DO_SEND_RESTART_WRITE
  9917 ;;		_I2C_DO_SEND_STOP
  9918 ;;		_I2C_DO_TX
  9919 ;;		_I2C_DO_TX_EMPTY
  9920 ;;		_I2C_MasterIsNack
  9921 ;;		i2_I2C_MasterClearIrq
  9922 ;; This function is called by:
  9923 ;;		_I2C_MasterIsr
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           	psect	text85
  9928   00294E                     __ptext85:
  9929                           	callstack 0
  9930   00294E                     _I2C_MasterFsm:
  9931                           	callstack 11
  9932   00294E                     
  9933                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  9934   00294E  ECFE  F01A         	call	i2_I2C_MasterClearIrq	;wreg free
  9935   002952                     
  9936                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  9937   002952  0100               	movlb	0	; () banked
  9938   002954  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  9939   002956  EFAF  F014         	goto	i2u400_41
  9940   00295A  EFB1  F014         	goto	i2u400_40
  9941   00295E                     i2u400_41:
  9942   00295E  EFBE  F014         	goto	i2l6645
  9943   002962                     i2u400_40:
  9944   002962                     
  9945                           ; BSR set to: 0
  9946   002962  EC5B  F01A         	call	_I2C_MasterIsNack	;wreg free
  9947   002966  0900               	iorlw	0
  9948   002968  B4D8               	btfsc	status,2,c
  9949   00296A  EFB9  F014         	goto	i2u401_41
  9950   00296E  EFBB  F014         	goto	i2u401_40
  9951   002972                     i2u401_41:
  9952   002972  EFBE  F014         	goto	i2l6645
  9953   002976                     i2u401_40:
  9954   002976                     
  9955                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  9956   002976  0E0F               	movlw	15
  9957   002978  0100               	movlb	0	; () banked
  9958   00297A  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  9959   00297C                     i2l6645:
  9960                           
  9961                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  9962   00297C  0100               	movlb	0	; () banked
  9963   00297E  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  9964   002980  0D02               	mullw	2
  9965   002982  50F3               	movf	243,w,c
  9966   002984  0F01               	addlw	low _i2c_fsmStateTable
  9967   002986  6E0F               	movwf	??_I2C_MasterFsm^0,c
  9968   002988  C00F  FFF6         	movff	??_I2C_MasterFsm,tblptrl
  9969   00298C                     	if	1	;There is more than 1 active tblptr byte
  9970   00298C  0E10               	movlw	high __smallconst
  9971   00298E  6EF7               	movwf	tblptrh,c
  9972   002990                     	endif
  9973   002990                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9974   002990  6AF8               	clrf	tblptru,c
  9975   002992                     	endif
  9976   002992                     	if	0	;tblptru may be non-zero
  9977   002992                     	endif
  9978   002992  0009               	tblrd		*+
  9979   002994  CFF5 F010          	movff	tablat,??_I2C_MasterFsm+1
  9980   002998  0009               	tblrd		*+
  9981   00299A  CFF5 F011          	movff	tablat,??_I2C_MasterFsm+2
  9982   00299E  D802               	call	i2u402_48
  9983   0029A0  EFDB  F014         	goto	i2u402_49
  9984   0029A4                     i2u402_48:
  9985   0029A4  0005               	push	
  9986   0029A6  6EFA               	movwf	pclath,c
  9987   0029A8  5010               	movf	(??_I2C_MasterFsm+1)^0,w,c
  9988   0029AA  6EFD               	movwf	tosl,c
  9989   0029AC  5011               	movf	(??_I2C_MasterFsm+2)^0,w,c
  9990   0029AE  6EFE               	movwf	tosh,c
  9991   0029B0  6AFF               	clrf	tosu,c
  9992   0029B2  50FA               	movf	pclath,w,c
  9993   0029B4  0012               	return		;indir
  9994   0029B6                     i2u402_49:
  9995   0029B6  0100               	movlb	0	; () banked
  9996   0029B8  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  9997   0029BA                     
  9998                           ; BSR set to: 0
  9999   0029BA  0012               	return		;funcret
 10000   0029BC                     __end_of_I2C_MasterFsm:
 10001                           	callstack 0
 10002                           
 10003 ;; *************** function i2_I2C_MasterClearIrq *****************
 10004 ;; Defined at:
 10005 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		None
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10023 ;;Total ram usage:        0 bytes
 10024 ;; Hardware stack levels used: 1
 10025 ;; This function calls:
 10026 ;;		Nothing
 10027 ;; This function is called by:
 10028 ;;		_I2C_MasterFsm
 10029 ;; This function uses a non-reentrant model
 10030 ;;
 10031                           
 10032                           	psect	text86
 10033   0035FC                     __ptext86:
 10034                           	callstack 0
 10035   0035FC                     i2_I2C_MasterClearIrq:
 10036                           	callstack 14
 10037   0035FC                     
 10038                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
 10039   0035FC  969E               	bcf	158,3,c	;volatile
 10040   0035FE  0012               	return		;funcret
 10041   003600                     __end_ofi2_I2C_MasterClearIrq:
 10042                           	callstack 0
 10043                           
 10044 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 10045 ;; Defined at:
 10046 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;		None
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;		None
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  1    wreg      enum E3134
 10053 ;; Registers used:
 10054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/0
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10064 ;;Total ram usage:        2 bytes
 10065 ;; Hardware stack levels used: 1
 10066 ;; Hardware stack levels required when called: 3
 10067 ;; This function calls:
 10068 ;;		NULL
 10069 ;;		_I2C_CallbackReturnReset
 10070 ;;		_I2C_CallbackReturnStop
 10071 ;;		_I2C_DO_SEND_RESTART
 10072 ;;		_I2C_DO_SEND_STOP
 10073 ;;		_rd1RegCompleteHandler
 10074 ;;		_rd2RegCompleteHandler
 10075 ;;		_rdBlkRegCompleteHandler
 10076 ;;		_wr1RegCompleteHandler
 10077 ;;		_wr2RegCompleteHandler
 10078 ;; This function is called by:
 10079 ;;		_I2C_MasterFsm
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           	psect	text87
 10084   002B60                     __ptext87:
 10085                           	callstack 0
 10086   002B60                     _I2C_DO_ADDRESS_NACK:
 10087                           	callstack 11
 10088   002B60                     
 10089                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
 10090   002B60  0100               	movlb	0	; () banked
 10091   002B62  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
 10092   002B64                     
 10093                           ; BSR set to: 0
 10094                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
 10095   002B64  0E02               	movlw	2
 10096   002B66  6F82               	movwf	(_I2C_Status+34)& (0+255),b
 10097                           
 10098                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 10099   002B68  EFBE  F015         	goto	i2l6455
 10100   002B6C                     i2l6445:
 10101                           
 10102                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
 10103   002B6C  ECDB  F01A         	call	_I2C_DO_SEND_RESTART	;wreg free
 10104   002B70  EFE2  F015         	goto	i2l648
 10105   002B74                     i2l6449:
 10106                           
 10107                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
 10108   002B74  ECD7  F01A         	call	_I2C_DO_SEND_STOP	;wreg free
 10109   002B78  EFE2  F015         	goto	i2l648
 10110   002B7C                     i2l6455:
 10111                           
 10112                           ; BSR set to: 0
 10113   002B7C  C070  F00A         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 10114   002B80  C071  F00B         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 10115   002B84  D802               	call	i2u390_48
 10116   002B86  EFCE  F015         	goto	i2u390_49
 10117   002B8A                     i2u390_48:
 10118   002B8A  0005               	push	
 10119   002B8C  6EFA               	movwf	pclath,c
 10120   002B8E  5164               	movf	(_I2C_Status+4)& (0+255),w,b
 10121   002B90  6EFD               	movwf	tosl,c
 10122   002B92  5165               	movf	(_I2C_Status+5)& (0+255),w,b
 10123   002B94  6EFE               	movwf	tosh,c
 10124   002B96  6AFF               	clrf	tosu,c
 10125   002B98  50FA               	movf	pclath,w,c
 10126   002B9A  0012               	return		;indir
 10127   002B9C                     i2u390_49:
 10128   002B9C  6E0D               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 10129   002B9E  6A0E               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 10130                           
 10131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10132                           ; Switch size 1, requested type "simple"
 10133                           ; Number of cases is 1, Range of values is 0 to 0
 10134                           ; switch strategies available:
 10135                           ; Name         Instructions Cycles
 10136                           ; simple_byte            4     3 (average)
 10137                           ;	Chosen strategy is simple_byte
 10138   002BA0  500E               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 10139   002BA2  0A00               	xorlw	0	; case 0
 10140   002BA4  B4D8               	btfsc	status,2,c
 10141   002BA6  EFD7  F015         	goto	i2l9435
 10142   002BAA  EFBA  F015         	goto	i2l6449
 10143   002BAE                     i2l9435:
 10144                           
 10145                           ; Switch size 1, requested type "simple"
 10146                           ; Number of cases is 2, Range of values is 2 to 3
 10147                           ; switch strategies available:
 10148                           ; Name         Instructions Cycles
 10149                           ; simple_byte            7     4 (average)
 10150                           ;	Chosen strategy is simple_byte
 10151   002BAE  500D               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 10152   002BB0  0A02               	xorlw	2	; case 2
 10153   002BB2  B4D8               	btfsc	status,2,c
 10154   002BB4  EFB6  F015         	goto	i2l6445
 10155   002BB8  0A01               	xorlw	1	; case 3
 10156   002BBA  B4D8               	btfsc	status,2,c
 10157   002BBC  EFB6  F015         	goto	i2l6445
 10158   002BC0  EFBA  F015         	goto	i2l6449
 10159   002BC4                     i2l648:
 10160   002BC4  0012               	return		;funcret
 10161   002BC6                     __end_of_I2C_DO_ADDRESS_NACK:
 10162                           	callstack 0
 10163                           
 10164 ;; *************** function _I2C_DO_RESET *****************
 10165 ;; Defined at:
 10166 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;		None
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;		None
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  1    wreg      enum E3134
 10173 ;; Registers used:
 10174 ;;		wreg, status,2
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;Total ram usage:        0 bytes
 10185 ;; Hardware stack levels used: 1
 10186 ;; This function calls:
 10187 ;;		Nothing
 10188 ;; This function is called by:
 10189 ;;		_I2C_MasterFsm
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193                           	psect	text88
 10194   0034F8                     __ptext88:
 10195                           	callstack 0
 10196   0034F8                     _I2C_DO_RESET:
 10197                           	callstack 14
 10198   0034F8                     
 10199                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
 10200   0034F8  0100               	movlb	0	; () banked
 10201   0034FA  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
 10202   0034FC                     
 10203                           ; BSR set to: 0
 10204                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
 10205   0034FC  0E00               	movlw	0
 10206   0034FE  6F82               	movwf	(_I2C_Status+34)& (0+255),b
 10207   003500                     
 10208                           ; BSR set to: 0
 10209                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
 10210   003500  0E0E               	movlw	14
 10211   003502                     
 10212                           ; BSR set to: 0
 10213   003502  0012               	return		;funcret
 10214   003504                     __end_of_I2C_DO_RESET:
 10215                           	callstack 0
 10216                           
 10217 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 10218 ;; Defined at:
 10219 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;		None
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;		None
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  1    wreg      enum E3134
 10226 ;; Registers used:
 10227 ;;		wreg, cstack
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10237 ;;Total ram usage:        0 bytes
 10238 ;; Hardware stack levels used: 1
 10239 ;; Hardware stack levels required when called: 1
 10240 ;; This function calls:
 10241 ;;		_I2C_MasterSendNack
 10242 ;; This function is called by:
 10243 ;;		_I2C_DO_RX
 10244 ;;		_I2C_MasterFsm
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text89
 10249   003596                     __ptext89:
 10250                           	callstack 0
 10251   003596                     _I2C_DO_RX_NACK_RESTART:
 10252                           	callstack 13
 10253   003596                     
 10254                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
 10255   003596  ECF1  F01A         	call	_I2C_MasterSendNack	;wreg free
 10256   00359A                     
 10257                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
 10258   00359A  0E09               	movlw	9
 10259   00359C  0012               	return		;funcret
 10260   00359E                     __end_of_I2C_DO_RX_NACK_RESTART:
 10261                           	callstack 0
 10262                           
 10263 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 10264 ;; Defined at:
 10265 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;		None
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;		None
 10270 ;; Return value:  Size  Location     Type
 10271 ;;                  1    wreg      enum E3134
 10272 ;; Registers used:
 10273 ;;		wreg, cstack
 10274 ;; Tracked objects:
 10275 ;;		On entry : 0/0
 10276 ;;		On exit  : 0/0
 10277 ;;		Unchanged: 0/0
 10278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10283 ;;Total ram usage:        0 bytes
 10284 ;; Hardware stack levels used: 1
 10285 ;; Hardware stack levels required when called: 1
 10286 ;; This function calls:
 10287 ;;		_I2C_MasterSendNack
 10288 ;; This function is called by:
 10289 ;;		_I2C_DO_RX
 10290 ;;		_I2C_MasterFsm
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           	psect	text90
 10295   00359E                     __ptext90:
 10296                           	callstack 0
 10297   00359E                     _I2C_DO_RX_NACK_STOP:
 10298                           	callstack 13
 10299   00359E                     
 10300                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
 10301   00359E  ECF1  F01A         	call	_I2C_MasterSendNack	;wreg free
 10302   0035A2                     
 10303                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
 10304   0035A2  0E0A               	movlw	10
 10305   0035A4  0012               	return		;funcret
 10306   0035A6                     __end_of_I2C_DO_RX_NACK_STOP:
 10307                           	callstack 0
 10308                           
 10309 ;; *************** function _I2C_DO_RX_ACK *****************
 10310 ;; Defined at:
 10311 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;		None
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      enum E3134
 10318 ;; Registers used:
 10319 ;;		wreg, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10329 ;;Total ram usage:        0 bytes
 10330 ;; Hardware stack levels used: 1
 10331 ;; Hardware stack levels required when called: 1
 10332 ;; This function calls:
 10333 ;;		_I2C_MasterSendAck
 10334 ;; This function is called by:
 10335 ;;		_I2C_MasterFsm
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text91
 10340   0035A6                     __ptext91:
 10341                           	callstack 0
 10342   0035A6                     _I2C_DO_RX_ACK:
 10343                           	callstack 13
 10344   0035A6                     
 10345                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
 10346   0035A6  ECEE  F01A         	call	_I2C_MasterSendAck	;wreg free
 10347   0035AA                     
 10348                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
 10349   0035AA  0E05               	movlw	5
 10350   0035AC  0012               	return		;funcret
 10351   0035AE                     __end_of_I2C_DO_RX_ACK:
 10352                           	callstack 0
 10353                           
 10354 ;; *************** function _I2C_DO_SEND_STOP *****************
 10355 ;; Defined at:
 10356 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;		None
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;		None
 10361 ;; Return value:  Size  Location     Type
 10362 ;;                  1    wreg      enum E3134
 10363 ;; Registers used:
 10364 ;;		wreg, cstack
 10365 ;; Tracked objects:
 10366 ;;		On entry : 0/0
 10367 ;;		On exit  : 0/0
 10368 ;;		Unchanged: 0/0
 10369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10374 ;;Total ram usage:        0 bytes
 10375 ;; Hardware stack levels used: 1
 10376 ;; Hardware stack levels required when called: 1
 10377 ;; This function calls:
 10378 ;;		_I2C_MasterStop
 10379 ;; This function is called by:
 10380 ;;		_I2C_DO_TX
 10381 ;;		_I2C_DO_TX_EMPTY
 10382 ;;		_I2C_DO_ADDRESS_NACK
 10383 ;;		_I2C_MasterFsm
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           	psect	text92
 10388   0035AE                     __ptext92:
 10389                           	callstack 0
 10390   0035AE                     _I2C_DO_SEND_STOP:
 10391                           	callstack 12
 10392   0035AE                     
 10393                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
 10394   0035AE  EC0A  F01B         	call	_I2C_MasterStop	;wreg free
 10395   0035B2                     
 10396                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
 10397   0035B2  0E00               	movlw	0
 10398   0035B4  0012               	return		;funcret
 10399   0035B6                     __end_of_I2C_DO_SEND_STOP:
 10400                           	callstack 0
 10401                           
 10402 ;; *************** function _I2C_DO_SEND_RESTART *****************
 10403 ;; Defined at:
 10404 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;		None
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;		None
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      enum E3134
 10411 ;; Registers used:
 10412 ;;		wreg, cstack
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10422 ;;Total ram usage:        0 bytes
 10423 ;; Hardware stack levels used: 1
 10424 ;; Hardware stack levels required when called: 1
 10425 ;; This function calls:
 10426 ;;		_I2C_MasterEnableRestart
 10427 ;; This function is called by:
 10428 ;;		_I2C_DO_TX_EMPTY
 10429 ;;		_I2C_DO_ADDRESS_NACK
 10430 ;;		_I2C_MasterFsm
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           	psect	text93
 10435   0035B6                     __ptext93:
 10436                           	callstack 0
 10437   0035B6                     _I2C_DO_SEND_RESTART:
 10438                           	callstack 12
 10439   0035B6                     
 10440                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
 10441   0035B6  EC0C  F01B         	call	_I2C_MasterEnableRestart	;wreg free
 10442   0035BA                     
 10443                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
 10444   0035BA  0E01               	movlw	1
 10445   0035BC  0012               	return		;funcret
 10446   0035BE                     __end_of_I2C_DO_SEND_RESTART:
 10447                           	callstack 0
 10448                           
 10449 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 10450 ;; Defined at:
 10451 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;		None
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;		None
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1    wreg      enum E3134
 10458 ;; Registers used:
 10459 ;;		wreg, cstack
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;Total ram usage:        0 bytes
 10470 ;; Hardware stack levels used: 1
 10471 ;; Hardware stack levels required when called: 1
 10472 ;; This function calls:
 10473 ;;		_I2C_MasterEnableRestart
 10474 ;; This function is called by:
 10475 ;;		_I2C_DO_TX
 10476 ;;		_I2C_MasterFsm
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           	psect	text94
 10481   0035BE                     __ptext94:
 10482                           	callstack 0
 10483   0035BE                     _I2C_DO_SEND_RESTART_WRITE:
 10484                           	callstack 12
 10485   0035BE                     
 10486                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
 10487   0035BE  EC0C  F01B         	call	_I2C_MasterEnableRestart	;wreg free
 10488   0035C2                     
 10489                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
 10490   0035C2  0E02               	movlw	2
 10491   0035C4  0012               	return		;funcret
 10492   0035C6                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 10493                           	callstack 0
 10494                           
 10495 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 10496 ;; Defined at:
 10497 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;		None
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;		None
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  1    wreg      enum E3134
 10504 ;; Registers used:
 10505 ;;		wreg, cstack
 10506 ;; Tracked objects:
 10507 ;;		On entry : 0/0
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;Total ram usage:        0 bytes
 10516 ;; Hardware stack levels used: 1
 10517 ;; Hardware stack levels required when called: 1
 10518 ;; This function calls:
 10519 ;;		_I2C_MasterEnableRestart
 10520 ;; This function is called by:
 10521 ;;		_I2C_DO_TX
 10522 ;;		_I2C_MasterFsm
 10523 ;; This function uses a non-reentrant model
 10524 ;;
 10525                           
 10526                           	psect	text95
 10527   0035C6                     __ptext95:
 10528                           	callstack 0
 10529   0035C6                     _I2C_DO_SEND_RESTART_READ:
 10530                           	callstack 12
 10531   0035C6                     
 10532                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
 10533   0035C6  EC0C  F01B         	call	_I2C_MasterEnableRestart	;wreg free
 10534   0035CA                     
 10535                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
 10536   0035CA  0E01               	movlw	1
 10537   0035CC  0012               	return		;funcret
 10538   0035CE                     __end_of_I2C_DO_SEND_RESTART_READ:
 10539                           	callstack 0
 10540                           
 10541 ;; *************** function _I2C_DO_RCEN *****************
 10542 ;; Defined at:
 10543 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;		None
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;		None
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      enum E3134
 10550 ;; Registers used:
 10551 ;;		wreg, cstack
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10561 ;;Total ram usage:        0 bytes
 10562 ;; Hardware stack levels used: 1
 10563 ;; Hardware stack levels required when called: 1
 10564 ;; This function calls:
 10565 ;;		_I2C_MasterStartRx
 10566 ;; This function is called by:
 10567 ;;		_I2C_MasterFsm
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571                           	psect	text96
 10572   003504                     __ptext96:
 10573                           	callstack 0
 10574   003504                     _I2C_DO_RCEN:
 10575                           	callstack 13
 10576   003504                     
 10577                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
 10578   003504  0100               	movlb	0	; () banked
 10579   003506  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
 10580   003508                     
 10581                           ; BSR set to: 0
 10582                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
 10583   003508  EC04  F01B         	call	_I2C_MasterStartRx	;wreg free
 10584   00350C                     
 10585                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
 10586   00350C  0E04               	movlw	4
 10587   00350E  0012               	return		;funcret
 10588   003510                     __end_of_I2C_DO_RCEN:
 10589                           	callstack 0
 10590                           
 10591 ;; *************** function _I2C_DO_RX *****************
 10592 ;; Defined at:
 10593 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;		None
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;		None
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  1    wreg      enum E3134
 10600 ;; Registers used:
 10601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;Total ram usage:        2 bytes
 10612 ;; Hardware stack levels used: 1
 10613 ;; Hardware stack levels required when called: 3
 10614 ;; This function calls:
 10615 ;;		NULL
 10616 ;;		_I2C_CallbackReturnReset
 10617 ;;		_I2C_CallbackReturnStop
 10618 ;;		_I2C_DO_RX_NACK_RESTART
 10619 ;;		_I2C_DO_RX_NACK_STOP
 10620 ;;		_I2C_MasterGetRxData
 10621 ;;		_I2C_MasterSendAck
 10622 ;;		_rd1RegCompleteHandler
 10623 ;;		_rd2RegCompleteHandler
 10624 ;;		_rdBlkRegCompleteHandler
 10625 ;;		_wr1RegCompleteHandler
 10626 ;;		_wr2RegCompleteHandler
 10627 ;; This function is called by:
 10628 ;;		_I2C_MasterFsm
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           	psect	text97
 10633   00251C                     __ptext97:
 10634                           	callstack 0
 10635   00251C                     _I2C_DO_RX:
 10636                           	callstack 11
 10637   00251C                     
 10638                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 10639   00251C  EC02  F01B         	call	_I2C_MasterGetRxData	;wreg free
 10640   002520  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
 10641   002524  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
 10642   002528  6EDF               	movwf	indf2,c
 10643   00252A  0100               	movlb	0	; () banked
 10644   00252C  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10645   00252E  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
 10646   002530                     
 10647                           ; BSR set to: 0
 10648                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
 10649   002530  077F               	decf	(_I2C_Status+31)& (0+255),f,b
 10650   002532  A0D8               	btfss	status,0,c
 10651   002534  0780               	decf	(_I2C_Status+32)& (0+255),f,b
 10652   002536  517F               	movf	(_I2C_Status+31)& (0+255),w,b
 10653   002538  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10654   00253A  B4D8               	btfsc	status,2,c
 10655   00253C  EFA2  F012         	goto	i2u387_41
 10656   002540  EFA4  F012         	goto	i2u387_40
 10657   002544                     i2u387_41:
 10658   002544  EFA9  F012         	goto	i2l585
 10659   002548                     i2u387_40:
 10660   002548                     
 10661                           ; BSR set to: 0
 10662                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
 10663   002548  ECEE  F01A         	call	_I2C_MasterSendAck	;wreg free
 10664   00254C                     
 10665                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
 10666   00254C  0E05               	movlw	5
 10667   00254E  EFE0  F012         	goto	i2l586
 10668   002552                     i2l585:
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
 10672   002552  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
 10673                           
 10674                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10675   002554  EFB4  F012         	goto	i2l6405
 10676   002558                     i2l6395:
 10677                           
 10678                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
 10679   002558  ECCB  F01A         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 10680   00255C  EFE0  F012         	goto	i2l586
 10681   002560                     i2l6399:
 10682                           
 10683                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
 10684   002560  ECCF  F01A         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 10685   002564  EFE0  F012         	goto	i2l586
 10686   002568                     i2l6405:
 10687                           
 10688                           ; BSR set to: 0
 10689   002568  C06C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10690   00256C  C06D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10691   002570  D802               	call	i2u388_48
 10692   002572  EFC4  F012         	goto	i2u388_49
 10693   002576                     i2u388_48:
 10694   002576  0005               	push	
 10695   002578  6EFA               	movwf	pclath,c
 10696   00257A  5160               	movf	_I2C_Status& (0+255),w,b
 10697   00257C  6EFD               	movwf	tosl,c
 10698   00257E  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 10699   002580  6EFE               	movwf	tosh,c
 10700   002582  6AFF               	clrf	tosu,c
 10701   002584  50FA               	movf	pclath,w,c
 10702   002586  0012               	return		;indir
 10703   002588                     i2u388_49:
 10704   002588  6E0D               	movwf	??_I2C_DO_RX^0,c
 10705   00258A  6A0E               	clrf	(??_I2C_DO_RX+1)^0,c
 10706                           
 10707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10708                           ; Switch size 1, requested type "simple"
 10709                           ; Number of cases is 1, Range of values is 0 to 0
 10710                           ; switch strategies available:
 10711                           ; Name         Instructions Cycles
 10712                           ; simple_byte            4     3 (average)
 10713                           ;	Chosen strategy is simple_byte
 10714   00258C  500E               	movf	(??_I2C_DO_RX+1)^0,w,c
 10715   00258E  0A00               	xorlw	0	; case 0
 10716   002590  B4D8               	btfsc	status,2,c
 10717   002592  EFCD  F012         	goto	i2l9437
 10718   002596  EFB0  F012         	goto	i2l6399
 10719   00259A                     i2l9437:
 10720                           
 10721                           ; Switch size 1, requested type "simple"
 10722                           ; Number of cases is 4, Range of values is 1 to 4
 10723                           ; switch strategies available:
 10724                           ; Name         Instructions Cycles
 10725                           ; simple_byte           13     7 (average)
 10726                           ;	Chosen strategy is simple_byte
 10727   00259A  500D               	movf	??_I2C_DO_RX^0,w,c
 10728   00259C  0A01               	xorlw	1	; case 1
 10729   00259E  B4D8               	btfsc	status,2,c
 10730   0025A0  EFB0  F012         	goto	i2l6399
 10731   0025A4  0A03               	xorlw	3	; case 2
 10732   0025A6  B4D8               	btfsc	status,2,c
 10733   0025A8  EFAC  F012         	goto	i2l6395
 10734   0025AC  0A01               	xorlw	1	; case 3
 10735   0025AE  B4D8               	btfsc	status,2,c
 10736   0025B0  EFAC  F012         	goto	i2l6395
 10737   0025B4  0A07               	xorlw	7	; case 4
 10738   0025B6  B4D8               	btfsc	status,2,c
 10739   0025B8  EFB0  F012         	goto	i2l6399
 10740   0025BC  EFB0  F012         	goto	i2l6399
 10741   0025C0                     i2l586:
 10742   0025C0  0012               	return		;funcret
 10743   0025C2                     __end_of_I2C_DO_RX:
 10744                           	callstack 0
 10745                           
 10746 ;; *************** function _I2C_DO_TX *****************
 10747 ;; Defined at:
 10748 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
 10749 ;; Parameters:    Size  Location     Type
 10750 ;;		None
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;		None
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      enum E3134
 10755 ;; Registers used:
 10756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10766 ;;Total ram usage:        2 bytes
 10767 ;; Hardware stack levels used: 1
 10768 ;; Hardware stack levels required when called: 3
 10769 ;; This function calls:
 10770 ;;		NULL
 10771 ;;		_I2C_CallbackReturnReset
 10772 ;;		_I2C_CallbackReturnStop
 10773 ;;		_I2C_DO_SEND_RESTART_READ
 10774 ;;		_I2C_DO_SEND_RESTART_WRITE
 10775 ;;		_I2C_DO_SEND_STOP
 10776 ;;		_I2C_MasterIsNack
 10777 ;;		_I2C_MasterSendTxData
 10778 ;;		_rd1RegCompleteHandler
 10779 ;;		_rd2RegCompleteHandler
 10780 ;;		_rdBlkRegCompleteHandler
 10781 ;;		_wr1RegCompleteHandler
 10782 ;;		_wr2RegCompleteHandler
 10783 ;; This function is called by:
 10784 ;;		_I2C_MasterFsm
 10785 ;; This function uses a non-reentrant model
 10786 ;;
 10787                           
 10788                           	psect	text98
 10789   002250                     __ptext98:
 10790                           	callstack 0
 10791   002250                     _I2C_DO_TX:
 10792                           	callstack 11
 10793   002250                     
 10794                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
 10795   002250  EC5B  F01A         	call	_I2C_MasterIsNack	;wreg free
 10796   002254  0900               	iorlw	0
 10797   002256  B4D8               	btfsc	status,2,c
 10798   002258  EF30  F011         	goto	i2u384_41
 10799   00225C  EF32  F011         	goto	i2u384_40
 10800   002260                     i2u384_41:
 10801   002260  EF6D  F011         	goto	i2l569
 10802   002264                     i2u384_40:
 10803   002264  EF40  F011         	goto	i2l6365
 10804   002268                     i2l6351:
 10805                           
 10806                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 10807   002268  ECE3  F01A         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 10808   00226C  EF89  F011         	goto	i2l572
 10809   002270                     i2l6355:
 10810                           
 10811                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 10812   002270  ECDF  F01A         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 10813   002274  EF89  F011         	goto	i2l572
 10814   002278                     i2l6359:
 10815                           
 10816                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
 10817   002278  ECD7  F01A         	call	_I2C_DO_SEND_STOP	;wreg free
 10818   00227C  EF89  F011         	goto	i2l572
 10819   002280                     i2l6365:
 10820   002280  C072  F00A         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 10821   002284  C073  F00B         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 10822   002288  D802               	call	i2u385_48
 10823   00228A  EF51  F011         	goto	i2u385_49
 10824   00228E                     i2u385_48:
 10825   00228E  0005               	push	
 10826   002290  6EFA               	movwf	pclath,c
 10827   002292  0100               	movlb	0	; () banked
 10828   002294  5166               	movf	(_I2C_Status+6)& (0+255),w,b
 10829   002296  6EFD               	movwf	tosl,c
 10830   002298  5167               	movf	(_I2C_Status+7)& (0+255),w,b
 10831   00229A  6EFE               	movwf	tosh,c
 10832   00229C  6AFF               	clrf	tosu,c
 10833   00229E  50FA               	movf	pclath,w,c
 10834   0022A0  0012               	return		;indir
 10835   0022A2                     i2u385_49:
 10836   0022A2  6E0D               	movwf	??_I2C_DO_TX^0,c
 10837   0022A4  6A0E               	clrf	(??_I2C_DO_TX+1)^0,c
 10838                           
 10839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10840                           ; Switch size 1, requested type "simple"
 10841                           ; Number of cases is 1, Range of values is 0 to 0
 10842                           ; switch strategies available:
 10843                           ; Name         Instructions Cycles
 10844                           ; simple_byte            4     3 (average)
 10845                           ;	Chosen strategy is simple_byte
 10846   0022A6  500E               	movf	(??_I2C_DO_TX+1)^0,w,c
 10847   0022A8  0A00               	xorlw	0	; case 0
 10848   0022AA  B4D8               	btfsc	status,2,c
 10849   0022AC  EF5A  F011         	goto	i2l9439
 10850   0022B0  EF3C  F011         	goto	i2l6359
 10851   0022B4                     i2l9439:
 10852                           
 10853                           ; Switch size 1, requested type "simple"
 10854                           ; Number of cases is 4, Range of values is 1 to 4
 10855                           ; switch strategies available:
 10856                           ; Name         Instructions Cycles
 10857                           ; simple_byte           13     7 (average)
 10858                           ;	Chosen strategy is simple_byte
 10859   0022B4  500D               	movf	??_I2C_DO_TX^0,w,c
 10860   0022B6  0A01               	xorlw	1	; case 1
 10861   0022B8  B4D8               	btfsc	status,2,c
 10862   0022BA  EF3C  F011         	goto	i2l6359
 10863   0022BE  0A03               	xorlw	3	; case 2
 10864   0022C0  B4D8               	btfsc	status,2,c
 10865   0022C2  EF34  F011         	goto	i2l6351
 10866   0022C6  0A01               	xorlw	1	; case 3
 10867   0022C8  B4D8               	btfsc	status,2,c
 10868   0022CA  EF38  F011         	goto	i2l6355
 10869   0022CE  0A07               	xorlw	7	; case 4
 10870   0022D0  B4D8               	btfsc	status,2,c
 10871   0022D2  EF3C  F011         	goto	i2l6359
 10872   0022D6  EF3C  F011         	goto	i2l6359
 10873   0022DA                     i2l569:
 10874                           
 10875                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
 10876   0022DA  0100               	movlb	0	; () banked
 10877   0022DC  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
 10878   0022DE                     
 10879                           ; BSR set to: 0
 10880                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 10881   0022DE  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
 10882   0022E2  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
 10883   0022E6  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10884   0022E8  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
 10885   0022EA  50DF               	movf	indf2,w,c
 10886   0022EC  ECE7  F01A         	call	_I2C_MasterSendTxData
 10887   0022F0                     
 10888                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 10889   0022F0  0100               	movlb	0	; () banked
 10890   0022F2  077F               	decf	(_I2C_Status+31)& (0+255),f,b
 10891   0022F4  A0D8               	btfss	status,0,c
 10892   0022F6  0780               	decf	(_I2C_Status+32)& (0+255),f,b
 10893   0022F8  517F               	movf	(_I2C_Status+31)& (0+255),w,b
 10894   0022FA  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10895   0022FC  A4D8               	btfss	status,2,c
 10896   0022FE  EF83  F011         	goto	i2u386_41
 10897   002302  EF85  F011         	goto	i2u386_40
 10898   002306                     i2u386_41:
 10899   002306  EF88  F011         	goto	i2l6373
 10900   00230A                     i2u386_40:
 10901   00230A                     
 10902                           ; BSR set to: 0
 10903   00230A  0E06               	movlw	6
 10904   00230C  EF89  F011         	goto	i2l572
 10905   002310                     i2l6373:
 10906                           
 10907                           ; BSR set to: 0
 10908   002310  0E03               	movlw	3
 10909   002312                     i2l572:
 10910   002312  0012               	return		;funcret
 10911   002314                     __end_of_I2C_DO_TX:
 10912                           	callstack 0
 10913                           
 10914 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 10915 ;; Defined at:
 10916 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;		None
 10919 ;; Auto vars:     Size  Location     Type
 10920 ;;		None
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  1    wreg      enum E3134
 10923 ;; Registers used:
 10924 ;;		wreg, status,2, status,0, cstack
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10934 ;;Total ram usage:        0 bytes
 10935 ;; Hardware stack levels used: 1
 10936 ;; Hardware stack levels required when called: 1
 10937 ;; This function calls:
 10938 ;;		_I2C_MasterSendTxData
 10939 ;; This function is called by:
 10940 ;;		_I2C_MasterFsm
 10941 ;; This function uses a non-reentrant model
 10942 ;;
 10943                           
 10944                           	psect	text99
 10945   0034CA                     __ptext99:
 10946                           	callstack 0
 10947   0034CA                     _I2C_DO_SEND_ADR_WRITE:
 10948                           	callstack 13
 10949   0034CA                     
 10950                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
 10951   0034CA  0100               	movlb	0	; () banked
 10952   0034CC  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
 10953   0034CE                     
 10954                           ; BSR set to: 0
 10955                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 10956   0034CE  517C               	movf	(_I2C_Status+28)& (0+255),w,b
 10957   0034D0  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
 10958   0034D2  ECE7  F01A         	call	_I2C_MasterSendTxData
 10959   0034D6                     
 10960                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
 10961   0034D6  0E03               	movlw	3
 10962   0034D8  0012               	return		;funcret
 10963   0034DA                     __end_of_I2C_DO_SEND_ADR_WRITE:
 10964                           	callstack 0
 10965                           
 10966 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 10967 ;; Defined at:
 10968 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
 10969 ;; Parameters:    Size  Location     Type
 10970 ;;		None
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;		None
 10973 ;; Return value:  Size  Location     Type
 10974 ;;                  1    wreg      enum E3134
 10975 ;; Registers used:
 10976 ;;		wreg, status,0, cstack
 10977 ;; Tracked objects:
 10978 ;;		On entry : 0/0
 10979 ;;		On exit  : 0/0
 10980 ;;		Unchanged: 0/0
 10981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10986 ;;Total ram usage:        0 bytes
 10987 ;; Hardware stack levels used: 1
 10988 ;; Hardware stack levels required when called: 1
 10989 ;; This function calls:
 10990 ;;		_I2C_MasterSendTxData
 10991 ;; This function is called by:
 10992 ;;		_I2C_MasterFsm
 10993 ;; This function uses a non-reentrant model
 10994 ;;
 10995                           
 10996                           	psect	text100
 10997   0034DA                     __ptext100:
 10998                           	callstack 0
 10999   0034DA                     _I2C_DO_SEND_ADR_READ:
 11000                           	callstack 13
 11001   0034DA                     
 11002                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
 11003   0034DA  0100               	movlb	0	; () banked
 11004   0034DC  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
 11005   0034DE                     
 11006                           ; BSR set to: 0
 11007                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 11008   0034DE  80D8               	bsf	status,0,c
 11009   0034E0  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 11010   0034E2  ECE7  F01A         	call	_I2C_MasterSendTxData
 11011   0034E6                     
 11012                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
 11013   0034E6  0E05               	movlw	5
 11014   0034E8  0012               	return		;funcret
 11015   0034EA                     __end_of_I2C_DO_SEND_ADR_READ:
 11016                           	callstack 0
 11017                           
 11018 ;; *************** function _I2C_DO_IDLE *****************
 11019 ;; Defined at:
 11020 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;		None
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;		None
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      enum E3134
 11027 ;; Registers used:
 11028 ;;		wreg, status,2
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;Total ram usage:        0 bytes
 11039 ;; Hardware stack levels used: 1
 11040 ;; This function calls:
 11041 ;;		Nothing
 11042 ;; This function is called by:
 11043 ;;		_I2C_MasterFsm
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           	psect	text101
 11048   003510                     __ptext101:
 11049                           	callstack 0
 11050   003510                     _I2C_DO_IDLE:
 11051                           	callstack 14
 11052   003510                     
 11053                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
 11054   003510  0100               	movlb	0	; () banked
 11055   003512  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
 11056   003514                     
 11057                           ; BSR set to: 0
 11058                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
 11059   003514  0E00               	movlw	0
 11060   003516  6F82               	movwf	(_I2C_Status+34)& (0+255),b
 11061   003518                     
 11062                           ; BSR set to: 0
 11063                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
 11064   003518  0E0E               	movlw	14
 11065   00351A                     
 11066                           ; BSR set to: 0
 11067   00351A  0012               	return		;funcret
 11068   00351C                     __end_of_I2C_DO_IDLE:
 11069                           	callstack 0
 11070                           
 11071 ;; *************** function _I2C_DO_TX_EMPTY *****************
 11072 ;; Defined at:
 11073 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;		None
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;		None
 11078 ;; Return value:  Size  Location     Type
 11079 ;;                  1    wreg      enum E3134
 11080 ;; Registers used:
 11081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 11082 ;; Tracked objects:
 11083 ;;		On entry : 0/0
 11084 ;;		On exit  : 0/0
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;Total ram usage:        2 bytes
 11092 ;; Hardware stack levels used: 1
 11093 ;; Hardware stack levels required when called: 3
 11094 ;; This function calls:
 11095 ;;		NULL
 11096 ;;		_I2C_CallbackReturnReset
 11097 ;;		_I2C_CallbackReturnStop
 11098 ;;		_I2C_DO_SEND_RESTART
 11099 ;;		_I2C_DO_SEND_STOP
 11100 ;;		_I2C_MasterSetIrq
 11101 ;;		_rd1RegCompleteHandler
 11102 ;;		_rd2RegCompleteHandler
 11103 ;;		_rdBlkRegCompleteHandler
 11104 ;;		_wr1RegCompleteHandler
 11105 ;;		_wr2RegCompleteHandler
 11106 ;; This function is called by:
 11107 ;;		_I2C_MasterFsm
 11108 ;; This function uses a non-reentrant model
 11109 ;;
 11110                           
 11111                           	psect	text102
 11112   0027EC                     __ptext102:
 11113                           	callstack 0
 11114   0027EC                     _I2C_DO_TX_EMPTY:
 11115                           	callstack 11
 11116   0027EC                     
 11117                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
 11118   0027EC  0100               	movlb	0	; () banked
 11119   0027EE  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
 11120                           
 11121                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11122   0027F0  EF07  F014         	goto	i2l6429
 11123   0027F4                     i2l6413:
 11124                           
 11125                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
 11126   0027F4  ECDB  F01A         	call	_I2C_DO_SEND_RESTART	;wreg free
 11127   0027F8  EF33  F014         	goto	i2l603
 11128   0027FC                     i2l6417:
 11129                           
 11130                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
 11131   0027FC  EC00  F01B         	call	_I2C_MasterSetIrq	;wreg free
 11132   002800                     
 11133                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
 11134   002800  0E03               	movlw	3
 11135   002802  EF33  F014         	goto	i2l603
 11136   002806                     i2l6423:
 11137                           
 11138                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
 11139   002806  ECD7  F01A         	call	_I2C_DO_SEND_STOP	;wreg free
 11140   00280A  EF33  F014         	goto	i2l603
 11141   00280E                     i2l6429:
 11142                           
 11143                           ; BSR set to: 0
 11144   00280E  C06C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11145   002812  C06D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11146   002816  D802               	call	i2u389_48
 11147   002818  EF17  F014         	goto	i2u389_49
 11148   00281C                     i2u389_48:
 11149   00281C  0005               	push	
 11150   00281E  6EFA               	movwf	pclath,c
 11151   002820  5160               	movf	_I2C_Status& (0+255),w,b
 11152   002822  6EFD               	movwf	tosl,c
 11153   002824  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 11154   002826  6EFE               	movwf	tosh,c
 11155   002828  6AFF               	clrf	tosu,c
 11156   00282A  50FA               	movf	pclath,w,c
 11157   00282C  0012               	return		;indir
 11158   00282E                     i2u389_49:
 11159   00282E  6E0D               	movwf	??_I2C_DO_TX_EMPTY^0,c
 11160   002830  6A0E               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 11161                           
 11162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11163                           ; Switch size 1, requested type "simple"
 11164                           ; Number of cases is 1, Range of values is 0 to 0
 11165                           ; switch strategies available:
 11166                           ; Name         Instructions Cycles
 11167                           ; simple_byte            4     3 (average)
 11168                           ;	Chosen strategy is simple_byte
 11169   002832  500E               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 11170   002834  0A00               	xorlw	0	; case 0
 11171   002836  B4D8               	btfsc	status,2,c
 11172   002838  EF20  F014         	goto	i2l9441
 11173   00283C  EF03  F014         	goto	i2l6423
 11174   002840                     i2l9441:
 11175                           
 11176                           ; Switch size 1, requested type "simple"
 11177                           ; Number of cases is 4, Range of values is 1 to 4
 11178                           ; switch strategies available:
 11179                           ; Name         Instructions Cycles
 11180                           ; simple_byte           13     7 (average)
 11181                           ;	Chosen strategy is simple_byte
 11182   002840  500D               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 11183   002842  0A01               	xorlw	1	; case 1
 11184   002844  B4D8               	btfsc	status,2,c
 11185   002846  EF03  F014         	goto	i2l6423
 11186   00284A  0A03               	xorlw	3	; case 2
 11187   00284C  B4D8               	btfsc	status,2,c
 11188   00284E  EFFA  F013         	goto	i2l6413
 11189   002852  0A01               	xorlw	1	; case 3
 11190   002854  B4D8               	btfsc	status,2,c
 11191   002856  EFFA  F013         	goto	i2l6413
 11192   00285A  0A07               	xorlw	7	; case 4
 11193   00285C  B4D8               	btfsc	status,2,c
 11194   00285E  EFFE  F013         	goto	i2l6417
 11195   002862  EF03  F014         	goto	i2l6423
 11196   002866                     i2l603:
 11197   002866  0012               	return		;funcret
 11198   002868                     __end_of_I2C_DO_TX_EMPTY:
 11199                           	callstack 0
 11200                           
 11201 ;; *************** function _I2C_MasterSetIrq *****************
 11202 ;; Defined at:
 11203 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
 11204 ;; Parameters:    Size  Location     Type
 11205 ;;		None
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;		None
 11208 ;; Return value:  Size  Location     Type
 11209 ;;                  1    wreg      void 
 11210 ;; Registers used:
 11211 ;;		None
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11221 ;;Total ram usage:        0 bytes
 11222 ;; Hardware stack levels used: 1
 11223 ;; This function calls:
 11224 ;;		Nothing
 11225 ;; This function is called by:
 11226 ;;		_I2C_DO_TX_EMPTY
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           	psect	text103
 11231   003600                     __ptext103:
 11232                           	callstack 0
 11233   003600                     _I2C_MasterSetIrq:
 11234                           	callstack 13
 11235   003600                     
 11236                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
 11237   003600  869E               	bsf	158,3,c	;volatile
 11238   003602  0012               	return		;funcret
 11239   003604                     __end_of_I2C_MasterSetIrq:
 11240                           	callstack 0
 11241                           
 11242 ;; *************** function _I2C_MasterIsNack *****************
 11243 ;; Defined at:
 11244 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;		None
 11247 ;; Auto vars:     Size  Location     Type
 11248 ;;		None
 11249 ;; Return value:  Size  Location     Type
 11250 ;;                  1    wreg      _Bool 
 11251 ;; Registers used:
 11252 ;;		wreg
 11253 ;; Tracked objects:
 11254 ;;		On entry : 0/0
 11255 ;;		On exit  : 0/0
 11256 ;;		Unchanged: 0/0
 11257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11262 ;;Total ram usage:        0 bytes
 11263 ;; Hardware stack levels used: 1
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_I2C_MasterFsm
 11268 ;;		_I2C_DO_TX
 11269 ;; This function uses a non-reentrant model
 11270 ;;
 11271                           
 11272                           	psect	text104
 11273   0034B6                     __ptext104:
 11274                           	callstack 0
 11275   0034B6                     _I2C_MasterIsNack:
 11276                           	callstack 14
 11277   0034B6                     
 11278                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
 11279   0034B6  BCC5               	btfsc	197,6,c	;volatile
 11280   0034B8  EF60  F01A         	goto	i2u376_41
 11281   0034BC  EF63  F01A         	goto	i2u376_40
 11282   0034C0                     i2u376_41:
 11283   0034C0  0E01               	movlw	1
 11284   0034C2  EF64  F01A         	goto	i2u376_46
 11285   0034C6                     i2u376_40:
 11286   0034C6  0E00               	movlw	0
 11287   0034C8                     i2u376_46:
 11288   0034C8  0012               	return		;funcret
 11289   0034CA                     __end_of_I2C_MasterIsNack:
 11290                           	callstack 0
 11291                           
 11292 ;; *************** function _I2C_MasterSendTxData *****************
 11293 ;; Defined at:
 11294 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;  data            1    wreg     unsigned char 
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;  data            1    0[COMRAM] unsigned char 
 11299 ;; Return value:  Size  Location     Type
 11300 ;;                  1    wreg      void 
 11301 ;; Registers used:
 11302 ;;		wreg
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11312 ;;Total ram usage:        1 bytes
 11313 ;; Hardware stack levels used: 1
 11314 ;; This function calls:
 11315 ;;		Nothing
 11316 ;; This function is called by:
 11317 ;;		_I2C_DO_SEND_ADR_READ
 11318 ;;		_I2C_DO_SEND_ADR_WRITE
 11319 ;;		_I2C_DO_TX
 11320 ;; This function uses a non-reentrant model
 11321 ;;
 11322                           
 11323                           	psect	text105
 11324   0035CE                     __ptext105:
 11325                           	callstack 0
 11326   0035CE                     _I2C_MasterSendTxData:
 11327                           	callstack 13
 11328                           
 11329                           ;incstack = 0
 11330                           ;I2C_MasterSendTxData@data stored from wreg
 11331   0035CE  6E01               	movwf	I2C_MasterSendTxData@data^0,c
 11332   0035D0                     
 11333                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
 11334   0035D0  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 11335   0035D4  0012               	return		;funcret
 11336   0035D6                     __end_of_I2C_MasterSendTxData:
 11337                           	callstack 0
 11338                           
 11339 ;; *************** function _I2C_MasterSendAck *****************
 11340 ;; Defined at:
 11341 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;		None
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;		None
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      void 
 11348 ;; Registers used:
 11349 ;;		None
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11359 ;;Total ram usage:        0 bytes
 11360 ;; Hardware stack levels used: 1
 11361 ;; This function calls:
 11362 ;;		Nothing
 11363 ;; This function is called by:
 11364 ;;		_I2C_DO_RX
 11365 ;;		_I2C_DO_RX_ACK
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text106
 11370   0035DC                     __ptext106:
 11371                           	callstack 0
 11372   0035DC                     _I2C_MasterSendAck:
 11373                           	callstack 13
 11374   0035DC                     
 11375                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
 11376   0035DC  9AC5               	bcf	197,5,c	;volatile
 11377                           
 11378                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
 11379   0035DE  88C5               	bsf	197,4,c	;volatile
 11380   0035E0  0012               	return		;funcret
 11381   0035E2                     __end_of_I2C_MasterSendAck:
 11382                           	callstack 0
 11383                           
 11384 ;; *************** function _I2C_MasterGetRxData *****************
 11385 ;; Defined at:
 11386 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
 11387 ;; Parameters:    Size  Location     Type
 11388 ;;		None
 11389 ;; Auto vars:     Size  Location     Type
 11390 ;;		None
 11391 ;; Return value:  Size  Location     Type
 11392 ;;                  1    wreg      unsigned char 
 11393 ;; Registers used:
 11394 ;;		wreg, status,2
 11395 ;; Tracked objects:
 11396 ;;		On entry : 0/0
 11397 ;;		On exit  : 0/0
 11398 ;;		Unchanged: 0/0
 11399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11404 ;;Total ram usage:        0 bytes
 11405 ;; Hardware stack levels used: 1
 11406 ;; This function calls:
 11407 ;;		Nothing
 11408 ;; This function is called by:
 11409 ;;		_I2C_DO_RX
 11410 ;; This function uses a non-reentrant model
 11411 ;;
 11412                           
 11413                           	psect	text107
 11414   003604                     __ptext107:
 11415                           	callstack 0
 11416   003604                     _I2C_MasterGetRxData:
 11417                           	callstack 13
 11418   003604                     
 11419                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
 11420   003604  50C9               	movf	201,w,c	;volatile
 11421   003606  0012               	return		;funcret
 11422   003608                     __end_of_I2C_MasterGetRxData:
 11423                           	callstack 0
 11424                           
 11425 ;; *************** function _I2C_MasterSendNack *****************
 11426 ;; Defined at:
 11427 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;		None
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;		None
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      void 
 11434 ;; Registers used:
 11435 ;;		None
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11445 ;;Total ram usage:        0 bytes
 11446 ;; Hardware stack levels used: 1
 11447 ;; This function calls:
 11448 ;;		Nothing
 11449 ;; This function is called by:
 11450 ;;		_I2C_DO_RX_NACK_STOP
 11451 ;;		_I2C_DO_RX_NACK_RESTART
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           	psect	text108
 11456   0035E2                     __ptext108:
 11457                           	callstack 0
 11458   0035E2                     _I2C_MasterSendNack:
 11459                           	callstack 13
 11460   0035E2                     
 11461                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
 11462   0035E2  8AC5               	bsf	197,5,c	;volatile
 11463                           
 11464                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
 11465   0035E4  88C5               	bsf	197,4,c	;volatile
 11466   0035E6  0012               	return		;funcret
 11467   0035E8                     __end_of_I2C_MasterSendNack:
 11468                           	callstack 0
 11469                           
 11470 ;; *************** function _I2C_MasterStartRx *****************
 11471 ;; Defined at:
 11472 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;		None
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;		None
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      void 
 11479 ;; Registers used:
 11480 ;;		None
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11490 ;;Total ram usage:        0 bytes
 11491 ;; Hardware stack levels used: 1
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_I2C_DO_RCEN
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           	psect	text109
 11500   003608                     __ptext109:
 11501                           	callstack 0
 11502   003608                     _I2C_MasterStartRx:
 11503                           	callstack 13
 11504   003608                     
 11505                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
 11506   003608  86C5               	bsf	197,3,c	;volatile
 11507   00360A  0012               	return		;funcret
 11508   00360C                     __end_of_I2C_MasterStartRx:
 11509                           	callstack 0
 11510                           
 11511 ;; *************** function _I2C_CallbackReturnReset *****************
 11512 ;; Defined at:
 11513 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 11514 ;; Parameters:    Size  Location     Type
 11515 ;;  funPtr          2    9[COMRAM] PTR void 
 11516 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11517 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;		None
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      enum E363
 11522 ;; Registers used:
 11523 ;;		wreg
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;Total ram usage:        2 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; This function calls:
 11536 ;;		Nothing
 11537 ;; This function is called by:
 11538 ;;		_I2C_Open
 11539 ;;		_I2C_DO_TX
 11540 ;;		_I2C_DO_RX
 11541 ;;		_I2C_DO_TX_EMPTY
 11542 ;;		_I2C_DO_ADDRESS_NACK
 11543 ;;		_I2C_DO_RX_EMPTY
 11544 ;; This function uses a non-reentrant model
 11545 ;;
 11546                           
 11547                           	psect	text110
 11548   00360C                     __ptext110:
 11549                           	callstack 0
 11550   00360C                     _I2C_CallbackReturnReset:
 11551                           	callstack 13
 11552   00360C                     
 11553                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
 11554   00360C  0E05               	movlw	5
 11555   00360E  0012               	return		;funcret
 11556   003610                     __end_of_I2C_CallbackReturnReset:
 11557                           	callstack 0
 11558                           
 11559 ;; *************** function _I2C_CallbackReturnStop *****************
 11560 ;; Defined at:
 11561 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 11562 ;; Parameters:    Size  Location     Type
 11563 ;;  funPtr          2    9[COMRAM] PTR void 
 11564 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11565 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;		None
 11568 ;; Return value:  Size  Location     Type
 11569 ;;                  1    wreg      enum E363
 11570 ;; Registers used:
 11571 ;;		wreg
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11581 ;;Total ram usage:        2 bytes
 11582 ;; Hardware stack levels used: 1
 11583 ;; This function calls:
 11584 ;;		Nothing
 11585 ;; This function is called by:
 11586 ;;		_I2C_Open
 11587 ;;		_I2C_SetCallback
 11588 ;;		i2_I2C_SetCallback
 11589 ;;		_I2C_DO_TX
 11590 ;;		_I2C_DO_RX
 11591 ;;		_I2C_DO_TX_EMPTY
 11592 ;;		_I2C_DO_ADDRESS_NACK
 11593 ;;		_I2C_DO_RX_EMPTY
 11594 ;; This function uses a non-reentrant model
 11595 ;;
 11596                           
 11597                           	psect	text111
 11598   003610                     __ptext111:
 11599                           	callstack 0
 11600   003610                     _I2C_CallbackReturnStop:
 11601                           	callstack 13
 11602   003610                     
 11603                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
 11604   003610  0E01               	movlw	1
 11605   003612  0012               	return		;funcret
 11606   003614                     __end_of_I2C_CallbackReturnStop:
 11607                           	callstack 0
 11608                           
 11609 ;; *************** function _rdBlkRegCompleteHandler *****************
 11610 ;; Defined at:
 11611 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;  ptr             2    9[COMRAM] PTR void 
 11614 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11615 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11616 ;; Auto vars:     Size  Location     Type
 11617 ;;		None
 11618 ;; Return value:  Size  Location     Type
 11619 ;;                  1    wreg      enum E363
 11620 ;; Registers used:
 11621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11622 ;; Tracked objects:
 11623 ;;		On entry : 0/0
 11624 ;;		On exit  : 0/0
 11625 ;;		Unchanged: 0/0
 11626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11630 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11631 ;;Total ram usage:        3 bytes
 11632 ;; Hardware stack levels used: 1
 11633 ;; Hardware stack levels required when called: 2
 11634 ;; This function calls:
 11635 ;;		i2_I2C_SetBuffer
 11636 ;;		i2_I2C_SetDataCompleteCallback
 11637 ;; This function is called by:
 11638 ;;		_I2C_ReadDataBlock
 11639 ;;		_I2C_DO_TX
 11640 ;;		_I2C_DO_RX
 11641 ;;		_I2C_DO_TX_EMPTY
 11642 ;;		_I2C_DO_ADDRESS_NACK
 11643 ;;		_I2C_DO_RX_EMPTY
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           	psect	text112
 11648   002F3E                     __ptext112:
 11649                           	callstack 0
 11650   002F3E                     _rdBlkRegCompleteHandler:
 11651                           	callstack 11
 11652   002F3E                     
 11653                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 11654   002F3E  EE20 F002          	lfsr	2,2
 11655   002F42  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 11656   002F44  26D9               	addwf	fsr2l,f,c
 11657   002F46  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 11658   002F48  22DA               	addwfc	fsr2h,f,c
 11659   002F4A  50DF               	movf	indf2,w,c
 11660   002F4C  6E0C               	movwf	??_rdBlkRegCompleteHandler^0,c
 11661   002F4E  C00C  F001         	movff	??_rdBlkRegCompleteHandler,i2I2C_SetBuffer@buffer
 11662   002F52  6A02               	clrf	(i2I2C_SetBuffer@buffer+1)^0,c
 11663   002F54  C00A  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 11664   002F58  C00B  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 11665   002F5C  CFDE F003          	movff	postinc2,i2I2C_SetBuffer@bufferSize
 11666   002F60  CFDD F004          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
 11667   002F64  ECDB  F019         	call	i2_I2C_SetBuffer	;wreg free
 11668   002F68                     
 11669                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11670   002F68  0E00               	movlw	0
 11671   002F6A  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11672   002F6C  0E00               	movlw	0
 11673   002F6E  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11674   002F70  0E00               	movlw	0
 11675   002F72  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11676   002F74  0E00               	movlw	0
 11677   002F76  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11678   002F78  EC3A  F01A         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11679   002F7C                     
 11680                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 11681   002F7C  0E02               	movlw	2
 11682   002F7E  0012               	return		;funcret
 11683   002F80                     __end_of_rdBlkRegCompleteHandler:
 11684                           	callstack 0
 11685                           
 11686 ;; *************** function _wr1RegCompleteHandler *****************
 11687 ;; Defined at:
 11688 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  ptr             2    9[COMRAM] PTR void 
 11691 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11692 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1    wreg      enum E363
 11697 ;; Registers used:
 11698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11708 ;;Total ram usage:        2 bytes
 11709 ;; Hardware stack levels used: 1
 11710 ;; Hardware stack levels required when called: 2
 11711 ;; This function calls:
 11712 ;;		i2_I2C_SetBuffer
 11713 ;;		i2_I2C_SetDataCompleteCallback
 11714 ;; This function is called by:
 11715 ;;		_I2C_Write1ByteRegister
 11716 ;;		_I2C_DO_TX
 11717 ;;		_I2C_DO_RX
 11718 ;;		_I2C_DO_TX_EMPTY
 11719 ;;		_I2C_DO_ADDRESS_NACK
 11720 ;;		_I2C_DO_RX_EMPTY
 11721 ;; This function uses a non-reentrant model
 11722 ;;
 11723                           
 11724                           	psect	text113
 11725   0031FE                     __ptext113:
 11726                           	callstack 0
 11727   0031FE                     _wr1RegCompleteHandler:
 11728                           	callstack 11
 11729   0031FE                     
 11730                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 11731   0031FE  C00A  F001         	movff	wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11732   003202  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11733   003206  0E00               	movlw	0
 11734   003208  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11735   00320A  0E01               	movlw	1
 11736   00320C  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11737   00320E  ECDB  F019         	call	i2_I2C_SetBuffer	;wreg free
 11738   003212                     
 11739                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11740   003212  0E00               	movlw	0
 11741   003214  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11742   003216  0E00               	movlw	0
 11743   003218  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11744   00321A  0E00               	movlw	0
 11745   00321C  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11746   00321E  0E00               	movlw	0
 11747   003220  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11748   003222  EC3A  F01A         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11749   003226                     
 11750                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 11751   003226  0E04               	movlw	4
 11752   003228  0012               	return		;funcret
 11753   00322A                     __end_of_wr1RegCompleteHandler:
 11754                           	callstack 0
 11755                           
 11756 ;; *************** function _rd2RegCompleteHandler *****************
 11757 ;; Defined at:
 11758 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;  ptr             2    9[COMRAM] PTR void 
 11761 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11762 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1    wreg      enum E363
 11767 ;; Registers used:
 11768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;Total ram usage:        2 bytes
 11779 ;; Hardware stack levels used: 1
 11780 ;; Hardware stack levels required when called: 2
 11781 ;; This function calls:
 11782 ;;		i2_I2C_SetBuffer
 11783 ;;		i2_I2C_SetDataCompleteCallback
 11784 ;; This function is called by:
 11785 ;;		_I2C_Read2ByteRegister
 11786 ;;		_I2C_DO_TX
 11787 ;;		_I2C_DO_RX
 11788 ;;		_I2C_DO_TX_EMPTY
 11789 ;;		_I2C_DO_ADDRESS_NACK
 11790 ;;		_I2C_DO_RX_EMPTY
 11791 ;; This function uses a non-reentrant model
 11792 ;;
 11793                           
 11794                           	psect	text114
 11795   00322A                     __ptext114:
 11796                           	callstack 0
 11797   00322A                     _rd2RegCompleteHandler:
 11798                           	callstack 11
 11799   00322A                     
 11800                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 11801   00322A  C00A  F001         	movff	rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11802   00322E  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11803   003232  0E00               	movlw	0
 11804   003234  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11805   003236  0E02               	movlw	2
 11806   003238  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11807   00323A  ECDB  F019         	call	i2_I2C_SetBuffer	;wreg free
 11808   00323E                     
 11809                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11810   00323E  0E00               	movlw	0
 11811   003240  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11812   003242  0E00               	movlw	0
 11813   003244  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11814   003246  0E00               	movlw	0
 11815   003248  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11816   00324A  0E00               	movlw	0
 11817   00324C  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11818   00324E  EC3A  F01A         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11819   003252                     
 11820                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 11821   003252  0E02               	movlw	2
 11822   003254  0012               	return		;funcret
 11823   003256                     __end_of_rd2RegCompleteHandler:
 11824                           	callstack 0
 11825                           
 11826 ;; *************** function _rd1RegCompleteHandler *****************
 11827 ;; Defined at:
 11828 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;  ptr             2    9[COMRAM] PTR void 
 11831 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11832 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;		None
 11835 ;; Return value:  Size  Location     Type
 11836 ;;                  1    wreg      enum E363
 11837 ;; Registers used:
 11838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11839 ;; Tracked objects:
 11840 ;;		On entry : 0/0
 11841 ;;		On exit  : 0/0
 11842 ;;		Unchanged: 0/0
 11843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11848 ;;Total ram usage:        2 bytes
 11849 ;; Hardware stack levels used: 1
 11850 ;; Hardware stack levels required when called: 2
 11851 ;; This function calls:
 11852 ;;		i2_I2C_SetBuffer
 11853 ;;		i2_I2C_SetDataCompleteCallback
 11854 ;; This function is called by:
 11855 ;;		_I2C_Read1ByteRegister
 11856 ;;		_I2C_DO_TX
 11857 ;;		_I2C_DO_RX
 11858 ;;		_I2C_DO_TX_EMPTY
 11859 ;;		_I2C_DO_ADDRESS_NACK
 11860 ;;		_I2C_DO_RX_EMPTY
 11861 ;; This function uses a non-reentrant model
 11862 ;;
 11863                           
 11864                           	psect	text115
 11865   003256                     __ptext115:
 11866                           	callstack 0
 11867   003256                     _rd1RegCompleteHandler:
 11868                           	callstack 11
 11869   003256                     
 11870                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 11871   003256  C00A  F001         	movff	rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11872   00325A  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11873   00325E  0E00               	movlw	0
 11874   003260  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11875   003262  0E01               	movlw	1
 11876   003264  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11877   003266  ECDB  F019         	call	i2_I2C_SetBuffer	;wreg free
 11878   00326A                     
 11879                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11880   00326A  0E00               	movlw	0
 11881   00326C  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11882   00326E  0E00               	movlw	0
 11883   003270  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11884   003272  0E00               	movlw	0
 11885   003274  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11886   003276  0E00               	movlw	0
 11887   003278  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11888   00327A  EC3A  F01A         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11889   00327E                     
 11890                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 11891   00327E  0E02               	movlw	2
 11892   003280  0012               	return		;funcret
 11893   003282                     __end_of_rd1RegCompleteHandler:
 11894                           	callstack 0
 11895                           
 11896 ;; *************** function _wr2RegCompleteHandler *****************
 11897 ;; Defined at:
 11898 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;  ptr             2    9[COMRAM] PTR void 
 11901 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11902 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11903 ;; Auto vars:     Size  Location     Type
 11904 ;;		None
 11905 ;; Return value:  Size  Location     Type
 11906 ;;                  1    wreg      enum E363
 11907 ;; Registers used:
 11908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11909 ;; Tracked objects:
 11910 ;;		On entry : 0/0
 11911 ;;		On exit  : 0/0
 11912 ;;		Unchanged: 0/0
 11913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11918 ;;Total ram usage:        2 bytes
 11919 ;; Hardware stack levels used: 1
 11920 ;; Hardware stack levels required when called: 2
 11921 ;; This function calls:
 11922 ;;		i2_I2C_SetBuffer
 11923 ;;		i2_I2C_SetDataCompleteCallback
 11924 ;; This function is called by:
 11925 ;;		_I2C_Write2ByteRegister
 11926 ;;		_I2C_DO_TX
 11927 ;;		_I2C_DO_RX
 11928 ;;		_I2C_DO_TX_EMPTY
 11929 ;;		_I2C_DO_ADDRESS_NACK
 11930 ;;		_I2C_DO_RX_EMPTY
 11931 ;; This function uses a non-reentrant model
 11932 ;;
 11933                           
 11934                           	psect	text116
 11935   003282                     __ptext116:
 11936                           	callstack 0
 11937   003282                     _wr2RegCompleteHandler:
 11938                           	callstack 11
 11939   003282                     
 11940                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 11941   003282  C00A  F001         	movff	wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 11942   003286  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 11943   00328A  0E00               	movlw	0
 11944   00328C  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 11945   00328E  0E02               	movlw	2
 11946   003290  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 11947   003292  ECDB  F019         	call	i2_I2C_SetBuffer	;wreg free
 11948   003296                     
 11949                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11950   003296  0E00               	movlw	0
 11951   003298  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 11952   00329A  0E00               	movlw	0
 11953   00329C  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 11954   00329E  0E00               	movlw	0
 11955   0032A0  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 11956   0032A2  0E00               	movlw	0
 11957   0032A4  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 11958   0032A6  EC3A  F01A         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 11959   0032AA                     
 11960                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 11961   0032AA  0E04               	movlw	4
 11962   0032AC  0012               	return		;funcret
 11963   0032AE                     __end_of_wr2RegCompleteHandler:
 11964                           	callstack 0
 11965                           
 11966 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
 11967 ;; Defined at:
 11968 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 11969 ;; Parameters:    Size  Location     Type
 11970 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 11971 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11972 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11973 ;;  ptr             2    7[COMRAM] PTR void 
 11974 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11975 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;		None
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  1    wreg      void 
 11980 ;; Registers used:
 11981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/0
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11990 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11991 ;;Total ram usage:        4 bytes
 11992 ;; Hardware stack levels used: 1
 11993 ;; Hardware stack levels required when called: 1
 11994 ;; This function calls:
 11995 ;;		i2_I2C_SetCallback
 11996 ;; This function is called by:
 11997 ;;		_rd1RegCompleteHandler
 11998 ;;		_rd2RegCompleteHandler
 11999 ;;		_wr1RegCompleteHandler
 12000 ;;		_wr2RegCompleteHandler
 12001 ;;		_rdBlkRegCompleteHandler
 12002 ;; This function uses a non-reentrant model
 12003 ;;
 12004                           
 12005                           	psect	text117
 12006   003474                     __ptext117:
 12007                           	callstack 0
 12008   003474                     i2_I2C_SetDataCompleteCallback:
 12009                           	callstack 11
 12010   003474                     
 12011                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 12012   003474  C006  F001         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
 12013   003478  C007  F002         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
 12014   00347C  C008  F003         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
 12015   003480  C009  F004         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
 12016   003484  0E00               	movlw	0
 12017   003486  ECE3  F015         	call	i2_I2C_SetCallback
 12018   00348A  0012               	return		;funcret
 12019   00348C                     __end_ofi2_I2C_SetDataCompleteCallback:
 12020                           	callstack 0
 12021                           
 12022 ;; *************** function i2_I2C_SetCallback *****************
 12023 ;; Defined at:
 12024 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;  idx             1    wreg     enum E3152
 12027 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 12028 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12029 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12030 ;;  ptr             2    2[COMRAM] PTR void 
 12031 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12032 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12033 ;; Auto vars:     Size  Location     Type
 12034 ;;  idx             1    4[COMRAM] enum E3152
 12035 ;; Return value:  Size  Location     Type
 12036 ;;                  1    wreg      void 
 12037 ;; Registers used:
 12038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12039 ;; Tracked objects:
 12040 ;;		On entry : 0/0
 12041 ;;		On exit  : 0/0
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12047 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12048 ;;Total ram usage:        5 bytes
 12049 ;; Hardware stack levels used: 1
 12050 ;; This function calls:
 12051 ;;		Nothing
 12052 ;; This function is called by:
 12053 ;;		i2_I2C_SetDataCompleteCallback
 12054 ;; This function uses a non-reentrant model
 12055 ;;
 12056                           
 12057                           	psect	text118
 12058   002BC6                     __ptext118:
 12059                           	callstack 0
 12060   002BC6                     i2_I2C_SetCallback:
 12061                           	callstack 11
 12062                           
 12063                           ;incstack = 0
 12064                           ;i2I2C_SetCallback@idx stored from wreg
 12065   002BC6  6E05               	movwf	i2I2C_SetCallback@idx^0,c
 12066   002BC8                     
 12067                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
 12068   002BC8  5001               	movf	i2I2C_SetCallback@cb^0,w,c
 12069   002BCA  1002               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
 12070   002BCC  B4D8               	btfsc	status,2,c
 12071   002BCE  EFEB  F015         	goto	i2u366_41
 12072   002BD2  EFED  F015         	goto	i2u366_40
 12073   002BD6                     i2u366_41:
 12074   002BD6  EF03  F016         	goto	i2l6097
 12075   002BDA                     i2u366_40:
 12076   002BDA                     
 12077                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
 12078   002BDA  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 12079   002BDC  0D02               	mullw	2
 12080   002BDE  50F3               	movf	243,w,c
 12081   002BE0  0F60               	addlw	low _I2C_Status
 12082   002BE2  6ED9               	movwf	fsr2l,c
 12083   002BE4  6ADA               	clrf	fsr2h,c
 12084   002BE6  C001  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
 12085   002BEA  C002  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
 12086                           
 12087                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
 12088   002BEE  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 12089   002BF0  0D02               	mullw	2
 12090   002BF2  50F3               	movf	243,w,c
 12091   002BF4  0F6C               	addlw	low (_I2C_Status+12)
 12092   002BF6  6ED9               	movwf	fsr2l,c
 12093   002BF8  6ADA               	clrf	fsr2h,c
 12094   002BFA  C003  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
 12095   002BFE  C004  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
 12096                           
 12097                           ;mcc_generated_files/i2c_master.c: 310:     }
 12098   002C02  EF15  F016         	goto	i2l550
 12099   002C06                     i2l6097:
 12100                           
 12101                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 12102   002C06  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 12103   002C08  0D02               	mullw	2
 12104   002C0A  50F3               	movf	243,w,c
 12105   002C0C  0F60               	addlw	low _I2C_Status
 12106   002C0E  6ED9               	movwf	fsr2l,c
 12107   002C10  6ADA               	clrf	fsr2h,c
 12108   002C12  0E10               	movlw	low _I2C_CallbackReturnStop
 12109   002C14  6EDE               	movwf	postinc2,c
 12110   002C16  0E36               	movlw	high _I2C_CallbackReturnStop
 12111   002C18  6EDD               	movwf	postdec2,c
 12112                           
 12113                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 12114   002C1A  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 12115   002C1C  0D02               	mullw	2
 12116   002C1E  50F3               	movf	243,w,c
 12117   002C20  0F6C               	addlw	low (_I2C_Status+12)
 12118   002C22  6ED9               	movwf	fsr2l,c
 12119   002C24  6ADA               	clrf	fsr2h,c
 12120   002C26  6ADE               	clrf	postinc2,c
 12121   002C28  6ADD               	clrf	postdec2,c
 12122   002C2A                     i2l550:
 12123   002C2A  0012               	return		;funcret
 12124   002C2C                     __end_ofi2_I2C_SetCallback:
 12125                           	callstack 0
 12126                           
 12127 ;; *************** function i2_I2C_SetBuffer *****************
 12128 ;; Defined at:
 12129 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 12130 ;; Parameters:    Size  Location     Type
 12131 ;;  buffer          2    0[COMRAM] PTR void 
 12132 ;;		 -> I2C_Read1ByteRegister@returnValue$data(3), I2C_Read2ByteRegister@returnValue$data(3), I2C_Write1ByteRegister@dat
      +a$data(3), I2C_Write2ByteRegister@data$data(3), 
 12133 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock$data(3), I2C_Write2ByteRegister@reg(1), 
 12134 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
 12135 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
 12136 ;;  bufferSize      2    2[COMRAM] unsigned int 
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;		None
 12139 ;; Return value:  Size  Location     Type
 12140 ;;                  1    wreg      void 
 12141 ;; Registers used:
 12142 ;;		wreg, status,2, status,0
 12143 ;; Tracked objects:
 12144 ;;		On entry : 0/0
 12145 ;;		On exit  : 0/0
 12146 ;;		Unchanged: 0/0
 12147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12148 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12152 ;;Total ram usage:        4 bytes
 12153 ;; Hardware stack levels used: 1
 12154 ;; This function calls:
 12155 ;;		Nothing
 12156 ;; This function is called by:
 12157 ;;		_rd1RegCompleteHandler
 12158 ;;		_rd2RegCompleteHandler
 12159 ;;		_wr1RegCompleteHandler
 12160 ;;		_wr2RegCompleteHandler
 12161 ;;		_rdBlkRegCompleteHandler
 12162 ;; This function uses a non-reentrant model
 12163 ;;
 12164                           
 12165                           	psect	text119
 12166   0033B6                     __ptext119:
 12167                           	callstack 0
 12168   0033B6                     i2_I2C_SetBuffer:
 12169                           	callstack 12
 12170   0033B6                     
 12171                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
 12172   0033B6  0100               	movlb	0	; () banked
 12173   0033B8  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
 12174   0033BA  EFE1  F019         	goto	i2u374_41
 12175   0033BE  EFE3  F019         	goto	i2u374_40
 12176   0033C2                     i2u374_41:
 12177   0033C2  EFEC  F019         	goto	i2l527
 12178   0033C6                     i2u374_40:
 12179   0033C6                     
 12180                           ; BSR set to: 0
 12181                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
 12182   0033C6  C001  F07D         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
 12183   0033CA  C002  F07E         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
 12184   0033CE                     
 12185                           ; BSR set to: 0
 12186                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
 12187   0033CE  C003  F07F         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
 12188   0033D2  C004  F080         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 12189   0033D6                     
 12190                           ; BSR set to: 0
 12191                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
 12192   0033D6  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
 12193   0033D8                     i2l527:
 12194                           
 12195                           ; BSR set to: 0
 12196   0033D8  0012               	return		;funcret
 12197   0033DA                     __end_ofi2_I2C_SetBuffer:
 12198                           	callstack 0
 12199                           
 12200 ;; *************** function _I2C_MasterStop *****************
 12201 ;; Defined at:
 12202 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;		None
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  1    wreg      void 
 12209 ;; Registers used:
 12210 ;;		None
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12220 ;;Total ram usage:        0 bytes
 12221 ;; Hardware stack levels used: 1
 12222 ;; This function calls:
 12223 ;;		Nothing
 12224 ;; This function is called by:
 12225 ;;		_I2C_DO_SEND_STOP
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           	psect	text120
 12230   003614                     __ptext120:
 12231                           	callstack 0
 12232   003614                     _I2C_MasterStop:
 12233                           	callstack 12
 12234   003614                     
 12235                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 12236   003614  84C5               	bsf	197,2,c	;volatile
 12237   003616  0012               	return		;funcret
 12238   003618                     __end_of_I2C_MasterStop:
 12239                           	callstack 0
 12240                           
 12241 ;; *************** function _I2C_MasterEnableRestart *****************
 12242 ;; Defined at:
 12243 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;		None
 12246 ;; Auto vars:     Size  Location     Type
 12247 ;;		None
 12248 ;; Return value:  Size  Location     Type
 12249 ;;                  1    wreg      void 
 12250 ;; Registers used:
 12251 ;;		None
 12252 ;; Tracked objects:
 12253 ;;		On entry : 0/0
 12254 ;;		On exit  : 0/0
 12255 ;;		Unchanged: 0/0
 12256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12261 ;;Total ram usage:        0 bytes
 12262 ;; Hardware stack levels used: 1
 12263 ;; This function calls:
 12264 ;;		Nothing
 12265 ;; This function is called by:
 12266 ;;		_I2C_DO_SEND_RESTART_READ
 12267 ;;		_I2C_DO_SEND_RESTART_WRITE
 12268 ;;		_I2C_DO_SEND_RESTART
 12269 ;;		_I2C_DO_RX_EMPTY
 12270 ;; This function uses a non-reentrant model
 12271 ;;
 12272                           
 12273                           	psect	text121
 12274   003618                     __ptext121:
 12275                           	callstack 0
 12276   003618                     _I2C_MasterEnableRestart:
 12277                           	callstack 12
 12278   003618                     
 12279                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 12280   003618  82C5               	bsf	197,1,c	;volatile
 12281   00361A  0012               	return		;funcret
 12282   00361C                     __end_of_I2C_MasterEnableRestart:
 12283                           	callstack 0
 12284                           
 12285                           	psect	text122
 12286   000000                     __ptext122:
 12287                           	callstack 0
 12288   000000                     
 12289                           	psect	rparam
 12290   000000                     
 12291                           	psect	temp
 12292   000041                     btemp:
 12293                           	callstack 0
 12294   000041                     	ds	1
 12295   000000                     int$flags	set	btemp
 12296   000000                     wtemp8	set	btemp+1
 12297   000000                     ttemp5	set	btemp+1
 12298   000000                     ttemp6	set	btemp+4
 12299   000000                     ttemp7	set	btemp+8
 12300                           
 12301                           	psect	config
 12302                           
 12303                           ; Padding undefined space
 12304   300000                     	org	3145728
 12305   300000  FF                 	db	255
 12306                           
 12307                           ;Config register CONFIG1H @ 0x300001
 12308                           ;	Oscillator Selection bits
 12309                           ;	FOSC = HS, HS oscillator
 12310                           ;	Fail-Safe Clock Monitor Enable bit
 12311                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12312                           ;	Internal/External Oscillator Switchover bit
 12313                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12314   300001                     	org	3145729
 12315   300001  02                 	db	2
 12316                           
 12317                           ;Config register CONFIG2L @ 0x300002
 12318                           ;	Power-up Timer Enable bit
 12319                           ;	PWRTEN = OFF, PWRT disabled
 12320                           ;	Brown-out Reset Enable bits
 12321                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12322                           ;	Brown Out Reset Voltage bits
 12323                           ;	BORV = 18, VBOR set to 1.8 V nominal
 12324   300002                     	org	3145730
 12325   300002  1F                 	db	31
 12326                           
 12327                           ;Config register CONFIG2H @ 0x300003
 12328                           ;	Watchdog Timer Enable bit
 12329                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 12330                           ;	Watchdog Timer Postscale Select bits
 12331                           ;	WDTPS = 32768, 1:32768
 12332   300003                     	org	3145731
 12333   300003  1E                 	db	30
 12334                           
 12335                           ; Padding undefined space
 12336   300004                     	org	3145732
 12337   300004  FF                 	db	255
 12338                           
 12339                           ;Config register CONFIG3H @ 0x300005
 12340                           ;	CCP2 MUX bit
 12341                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 12342                           ;	PORTB A/D Enable bit
 12343                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 12344                           ;	Low-Power Timer1 Oscillator Enable bit
 12345                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12346                           ;	HFINTOSC Fast Start-up
 12347                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 12348                           ;	MCLR Pin Enable bit
 12349                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12350   300005                     	org	3145733
 12351   300005  8B                 	db	139
 12352                           
 12353                           ;Config register CONFIG4L @ 0x300006
 12354                           ;	Stack Full/Underflow Reset Enable bit
 12355                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12356                           ;	Single-Supply ICSP Enable bit
 12357                           ;	LVP = ON, Single-Supply ICSP enabled
 12358                           ;	Extended Instruction Set Enable bit
 12359                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12360                           ;	Background Debugger Enable bit
 12361                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 12362   300006                     	org	3145734
 12363   300006  85                 	db	133
 12364                           
 12365                           ; Padding undefined space
 12366   300007                     	org	3145735
 12367   300007  FF                 	db	255
 12368                           
 12369                           ;Config register CONFIG5L @ 0x300008
 12370                           ;	Code Protection Block 0
 12371                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12372                           ;	Code Protection Block 1
 12373                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12374                           ;	Code Protection Block 2
 12375                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12376                           ;	Code Protection Block 3
 12377                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12378   300008                     	org	3145736
 12379   300008  0F                 	db	15
 12380                           
 12381                           ;Config register CONFIG5H @ 0x300009
 12382                           ;	Boot Block Code Protection bit
 12383                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12384                           ;	Data EEPROM Code Protection bit
 12385                           ;	CPD = OFF, Data EEPROM not code-protected
 12386   300009                     	org	3145737
 12387   300009  C0                 	db	192
 12388                           
 12389                           ;Config register CONFIG6L @ 0x30000A
 12390                           ;	Write Protection Block 0
 12391                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12392                           ;	Write Protection Block 1
 12393                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12394                           ;	Write Protection Block 2
 12395                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12396                           ;	Write Protection Block 3
 12397                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 12398   30000A                     	org	3145738
 12399   30000A  0F                 	db	15
 12400                           
 12401                           ;Config register CONFIG6H @ 0x30000B
 12402                           ;	Configuration Register Write Protection bit
 12403                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12404                           ;	Boot Block Write Protection bit
 12405                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12406                           ;	Data EEPROM Write Protection bit
 12407                           ;	WRTD = OFF, Data EEPROM not write-protected
 12408   30000B                     	org	3145739
 12409   30000B  E0                 	db	224
 12410                           
 12411                           ;Config register CONFIG7L @ 0x30000C
 12412                           ;	Table Read Protection Block 0
 12413                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12414                           ;	Table Read Protection Block 1
 12415                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12416                           ;	Table Read Protection Block 2
 12417                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12418                           ;	Table Read Protection Block 3
 12419                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12420   30000C                     	org	3145740
 12421   30000C  0F                 	db	15
 12422                           
 12423                           ;Config register CONFIG7H @ 0x30000D
 12424                           ;	Boot Block Table Read Protection bit
 12425                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12426   30000D                     	org	3145741
 12427   30000D  40                 	db	64
 12428                           tosu	equ	0xFFF
 12429                           tosh	equ	0xFFE
 12430                           tosl	equ	0xFFD
 12431                           stkptr	equ	0xFFC
 12432                           pclatu	equ	0xFFB
 12433                           pclath	equ	0xFFA
 12434                           pcl	equ	0xFF9
 12435                           tblptru	equ	0xFF8
 12436                           tblptrh	equ	0xFF7
 12437                           tblptrl	equ	0xFF6
 12438                           tablat	equ	0xFF5
 12439                           prodh	equ	0xFF4
 12440                           prodl	equ	0xFF3
 12441                           indf0	equ	0xFEF
 12442                           postinc0	equ	0xFEE
 12443                           postdec0	equ	0xFED
 12444                           preinc0	equ	0xFEC
 12445                           plusw0	equ	0xFEB
 12446                           fsr0h	equ	0xFEA
 12447                           fsr0l	equ	0xFE9
 12448                           wreg	equ	0xFE8
 12449                           indf1	equ	0xFE7
 12450                           postinc1	equ	0xFE6
 12451                           postdec1	equ	0xFE5
 12452                           preinc1	equ	0xFE4
 12453                           plusw1	equ	0xFE3
 12454                           fsr1h	equ	0xFE2
 12455                           fsr1l	equ	0xFE1
 12456                           bsr	equ	0xFE0
 12457                           indf2	equ	0xFDF
 12458                           postinc2	equ	0xFDE
 12459                           postdec2	equ	0xFDD
 12460                           preinc2	equ	0xFDC
 12461                           plusw2	equ	0xFDB
 12462                           fsr2h	equ	0xFDA
 12463                           fsr2l	equ	0xFD9
 12464                           status	equ	0xFD8

Data Sizes:
    Strings     133
    Constant    32
    Data        45
    BSS         131
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      64
    BANK0           160     38     160
    BANK1           256     36      72
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), lightSwitch(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), lightSwitch(), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SendString@str	PTR unsigned char  size(2) Largest target is 10
		 -> datestr(BANK0[10]), STR_1(CODE[7]), STR_2(CODE[7]), timestr(BANK0[10]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$3543	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_RX$3543$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX$3548	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$3555$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$3537	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX$3537$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX$3542	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$3549	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_DO_TX_EMPTY$3549$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$3554	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    i2c_fsmStateTable	const PTR FTN()enum E3134[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_MasterFsm$3536	const PTR FTN()enum E3134 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_Status$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_Status$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> bufferBlock$data(COMRAM[3]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[3]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[3]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@data$data(COMRAM[3]), I2C_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), manual_Override(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), manual_Override(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), manual_homelight(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), manual_homelight(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), manual_Doorlight(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), manual_Doorlight(), 

    LAT_Reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllllll[1]), LATB(ABS[1]), LATC(ABS[1]), LATD(BITBIGSFRlllllll[1]), 
		 -> LATE(BITBIGSFRlllllll[1]), 

    LCD4B_SENDCHAR@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    LCD4B_SENDCMD@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    LCD4B_SENDSTR@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    LCD4B_SENDSTR@str	PTR unsigned char  size(1) Largest target is 10
		 -> datestr(BANK0[10]), LCDtemp(BANK0[4]), timestr(BANK0[10]), 

    LCD4B_SENDSTR@str_old	PTR unsigned char  size(1) Largest target is 10
		 -> datestr(BANK0[10]), LCDtemp(BANK0[4]), timestr(BANK0[10]), 

    LCD4B_SENDSTRPOS@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    LCD4B_SENDSTRPOS@str	PTR unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), STR_5(CODE[7]), STR_6(CODE[7]), 

    LCD4B_SET@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    PINSTART@pinconfig	PTR const struct . size(2) Largest target is 1
		 -> LCD4B_SET@pinptr(BANK1[1]), LCD4B_SET@pinptr_2471(BANK1[1]), 

    PINWRITE@pinconfig	PTR const struct . size(2) Largest target is 1
		 -> LCD4B_SENDCHAR@pinptr(BANK1[1]), LCD4B_SENDCHARPOS@pinptr(COMRAM[1]), LCD4B_SENDCMD@pinptr(BANK1[1]), LCD4B_SET@pinptr(BANK1[1]), 
		 -> LCD4B_SET@pinptr_2471(BANK1[1]), send4bit@pinobj(COMRAM[1]), sendenable@pinEN(BANK1[1]), 

    PORT_Reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllllh[1]), PORTB(BITBIGSFRlllllh[1]), PORTC(BITBIGSFRlllllh[1]), PORTD(BITBIGSFRlllllh[1]), 
		 -> PORTE(BITBIGSFRlllllh[1]), 

    PrintDateUART@str	PTR unsigned char  size(1) Largest target is 10
		 -> datestr(BANK0[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 51
		 -> STR_10(CODE[51]), STR_11(CODE[44]), 

    PrintTimeUART@str	PTR unsigned char  size(1) Largest target is 10
		 -> timestr(BANK0[10]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    S189$data	PTR unsigned char  size(2) Largest target is 0

    S3050$buffer	PTR unsigned char  size(2) Largest target is 0

    S3050$source	PTR const unsigned char  size(2) Largest target is 0

    S927$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S927$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S927$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S927$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    sendenable@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    setcursor4bit@lcd	PTR const struct . size(1) Largest target is 12
		 -> lcd(BANK0[12]), 

    sp__DateArray	PTR unsigned char  size(1) Largest target is 3
		 -> _Date(COMRAM[3]), 

    sp__DatetoString	PTR unsigned char  size(1) Largest target is 10
		 -> datestr(BANK0[10]), 

    sp__memset	PTR void  size(2) Largest target is 0

    sp__TimeArray	PTR unsigned char  size(1) Largest target is 3
		 -> _Time(COMRAM[3]), 

    sp__TimetoString	PTR unsigned char  size(1) Largest target is 10
		 -> timestr(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), STR_9(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 4
		 -> LCDtemp(BANK0[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 10
		 -> datestr(BANK0[10]), LCDtemp(BANK0[4]), STR_1(CODE[7]), STR_2(CODE[7]), 
		 -> timestr(BANK0[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> datestr(BANK0[10]), LCDtemp(BANK0[4]), STR_1(CODE[7]), STR_2(CODE[7]), 
		 -> timestr(BANK0[10]), 

    TRIS_Reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllhll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(BITBIGSFRlllhll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 51
		 -> STR_10(CODE[51]), STR_11(CODE[44]), STR_3(CODE[3]), STR_7(CODE[3]), 
		 -> STR_8(CODE[3]), STR_9(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 51
		 -> STR_10(CODE[51]), STR_11(CODE[44]), STR_3(CODE[3]), STR_7(CODE[3]), 
		 -> STR_8(CODE[3]), STR_9(CODE[4]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 51
		 -> STR_10(CODE[51]), STR_11(CODE[44]), STR_3(CODE[3]), STR_7(CODE[3]), 
		 -> STR_8(CODE[3]), STR_9(CODE[4]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INT2_CallBack->_manual_Doorlight
    _INT1_CallBack->_manual_homelight
    _INT0_CallBack->_manual_Override
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _ADC_Initialize->_ADC_SetInterruptHandler
    _ReadTemp->_I2C_Read1ByteRegister
    _PrintTimeUART->_TimetoString
    _TimeArray->_GetDataAndTime
    _PrintDateUART->_DatetoString
    _EUSART_SendString->_strlen
    _DateArray->_GetDataAndTime
    _GetDataAndTime->_I2C_Read1ByteRegister
    _PINSTART->_PINWRITE
    _LCD4B_SENDCMD->_PINWRITE
    _LCD4B_SENDCHAR->_PINWRITE
    _sendenable->_PINWRITE
    _PINWRITE->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___aldiv
    _vfpfcnvrt->_abs
    _abs->___almod
    _EXTEEPROM_WriteByte->_I2C_Write1ByteRegister
    _I2C_Write1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Write1ByteRegister->_I2C_SetDataCompleteCallback
    _EXTEEPROM_ReadByte->_I2C_Read1ByteRegister
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterWrite->_I2C_MasterOperation

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LCD4B_SENDSTRPOS
    _LCD4B_SET->_LCD4B_SENDCMD
    _PINSTART->_PINWRITE
    _LCD4B_SENDSTRPOS->_setcursor4bit
    _setcursor4bit->_LCD4B_SENDCMD
    _LCD4B_SENDCMD->_sendenable
    _LCD4B_SENDSTR->_LCD4B_SENDCHAR
    _LCD4B_SENDCHAR->_sendenable
    _sendenable->_PINWRITE
    _PINWRITE->_printf

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  273029
                                             34 BANK1      2     2      0
                  _ADC_GetConversion
            _ADC_SetInterruptHandler
                       _DatetoString
                 _EXTEEPROM_ReadByte
                _EXTEEPROM_WriteByte
                     _GetDataAndTime
             _I2C_Write1ByteRegister
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
                     _LCD4B_SENDCHAR
                      _LCD4B_SENDSTR
                   _LCD4B_SENDSTRPOS
                          _LCD4B_SET
                      _PrintDateUART
                      _PrintTimeUART
                           _ReadTemp
                  _SYSTEM_Initialize
                       _TimetoString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6   11217
                                              0 BANK1     20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1207
                     _ADC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     633
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     211
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadTemp                                             2     2      0    7993
                                             12 BANK0      2     2      0
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _PrintTimeUART                                        1     1      0    8759
                                             21 BANK0      1     1      0
                  _EUSART_SendString
                       _TimetoString
 ---------------------------------------------------------------------------------
 (1) _TimetoString                                         2     0      2    7925
                                             19 BANK0      2     0      2
                          _TimeArray
 ---------------------------------------------------------------------------------
 (2) _TimeArray                                            0     0      0    7925
                     _GetDataAndTime
 ---------------------------------------------------------------------------------
 (1) _PrintDateUART                                        1     1      0    8759
                                             21 BANK0      1     1      0
                       _DatetoString
                  _EUSART_SendString
 ---------------------------------------------------------------------------------
 (2) _EUSART_SendString                                    4     2      2     800
                                              4 BANK0      4     2      2
                       _EUSART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DatetoString                                         2     0      2    7925
                                             19 BANK0      2     0      2
                          _DateArray
 ---------------------------------------------------------------------------------
 (3) _DateArray                                            0     0      0    7925
                     _GetDataAndTime
 ---------------------------------------------------------------------------------
 (3) _GetDataAndTime                                       7     0      7    7925
                                             12 BANK0      7     0      7
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _LCD4B_SET                                            8     7      1   58772
                                             24 BANK1      7     6      1
                      _LCD4B_SENDCMD
                           _PINSTART
 ---------------------------------------------------------------------------------
 (2) _PINSTART                                             8     6      2   24186
                                             10 BANK1      8     6      2
                           _PINWRITE
                             _printf
 ---------------------------------------------------------------------------------
 (1) _LCD4B_SENDSTRPOS                                     5     1      4   66152
                                             30 BANK1      4     0      4
                     _LCD4B_SENDCHAR
                      _setcursor4bit
 ---------------------------------------------------------------------------------
 (2) _setcursor4bit                                        6     3      3   34032
                                             24 BANK1      6     3      3
                      _LCD4B_SENDCMD
 ---------------------------------------------------------------------------------
 (2) _LCD4B_SENDCMD                                       10     8      2   32668
                                             14 BANK1     10     8      2
                           _PINWRITE
                         _sendenable
 ---------------------------------------------------------------------------------
 (1) _LCD4B_SENDSTR                                        5     3      2   31706
                                             24 BANK1      4     2      2
                       _DatetoString (ARG)
                     _LCD4B_SENDCHAR
                       _TimetoString (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD4B_SENDCHAR                                      10     8      2   30188
                                             14 BANK1     10     8      2
                           _PINWRITE
                         _sendenable
 ---------------------------------------------------------------------------------
 (3) _sendenable                                           4     3      1   14360
                                             10 BANK1      4     3      1
                           _PINWRITE
 ---------------------------------------------------------------------------------
 (3) _PINWRITE                                             9     6      3   13211
                                             37 BANK0      1     1      0
                                              2 BANK1      8     5      3
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               5     4      1   10013
                                             36 BANK0      1     0      1
                                              0 BANK1      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    9546
                                             30 BANK0      6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    11      5    8387
                                             14 BANK0     16    11      5
                            ___aldiv
                            ___almod
                            ___lldiv
                            ___llmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1639
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     289
                                             10 BANK0      4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     683
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     713
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8    1063
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8    1103
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _EXTEEPROM_WriteByte                                  3     1      2    7984
                                             12 BANK0      3     1      2
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _I2C_Write1ByteRegister                               3     1      2    7531
                                              9 BANK0      3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _EXTEEPROM_ReadByte                                   3     2      1    8111
                                             12 BANK0      3     2      1
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_Read1ByteRegister                                3     2      1    7925
                                              9 BANK0      3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetDataCompleteCallback                          4     0      4    2629
                                              5 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetBuffer                                        4     0      4    1872
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _I2C_SetAddressNackCallback                           4     0      4    2259
                                              5 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetCallback                                      5     1      4    1117
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Open                                             2     2      0     189
                                              2 BANK0      2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (6) _I2C_SetInterruptHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWrite                                      0     0      0      68
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOperation                                  2     2      0      68
                                              0 BANK0      2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Close                                            1     1      0      37
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManagerLow                       5     5      0       0
                                             27 COMRAM     5     5      0
                            _ADC_ISR
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
                        _lightSwitch *
 ---------------------------------------------------------------------------------
 (13) _lightSwitch                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManagerHigh                     10    10      0   24357
                                             17 COMRAM    10    10      0
                                NULL *
                      _I2C_MasterIsr *
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (15) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT2_CallBack                                       0     0      0       0
                                NULL *
       _INT2_DefaultInterruptHandler *
                   _manual_Doorlight *
 ---------------------------------------------------------------------------------
 (17) _manual_Doorlight                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0       0
                                NULL *
       _INT1_DefaultInterruptHandler *
                   _manual_homelight *
 ---------------------------------------------------------------------------------
 (17) _manual_homelight                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT0_CallBack                                       0     0      0       0
                                NULL *
       _INT0_DefaultInterruptHandler *
                    _manual_Override *
 ---------------------------------------------------------------------------------
 (17) _manual_Override                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _I2C_MasterIsr                                       0     0      0   24357
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (16) _I2C_MasterFsm                                       3     3      0   24357
                                             14 COMRAM     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i2_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_TX_EMPTY                                     2     2      0    6066
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_TX                                           2     2      0    6097
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (17) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (18) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_SEND_ADR_WRITE                               0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_SEND_ADR_READ                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterSendTxData                                1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RX                                           2     2      0    6066
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (18) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C_DO_ADDRESS_NACK                                 2     2      0    6066
                                             12 COMRAM     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (18) _wr2RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (18) _wr1RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (18) _rdBlkRegCompleteHandler                             3     1      2    1173
                                              9 COMRAM     3     1      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (18) _rd2RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (18) _rd1RegCompleteHandler                               2     0      2    1142
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (19) i2_I2C_SetDataCompleteCallback                       4     0      4     699
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (20) i2_I2C_SetCallback                                   5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (19) i2_I2C_SetBuffer                                     4     0      4     412
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (18) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (19) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (19) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _I2C_CallbackReturnReset                             2     0      2     325
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_SetInterruptHandler
   _DatetoString
     _DateArray
       _GetDataAndTime
         _I2C_Read1ByteRegister
           _I2C_Close
             _I2C_MasterClearIrq
             _I2C_MasterClose
             _I2C_MasterDisableIrq
           _I2C_MasterWrite
             _I2C_MasterOperation
               _I2C_MasterStart
           _I2C_Open
             _I2C_MasterClearIrq
             _I2C_MasterEnableIrq
             _I2C_MasterOpen
             _I2C_SetInterruptHandler
           _I2C_SetAddressNackCallback
             _I2C_SetCallback
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
   _EXTEEPROM_ReadByte
     _I2C_Read1ByteRegister
   _EXTEEPROM_WriteByte
     _I2C_Write1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _GetDataAndTime
   _I2C_Write1ByteRegister
   _INT0_SetInterruptHandler
   _INT1_SetInterruptHandler
   _INT2_SetInterruptHandler
   _LCD4B_SENDCHAR
     _PINWRITE
       _printf
         _vfprintf
           _vfpfcnvrt
             ___aldiv
             ___almod
             ___lldiv
             ___llmod
             _abs
               ___almod (ARG)
             _fputc
               _putch
     _sendenable
       _PINWRITE
   _LCD4B_SENDSTR
     _DatetoString (ARG)
     _LCD4B_SENDCHAR (ARG)
     _TimetoString (ARG)
       _TimeArray
         _GetDataAndTime
     _strlen (ARG)
   _LCD4B_SENDSTRPOS
     _LCD4B_SENDCHAR
     _setcursor4bit
       _LCD4B_SENDCMD
         _PINWRITE
         _sendenable
   _LCD4B_SET
     _LCD4B_SENDCMD
     _PINSTART
       _PINWRITE
       _printf
   _PrintDateUART
     _DatetoString
     _EUSART_SendString
       _EUSART_Write
       _strlen
   _PrintTimeUART
     _EUSART_SendString
     _TimetoString
   _ReadTemp
     _I2C_Read1ByteRegister
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _TimetoString
   _sprintf
     _vfprintf

 _INTERRUPT_InterruptManagerLow (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
     _lightSwitch *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
             i2_I2C_SetCallback
         _rd2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i2_I2C_MasterClearIrq *
   _INT0_ISR *
     _INT0_CallBack
       NULL(Fake) *
       _INT0_DefaultInterruptHandler *
       _manual_Override *
   _INT1_ISR *
     _INT1_CallBack
       NULL(Fake) *
       _INT1_DefaultInterruptHandler *
       _manual_homelight *
   _INT2_ISR *
     _INT2_CallBack
       NULL(Fake) *
       _INT2_DefaultInterruptHandler *
       _manual_Doorlight *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     24      48       7       28.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     26      A0       5      100.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      40       1       68.1%
BITBIGSFRlh         1C      0       0      38        0.0%
BITBIGSFRllllll     1C      0       0      49        0.0%
BITBIGSFRllhhhl      7      0       0      42        0.0%
BITBIGSFRllhhhh      7      0       0      41        0.0%
BITBIGSFRhh          7      0       0      36        0.0%
BITBIGSFRllhhhh      6      0       0      40        0.0%
BITBIGSFRlllllh      4      0       0      47        0.0%
BITBIGSFRlllhh       4      0       0      45        0.0%
BITBIGSFRlllhll      4      0       0      46        0.0%
BITBIGSFRllhlh       3      0       0      43        0.0%
BITBIGSFRllhhhh      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      37        0.0%
BITBIGSFRllllll      1      0       0      48        0.0%
BITBIGSFRllhlll      1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     128      50        0.0%
DATA                 0      0     128       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 03 14:41:02 2024

                       ??_I2C_DO_SEND_ADR_READ 0001                        __end_of_manual_Override 276E  
                                            l9 34A0                        ??_I2C_DO_SEND_ADR_WRITE 0002  
                                  _SSPSTATbits 0FC7                                             l12 3442  
                                           l41 30C2                                             l51 2C8C  
                                           l60 2E6E                                             l37 2A24  
                                           l45 3094                                             l54 3348  
                                           l70 3412                                             l63 2EB4  
                                           l57 3322                                             _dt 0021  
                                           bsr 0FE0                         __end_of_GetDataAndTime 2A26  
                         __end_of_DatetoString 2EB6                             _EXTEEPROM_ReadByte 342C  
                        ??_I2C_DO_SEND_RESTART 0001                                            l105 27EA  
                                          l202 3524                                            l123 28DA  
                                          l235 3066                                            l500 34B4  
                                          l520 357C                                            l504 2662  
                                          l514 2F3C                                            l530 345A  
                                          l370 3418                                            l346 2EF8  
                                          l508 30F0                                            l373 342A  
                                          l550 2A8E                                            l711 35EA  
                                          l527 33B4                                            l391 3560  
                                          l199 336C                                            l720 35FA  
                                          l536 3472                                            l545 3574  
                                          l385 3556                                            l810 32FC  
                                          l388 354C                                            l717 35F2  
                                          l901 2FFC                                            l672 35F6  
                                          l825 2F9C                                            l761 34F6  
                                          l690 35EE                                            l828 2FBE  
                                          l669 33FA                                            l838 356A  
                                          l882 3538                                            l869 3542  
                                          l895 352E                     ??_INT0_SetInterruptHandler 00DA  
                                          _abs 2FFE                                            _lcd 00CC  
                              __end_of_ADC_ISR 3120                         fp__I2C_DO_RX_NACK_STOP 0000  
               ?_EUSART_SetFramingErrorHandler 00D8                __end_of_ADC_SetInterruptHandler 356C  
                               _LCD4B_SENDCHAR 1AEC                                ??_setcursor4bit 011B  
                                          tosl 0FFD                                            wreg 0FE8  
                                _INT0_CallBack 31D2                   ?_ADC_DefaultInterruptHandler 0001  
                 ??_I2C_SetAddressNackCallback 00E1                            ?_EXTEEPROM_ReadByte 00E4  
                       _I2C_Write1ByteRegister 2868                       ??_I2C_CallbackReturnStop 000C  
                                 _I2C_DO_RESET 34F8                                  _INT1_CallBack 31A6  
                               fp__lightSwitch 0000                                           l1121 1784  
                                         l1106 1DF4                                           l1203 2474  
                                         ?_abs 00E2                                           l1140 1AEA  
                                         l1132 1962                        ??_rd2RegCompleteHandler 000C  
                                         l2005 2D96                                           l1125 1818  
                                         l1118 1F3A                                           l1151 1C8E  
                                         l1143 1B06                                           l1240 251A  
                                         l1233 250A                                           l1129 1946  
                                         l1166 2D42                                           l1174 2B5E  
                                         l1193 294C                                           l1285 2160  
                                         l1633 26EC                                           l1298 224E  
                                         l1626 26DC                                           l6011 25DE  
                                         l6021 25F0                                           l6013 25E0  
                                         l6005 25C6                                           l6101 2778  
                                         l6031 2612                                           l6023 25F2  
                                         l6015 25E2                                           l6007 25CC  
                                         l6111 27D2                                           l6103 2790  
                                         l6041 263A                                           l6033 261A  
                                         l6025 25FA                                           l6017 25E4  
                                         l6009 25DA                                           l6113 27E6  
                                         l6105 27A4                                           l1962 2DE2  
                                         l1890 2E28                                           l6051 265A  
                                         l6043 2642                                           l6035 2622  
                                         l6027 2602                                           l6019 25E8  
                                         l6107 27B8                                           l1939 1562  
                                         l6045 264E                                           l6037 262A  
                                         l6029 260A                                           l6053 2660  
                                         l6061 33A2                                           l6109 27CE  
                                         l1981 23CE                                           l6301 3076  
                                         l1966 301A                                           l6047 2652  
                                         l6039 2632                                           l6063 33AA  
                                         l6311 2D44                                           l6303 3088  
                                         l6081 30E8                                           l6073 30C4  
                                         l6049 2656                                           l6065 33B2  
                                         l6057 3444                                           l1969 3032  
                                         l6313 2D50                                           l6161 29BC  
                                         l6321 3418                                           l6305 308C  
                                         l6083 30EC                                           l6075 30CA  
                                         l6067 345C                                           l6059 3392  
                                         l6315 2D56                                           l6163 2A10  
                                         l6323 3426                                           l6307 3090  
                                         l1996 3390                                           l6077 30D8  
                                         l6069 3576                                           l6317 2D88  
                                         l6165 2A12                                           l6325 354E  
                                         l6079 30DC                                           l1999 361C  
                                         l6327 3544                                           l6521 2884  
                                         l9001 2CEE                                           l6329 3558  
                                         l6601 351C                                           l6099 2772  
                                         l6523 2898                                           l9011 2D2C  
                                         l9003 2CF2                                           l6291 30B6  
                                         l6531 2C2C                                           l6611 2FD6  
                                         l6603 2FC0                                           l6525 28AC  
                                         l6517 286C                                           l9013 2D30  
                                         l9005 2D06                                           l6293 30BA  
                                         l6541 2E74                                           l6533 2C44  
                                         l6461 3562                                           l6621 32D8  
                                         l6613 2FE6                                           l6605 2FC4  
                                         l5823 35EC                                           l6527 28C2  
                                         l6519 286C                                           l9015 2D42  
                                         l9007 2D16                                           l6295 30BE  
                                         l6287 3096                                           l6551 2E9A  
                                         l6543 2E7E                                           l6535 2C6A  
                                         l6623 32EC                                           l6631 2ED8  
                                         l6463 353A                                           l6615 2FE8  
                                         l6607 2FD2                                           l6529 28C6  
                                         l9009 2D1A                                           l6289 30A4  
                                         l6553 2E9E                                           l6545 2E86  
                                         l6537 2C70                                           l6625 32EE  
                                         l6633 2EE6                                           l6465 3530  
                                         l6617 2FEA                                           l6609 2FD4  
                                         l9041 15A0                                           l6803 2F84  
                                         l6555 2EA6                                           l6547 2E8A  
                                         l6539 2E70                                           l6299 3068  
                                         l6571 2E44                                           l6563 2E2A  
                                         l6635 2EF4                                           l6627 2EB6  
                                         l6467 3526                                           l6619 2FFA  
                                         l9051 1608                                           l9043 15B0  
                                         l6805 2F98                                           l8501 2168  
                                         l6557 2EAE                                           l6549 2E92  
                                         l6581 2E68                                           l6573 2E4C  
                                         l6565 2E2E                                           l6629 2ECA  
                                         l9061 1648                                           l9053 1624  
                                         l9045 15CC                                           l6807 2F9A  
                                         l5951 356C                                           l8511 21A8  
                                         l8503 2176                                           l6559 2EB2  
                                         l6583 2E6C                                           l6575 2E54  
                                         l6567 2E38                                           l6591 34B2  
                                         l9071 1696                                           l9063 1652  
                                         l9055 162E                                           l9047 15DC  
                                         l9039 1564                                           l6809 2FAA  
                                         l5953 35F8                                           l6753 3490  
                                         l8521 21FE                                           l8513 21BE  
                                         l8505 2186                                           l8441 24B2  
                                         l8433 2476                                           l8601 11FE  
                                         l6761 3324                                           l6577 2E58  
                                         l6569 2E40                                           l6593 3034  
                                         l9081 16FA                                           l9073 16AE  
                                         l9065 1666                                           l9057 1640  
                                         l9049 15F8                                           l5971 2F04  
                                         l5963 35E8                                           l5955 33DA  
                                         l6755 3430                                           l8531 223E  
                                         l8523 220E                                           l8515 21C6  
                                         l8507 218A                                           l8451 24FA  
                                         l8443 24C0                                           l8435 2488  
                                         l8611 1290                                           l8603 1228  
                                         l6763 332C                                           l6579 2E60  
                                         l6771 3316                                           l6587 34EA  
                                         l6595 3050                                           l9091 174C  
                                         l9083 170C                                           l9075 16BC  
                                         l9067 1676                                           l9059 1644  
                                         l5965 35F0                                           l5981 2F30  
                                         l5973 2F12                                           l5957 33E8  
                                         l6757 3440                                           l8461 2078  
                                         l8525 2218                                           l8517 21D2  
                                         l8509 2198                                           l8453 2504  
                                         l8445 24CA                                           l8437 249E  
                                         l8541 2690                                           l8621 130C  
                                         l8613 12C4                                           l8605 1232  
                                         l8701 2DD8                                           l9421 1DBA  
                                         l6765 333C                                           l6773 3400  
                                         l6589 34A2                                           l6597 305A  
                                         l6781 334A                                           l9085 1722  
                                         l9077 16D2                                           l9069 1688  
                                         l5967 35F4                                           l5983 2F34  
                                         l5975 2F14                                           l5959 33F8  
                                         l5991 2A3E                                           l8471 20AE  
                                         l8463 207C                                           l8455 2054  
                                         l8519 21E0                                           l8527 221E  
                                         l8447 24E8                                           l8439 24A6  
                                         l8543 269E                                           l8535 2664  
                                         l8551 2314                                           l9431 1400  
                                         l8631 1380                                           l8623 1322  
                                         l8615 12DC                                           l8607 1236  
                                         l8711 1DF6                                           l9423 244C  
                                         l6767 32FE                                           l6775 3400  
                                         l6599 3064                                           l6791 335E  
                                         l6783 334E                                           l9087 1730  
                                         l9079 16E4                          __end_of_LCD4B_SENDCMD 1AEC  
                                         l5977 2F18                                           l5985 2F38  
                                         l5969 2EFE                                           l5993 2A6A  
                                         l8481 20F0                                           l8473 20C4  
                                         l8465 208A                                           l8457 205A  
                                         l8529 222E                                           l8449 24F8  
                                         l8545 26BC                                           l8537 267C  
                                         l8561 2398                                           l8553 2328  
                                         l9433 151E                                           l8641 1424  
                                         l8633 13B8                                           l8625 1344  
                                         l8617 12EC                                           l8609 124A  
                                         l8705 336E                                           l9425 1F20  
                                         l8721 1E50                                           l8713 1DFC  
                                         l8801 1AC0                                           l6769 3306  
                                         l6777 3410                                           l6793 3362  
                                         l6785 3352                                           l9089 1744  
                                         l5979 2F28                                           l8483 210E  
                                         l8475 20CC                                           l8491 2130  
                                         l8467 209A                                           l8459 2068  
                                         l8547 26CC                                           l8539 2684  
                                         l8555 233A                                           l8651 14C2  
                                         l8643 1428                                           l8619 12FC  
                                         l8627 1348                                           l9427 112E  
                                         l8571 10CE                                           l8707 3376  
                                         l8723 1EAC                                           l8731 1F36  
                                         l8715 1E2C                                           l8811 1AFE  
                                         l8803 1ADC                                           l6795 3366  
                                         l6787 3356                                           l5989 2A2A  
                                         l8493 2140                                           l8485 211E  
                                         l8477 20D8                                           l8469 209E  
                                         l8549 26D6                                           l8565 2FFE  
                                         l8557 2344                                           l8653 14E4  
                                         l8645 1462                                           l8637 13EC  
                                         l8661 152C                                           l9429 1212  
                                         l8629 135E                                           l8581 1104  
                                         l8573 10D6                                           l8725 1F02  
                                         l8717 1E3E                                           l8741 28DC  
                                         l8821 1B50                                           l8813 1B0A  
                                         l8805 1AE8                                           l8901 2430  
                                         l6797 3368                                           l6789 335A  
                                         l8495 2150                                           l8487 2120  
                                         l8479 20E6                                           l8567 300E  
                                         l8559 2362                                           l8655 14E8  
                                         l8647 1496                                           l8639 1416  
                                         l8583 110A                                           l8591 1154  
                                         l8575 10E2                                           l8719 1E44  
                                         l8751 291C                                           l8743 28E0  
                                         l8831 1BC4                                           l8815 1B3C  
                                         l6799 336A                                           l8489 212A  
                                         l8649 14AE                                           l8593 1172  
                                         l8585 1112                                           l8577 10E6  
                                         l8665 153A                                           l8569 10A8  
                                         l8729 1F0C                                           l8753 292C  
                                         l8745 28FA                                           l8833 1BCA  
                                         l8817 1B3E                                           l8809 1AEC  
                                         l8761 1948                                           l8905 2438  
                                         l8921 17BA                                           l8499 2162  
                                         l8659 14FE                                           l8595 1194  
                                         l8579 10F0                                           l8755 2934  
                                         l8747 2918                                           l8739 28DC  
                                         l8851 1C80                                           l8843 1BF8  
                                         l8835 1BE6                                           l8827 1B5A  
                                         l8819 1B40                                           l8771 199C  
                                         l8763 195A                                           l8907 2472  
                                         l8931 1802                                           l8923 17BC  
                                         l8915 176E                                           l8597 11CA  
                                         l8589 111A                                           l8757 294A  
                                         l8749 291A                                           l8845 1C32  
                                         l8837 1BEE                                           l8829 1B94  
                                         l8853 1C8C                                           l8781 19F0  
                                         l8773 19AC                                           l8765 1966  
                                         l8861 1CB4                                           l8941 1856  
                                         l8933 180E                                           l8925 17BE  
                                         l8917 1780                                           l8695 2D98  
                                         l8847 1C5E                                           l8783 1A20  
                                         l8767 1998                                           l8871 1D8A  
                                         l8863 1CC6                                           l8951 1888  
                                         l8943 1858                                           l8927 17CA  
                                         l8919 1788                                           l8697 2DA0  
                                         l8849 1C64                                           l8785 1A26  
                                         l8769 199A                                           l8865 1CCA  
                                         l8857 1C90                                           l8961 18F2  
                                         l8953 189A                                           l8945 185A  
                                         l8929 17EA                                           l8699 2DBA  
                                         l8795 1A54                                           l8787 1A42  
                                         l8779 19B6                                           l8891 23D0  
                                         l8867 1CD8                                           l8875 1D8E  
                                         l8859 1C90                                           l8971 1938  
                                         l8963 1900                                           l8955 18A8  
                                         l8947 1866                                           l8939 181C  
                                         l8797 1A8E                                           l8789 1A4A  
                                         l8893 23D8                                           l8869 1D34  
                                         l8877 1DD0                                           l8965 190E  
                                         l8957 18C8                                           l8949 186C  
                                         l8981 2E02                                           l8799 1ABA  
                                         l8895 23EE                                           l8991 2B10  
                                         l8879 1DF0                                           l8967 191C  
                                         l8959 18E4                                           l8983 2E1C  
                                         l8975 2DE4                                           STR_1 108E  
                                         STR_2 1095                                           l8897 2404  
                                         l8889 23D0                                           l8993 2B24  
                                         l8969 192A                                           l8977 2DF2  
                                         STR_3 10A3                                           STR_4 1087  
                                         l8899 241A                                           l8995 2B3C  
                                         l8987 2AFA                                           l8979 2DFA  
                                         STR_5 1095                                           STR_6 1080  
                                         l8997 2B40                                           l8989 2B0C  
                                         STR_7 10A0                                           l8999 2CEE  
                                         STR_9 109C                                           _LATA 0F89  
                                         _LATB 0F8A                                           _LATC 0F8B  
                                         _LATD 0F8C                                           _LATE 0F8D  
                                         u4140 2FAA                          __end_of_LCD4B_SENDSTR 2D44  
                                         u4141 2FA6                                           u3600 2F28  
                                         u3601 2F24                                           u3610 2A3E  
                                         u3611 2A3A                                           u5300 20C4  
                                         u5301 20C0                                           u3630 25DA  
                                         u5310 20E6                                           u3631 25D6  
                                         u5311 20E2                                           u6007 1614  
                                         u3640 33A2                                           u5320 210E  
                                         u5400 267C                                           u3641 339E  
                                         u5321 210A                                           u5401 2678  
                                         u3801 3080                                           u6017 16A2  
                                         u3650 30D8                                           u5330 2140  
                                         u5250 249E                                           u5410 269E  
                                         u3810 2D78                                           u3651 30D4  
                                         u5331 213C                                           u5251 249A  
                                         u5411 269A                                           u6027 1758  
                                         u3580 33E8                                           u5340 2176  
                                         u5260 24C0                                           u5420 26BC  
                                         u5500 1190                                           u3820 2D88  
                                         u3581 33E4                                           u5341 2172  
                                         u5261 24BC                                           u5421 26B8  
                                         u5501 118C                                           u3821 2D84  
                                         u6037 1890                                           u3590 2F12  
                                         u3670 2790                                           u5350 2198  
                                         u5270 24E8                                           u5430 2328  
                                         u5510 1246                                           u3830 3426  
                                         u3591 2F0E                                           u3671 278C  
                                         u5351 2194                                           u5271 24E4  
                                         u5431 2324                                           u5511 1240  
                                         u6047 18B0                                           u3751 2A1C  
                                         u3831 3422                                           u3680 27E6  
                                         u5280 2068                                           u5360 21BE  
                                         u5440 233A                                           u5600 14BE  
                                         u5520 1248                                           u3681 27E2  
                                         u5281 2064                                           u5361 21BA  
                                         u5441 2336                                           u5601 14BA  
                                         u3817 2D6E                                           u6057 18D4  
                                         u5290 208A                                           u5370 21E0  
                                         u5450 2362                                           u5610 14FA  
                                         u5530 12DC                                           u3770 30A4  
                                         u5291 2086                                           u5371 21DC  
                                         u5451 235E                                           u5611 14F6  
                                         u5531 12D8                                           u6067 292E  
                                         u3771 30A0                                           u5380 21FE  
                                         u5460 2398                                           u5540 12EC  
                                         u5620 2DD8                                           u5700 1A42  
                                         u5381 21FA                                           u5461 2394  
                                         u5541 12E8                                           u5621 2DD4  
                                         u5701 1A3E                                           u3781 30AE  
                                         u5390 222E                                           u5470 300E  
                                         u5550 12FC                                           u5630 1E18  
                                         u3790 3076                                           u5391 222A  
                                         u5471 300A                                           u5551 12F8  
                                         u5631 1E10                                           u3791 3072  
                                         u3960 2884                                           u5560 130C  
                                         u5480 10CE                                           u5640 1E2C  
                                         u5720 1ADC                                           u3961 2880  
                                         u5561 1308                                           u5481 10CA  
                                         u5641 1E28                                           u5721 1AD8  
                                         u3970 28DA                                           u5570 135A  
                                         u5490 1172                                           u5650 1E3E  
                                         u5730 1AFE                                           u5714 1AA8  
                                         u3971 28D6                                           u5571 1356  
                                         u5491 116E                                           u5651 1E3A  
                                         u5731 1AFA                                           u5715 1AA4  
                                         u5580 137C                                           u5820 1DA6  
                                         u5804 1CF8                                           u3980 2C66  
                                         u5581 1378                                           u5821 1DA0  
                                         u5805 1CF4                                           u5590 14AE  
                                         u5638 1E1C                                           u5750 1BE6  
                                         u5830 1DA8                                           u5814 1D54  
                                         u3990 2C8C                                           u5591 14AA  
                                         u5751 1BE2                                           u5815 1D50  
                                         u3991 2C88                                           u5911 1638  
                                         u5664 1E70                                           u5744 1BB2  
                                         u5680 195A                                           u5840 1780  
                                         u5920 1688                                           u5665 1E6C  
                                         u5745 1BAE                                           u5681 1956  
                                         u5841 177C                                           u5921 1684  
                                         u5674 1ECC                                           u5770 1C80  
                                         u5850 1888                                           u5930 1744  
                                         u5675 1EC8                                           u5771 1C7C  
                                         u5851 1884                                           u3987 2C5C  
                                         u5931 1740                                           u5764 1C4C  
                                         u5860 2B0C                                           u5780 1CB4  
                                         u5765 1C48                                           u5861 2B08  
                                         u5781 1CB0                                           u5694 1A0E  
                                         u5870 2B5E                                           u5790 1CC6  
                                         u5695 1A0A                                           u5871 2B5A  
                                         u5791 1CC2                                           u5880 2D16  
                                         u5881 2D12                                           u5890 2D42  
                                         u5891 2D3E                                           u5987 15BC  
                                         u5997 15E8                                           _WPUB 0F7C  
                                _INT2_CallBack 317A                            LCD4B_SENDCHAR@F3689 008E  
                      ??_wr2RegCompleteHandler 000C                                           abs@a 00E2  
                                         _dbuf 0124                                           _main 1564  
                     ?_I2C_CallbackReturnReset 000A                                           _prec 002A  
                                         fsr0h 0FEA                                           fsr1h 0FE2  
                                         indf0 0FEF                                           fsr2h 0FDA  
                                         fsr0l 0FE9                                           indf2 0FDF  
                                         fsr1l 0FE1                                           fsr2l 0FD9  
                             __end_of_I2C_Open 2664                                           btemp 0041  
                        ?i2_I2C_MasterClearIrq 0001                      ?_INT2_SetInterruptHandler 00D8  
                                         prodh 0FF4                                           prodl 0FF3  
                                         start 0066                        _I2C_SetInterruptHandler 356C  
                 fp__I2C_DO_SEND_RESTART_WRITE 0000                           ??_EXTEEPROM_ReadByte 00E5  
                                 ___param_bank 0000                                          ??_abs 00E4  
                             ?_I2C_MasterClose 0001                               __end_of_INT0_ISR 3596  
                             __end_of_INT1_ISR 358E                               __end_of_INT2_ISR 3586  
                                 ?_lightSwitch 0001                                  ?_EUSART_Write 0001  
                             ?_I2C_MasterStart 0001                            fp__manual_homelight 0000  
                                _I2C_DO_RX_ACK 35A6                               ?_I2C_MasterWrite 0001  
                              ?_GetDataAndTime 00E4                  __end_of_OSCILLATOR_Initialize 3526  
                          LCD4B_SENDCMD@i_2497 0115                                __end_of___aldiv 2162  
                              __end_of___almod 2250                                          ?_main 0001  
                       __end_of_LCD4B_SENDCHAR 1C90                                          _EEADR 0FA9  
                                        STR_10 1021                                          STR_11 1054  
                                        _ANSEL 0F7E                                __end_of___lldiv 251C  
                        _I2C_Read1ByteRegister 276E                                __end_of___llmod 26EE  
                                        i2l162 3280                                          i2l171 32AC  
                                        i2l165 3254                                          i2l174 2F7E  
                                        i2l168 3228                                          i1l841 361E  
                                        i2l530 348A                                          i2l603 2866  
                                        i1l835 311E                                          i2l621 35CC  
                                        i2l550 2C2A                                          i2l702 35E6  
                                        i2l630 35B4                                          i2l527 33D8  
                                        i1l783 004E                                          i2l560 351A  
                                        i2l624 35C4                                          i2l720 35FE  
                                        i2l633 35AC                                          i2l553 35DA  
                                        i2l642 3502                                          i2l723 3602  
                                        i2l563 34E8                                          i2l627 35BC  
                                        i2l572 2312                                          i2l636 35A4  
                                        i2l557 29BA                                          i2l566 34D8  
                                        i2l639 359C                                          i1l991 2ABE  
                                        i2l656 3612                                          i2l648 2BC4  
                                        i2l681 361A                                          i2l569 22DA  
                                        i2l585 2552                                          i2l586 25C0  
                                        i2l770 1FD0                                          i2l659 360E  
                                        i2l675 3606                                          i2l771 2028  
                                        i2l772 2008                                          i1l988 2AB8  
                                        i2l693 3616                                          i2l597 350E  
                                        i1l997 2AF0                                          i2l678 35D4  
                                        i2l862 3594                                          i2l766 1F88  
                                        i2l687 360A                                          i2l696 34C8  
                                        i2l872 3624                                          i2l768 1FAC  
                                        i2l776 2028                                          i2l866 31FC  
                                        i2l699 35E0                                          i2l875 358C  
                                        i2l892 31A4                                          i2l885 3622  
                                        i2l879 31D0                                          i2l888 3584  
                                        i2l898 3620                                          _RCREG 0FAE  
                                        _RCSTA 0FAB                                   vfpfcnvrt@fmt 00E8  
                                        _SPBRG 0FAF                                          _PORTA 0F80  
                                        _PORTB 0F81                                          _PORTC 0F82  
                                        _PORTD 0F83                                          _PORTE 0F84  
                             __end_of_PINSTART 1DF6                              ??_I2C_DO_TX_EMPTY 000D  
                                        _TRISA 0F92                                          _TRISB 0F93  
                               ?_INT0_CallBack 0001                                          _TRISC 0F94  
                                        _TRISD 0F95                                          _TRISE 0F96  
                             __end_of_PINWRITE 1F3C                                          _TXREG 0FAD  
                                        _TXSTA 0FAC                                  send4bit@F3726 002F  
                                        __Date 0035                                          __Time 0032  
                            __end_of_I2C_DO_RX 25C2                              __end_of_I2C_DO_TX 2314  
                               ?_INT1_CallBack 0001                       __end_of_manual_homelight 314E  
                                        _flags 002E                            _EXTEEPROM_WriteByte 348C  
                          LCD4B_SENDCMD@pinptr 0117                 ??_INT1_DefaultInterruptHandler 0001  
                                        _fputc 2314                              __end_of_I2C_Close 30F2  
                             fp__I2C_MasterIsr 0000                 I2C_MasterOperation@returnValue 00D9  
                                        _timer 0084                                          _width 0028  
                                        _putch 361C                                 ?_INT2_CallBack 0001  
                      _I2C_MasterEnableRestart 3618                       _INT1_SetInterruptHandler 3530  
                                        pclath 0FFA                                          pclatu 0FFB  
                                        tablat 0FF5                               ?_I2C_SetCallback 00D8  
                 I2C_SetAddressNackCallback@cb 00DD                                          plusw0 0FEB  
                                        plusw2 0FDB                                          ttemp5 0042  
                                        ttemp6 0045                                          ttemp7 0049  
                                        status 0FD8                                          wtemp8 0042  
                              __end_of_sprintf 2E2A                              ?_I2C_DO_SEND_STOP 0001  
               ?_INTERRUPT_InterruptManagerLow 0001                           LCD4B_SENDCHAR@i_2519 0115  
                             _LCD4B_SENDSTRPOS 2AFA                              __end_of_LCD4B_SET 1948  
                           ??_I2C_DO_SEND_STOP 0001                       fp__rd1RegCompleteHandler 0000  
                              __initialization 2C8E                          i2I2C_SetBuffer@buffer 0001  
                         ?_EXTEEPROM_WriteByte 00E4                                   __end_of_main 176E  
                     fp__wr1RegCompleteHandler 0000                                  _doorlightauto 00CA  
                             ?_manual_Override 0001                      ?_I2C_DO_SEND_RESTART_READ 0001  
                               ??_EUSART_Write 00D8                               __end_of_ReadTemp 3414  
                               ?_I2C_DO_RX_ACK 0001                           LCD4B_SENDCHAR@pinptr 0117  
                                    ??_ADC_ISR 001C                                         ??_main 0122  
                            ?_I2C_MasterIsNack 0001                                ?_LCD4B_SENDCHAR 010E  
                                __activetblptr 0003                              ?_I2C_MasterSetIrq 0001  
                           ??_I2C_MasterIsNack 0001                             ??_I2C_MasterSetIrq 0001  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 0FC2  
                                       _ADCON1 0FC1                                         _ADCON2 0FC0  
                   _EUSART_OverrunErrorHandler 0146                __end_of_I2C_CallbackReturnReset 3610  
                                       ?_fputc 00D8                               ___llmod@dividend 00D8  
                                       _ADRESH 0FC4                                         _EEADRH 0FAA  
                                       _ADRESL 0FC3                                         _EEDATA 0FA8  
                                       _EECON2 0FA7                i2I2C_SetDataCompleteCallback@cb 0006  
                I2C_SetDataCompleteCallback@cb 00DD                                         ?_putch 0001  
                                       _ANSELH 0F7F                                         i1l1000 2AF6  
                                       i1l1002 2AF8                                         i2l1020 3120  
                                       i2l1022 314C                                         i2l1017 276C  
                                       i2l1025 32AE                                         i2l1027 32D6  
                                       i1l5065 30F2                                         i1l5067 30F4  
                                       i1l5069 3106                                         i1l5341 003C  
                                       i1l5343 004A                                         i1l5339 002E  
                                       i1l4941 2AD0                                         i1l4943 2AE0  
                                       i1l4935 2A90                                         i1l4937 2AA2  
                                       i1l4939 2AC0                                         i2l4501 3514  
                                       i2l5053 358E                                         i2l5061 357E  
                                       i2l4415 3608                                         i2l4423 3600  
                                       i2l4503 3518                                         i2l5055 3590  
                                       i2l5063 3580                                         i2l6201 2F3E  
                                       i2l6121 35E2                                         i2l5057 3586  
                                       i2l6203 2F68                                         i2l5059 3588  
                                       i2l6117 3618                                         i2l6205 2F7C  
                                       i2l6213 35D0                                         i2l6221 35BE  
                                       i2l6119 3614                                         i2l6151 33B6  
                                       i2l6215 35C6                                         i2l6223 35C2  
                                       i2l6153 33C6                                         i2l6233 3604  
                                       i2l6209 34B6                                         i2l6217 35CA  
                                       i2l6241 359A                                         i2l4625 34F8  
                                       i2l7041 1F64                                         i2l6155 33CE  
                                       i2l6171 326A                                         i2l6411 27EC  
                                       i2l6331 34DA                                         i2l6251 35B6  
                                       i2l6227 35AE                                         i2l4627 34FC  
                                       i2l7051 1FBA                                         i2l7043 1F72  
                                       i2l6157 33D6                                         i2l6093 2BC8  
                                       i2l6173 327E                                         i2l6181 3252  
                                       i2l6261 360C                                         i2l6237 35DC  
                                       i2l6413 27F4                                         i2l6333 34DE  
                                       i2l6341 34CE                                         i2l6405 2568  
                                       i2l6253 35BA                                         i2l6229 35B2  
                                       i2l6245 359E                                         i2l4629 3500  
                                       i2l4661 26EE                                         i2l7053 1FC8  
                                       i2l7045 1F80                                         i2l6095 2BDA  
                                       i2l6159 3474                                         i2l6423 2806  
                                       i2l6335 34E6                                         i2l6343 34D6  
                                       i2l6351 2268                                         i2l4591 350C  
                                       i2l6247 35A2                                         i2l6239 3596  
                                       i2l4743 35FC                                         i2l4671 2740  
                                       i2l4663 2702                                         i2l7055 1FDE  
                                       i2l7047 1F96                                         i2l6097 2C06  
                                       i2l6193 3282                                         i2l6169 3256  
                                       i2l6177 322A                                         i2l6185 31FE  
                                       i2l6257 3610                                         i2l6417 27FC  
                                       i2l6441 2B60                                         i2l4681 275C  
                                       i2l4665 2712                                         i2l7057 1FEC  
                                       i2l7049 1FA4                                         i2l6195 3296  
                                       i2l6179 323E                                         i2l6187 3212  
                                       i2l6419 2800                                         i2l4499 3510  
                                       i2l6339 34CA                                         i2l6371 230A  
                                       i2l6355 2270                                         i2l6347 2250  
                                       i2l4587 3504                                         i2l6435 35A6  
                                       i2l6443 2B64                                         i2l4675 2744  
                                       i2l4667 2738                                         i2l4691 32AE  
                                       i2l7059 2016                                         i2l6197 32AA  
                                       i2l6189 3226                                         i2l6429 280E  
                                       i2l6373 2310                                         i2l6365 2280  
                                       i2l6381 251C                                         i2l4589 3508  
                                       i2l6437 35AA                                         i2l6445 2B6C  
                                       i2l4677 2754                                         i2l4669 2740  
                                       i2l4685 2764                                         i2l4693 32D0  
                                       i2l6367 22DE                                         i2l6359 2278  
                                       i2l6383 252A                                         i2l6455 2B7C  
                                       i2l4679 275C                                         i2l4687 3120  
                                       i2l6369 22F0                                         i2l6385 2530  
                                       i2l6449 2B74                                         i2l6641 2962  
                                       i2l6801 35D6                                         i2l4689 3146  
                                       i2l4881 31B8                                         i2l6395 2558  
                                       i2l6387 2548                                         i2l6643 2976  
                                       i2l4875 31D2                                         i2l4883 317A  
                                       i2l6389 254C                                         i2l6645 297C  
                                       i2l6637 294E                                         i2l4877 31E4  
                                       i2l4885 318C                                         _TABLAT 0FF5  
                                       i2l6399 2560                                         i2l6639 2952  
                                       i2l4879 31A6                                         i2l9441 2840  
                                       i2l9435 2BAE                                         i2l9437 259A  
                                       i2l9439 22B4                                         _OSCCON 0FD3  
                       ??i2_I2C_MasterClearIrq 0001                                  vfpfcnvrt@done 00EF  
                    ??_I2C_SetInterruptHandler 00DA                                         _SPBRGH 0FB0  
                                       _SSPADD 0FC8                                         _SSPBUF 0FC9  
                              LCD4B_SENDCHAR@i 0113                            _I2C_MasterEnableIrq 35E8  
                          _I2C_MasterGetRxData 3604                          ??_EXTEEPROM_WriteByte 00E6  
                                 vfprintf@cfmt 00FB                                      ??___aldiv 00E0  
                                    ??___almod 00E0                                  _I2C_MasterFsm 294E  
                                _I2C_MasterIsr 35D6                                      ??___lldiv 00E0  
                                    ??___llmod 00E0                                         clear_0 2CC6  
                                       clear_1 2CD2                                         clear_2 2CDE  
                            I2C_SetCallback@cb 00D8                        fp__I2C_DO_SEND_ADR_READ 0000  
                       ?_I2C_Read1ByteRegister 00E1                                         isa$std 0001  
                                       _printf 336E                                  _I2C_SetBuffer 3392  
                              ??_INT0_CallBack 0002                                         _strlen 2D44  
                 __end_of_I2C_MasterDisableIrq 35F4                                         fputc@c 00D8  
                        __end_of_PrintDateUART 334A                           ?_I2C_MasterEnableIrq 0001  
         __end_of_INT2_DefaultInterruptHandler 3622                   _INT2_DefaultInterruptHandler 3620  
                          _I2C_DO_ADDRESS_NACK 2B60                                   __pdataCOMRAM 0040  
                         ?_I2C_MasterGetRxData 0001                                      ?_I2C_Open 0001  
                              ??_INT1_CallBack 0002             __end_of_I2C_SetAddressNackCallback 3474  
                   _I2C_SetAddressNackCallback 345C                              ?_manual_Doorlight 0001  
                                 __mediumconst 0000                                         tblptrh 0FF7  
                                       tblptrl 0FF6                                         tblptru 0FF8  
                    ??_I2C_MasterEnableRestart 0001                                sendenable@F3731 008D  
                     ADC_GetConversion@channel 00DC                                         putch@c 0001  
                              ??_INT2_CallBack 0002                               __end_of_vfprintf 2DE4  
                           ??_manual_Doorlight 0001       INT2_SetInterruptHandler@InterruptHandler 00D8  
     INT1_SetInterruptHandler@InterruptHandler 00D8       INT0_SetInterruptHandler@InterruptHandler 00D8  
      ADC_SetInterruptHandler@InterruptHandler 00D8        I2C_SetInterruptHandler@InterruptHandler 00D8  
                                    ??_sprintf 00FC                              __end_of_DateArray 30C4  
                              LCD4B_SET@pinptr 011E                                   ReadTemp@addr 00E4  
             ??_INTERRUPT_InterruptManagerHigh 0012                ?_INTERRUPT_InterruptManagerHigh 0001  
                            _SYSTEM_Initialize 334A                                   ReadTemp@temp 00E5  
                                   __accesstop 0060                        __end_of__initialization 2CE4  
                                 _DatetoString 2E70                                      ?_INT0_ISR 0001  
                                    ?_INT1_ISR 0001                                      ?_INT2_ISR 0001  
                          _I2C_MasterOperation 2EFA                             ?_SYSTEM_Initialize 0001  
                              sendenable@pinEN 010D                                  ___rparam_used 0001  
                         ?_I2C_DO_ADDRESS_NACK 0001                          __end_of_PrintTimeUART 3324  
                      _rdBlkRegCompleteHandler 2F3E                                      ?_PINSTART 010A  
                   fp__rdBlkRegCompleteHandler 0000                                  _homelightauto 00CB  
                                    ?_PINWRITE 0102                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                 ?_I2C_MasterIsr 0001  
                              ??_I2C_DO_RX_ACK 0001                                   __pidataBANK0 314E  
                       _I2C_CallbackReturnStop 3610                            ??_SYSTEM_Initialize 00DA  
                                __end_of_fputc 23D0                                  __end_of_putch 361E  
                               ?_I2C_SetBuffer 00D8                  __end_of_I2C_DO_SEND_ADR_WRITE 34DA  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                          LCD4B_SENDSTRPOS@lcd 011E                            LCD4B_SENDSTRPOS@row 0120  
                          LCD4B_SENDSTRPOS@str 011F                          ??_I2C_MasterEnableIrq 00D8  
                                  PINSTART@ret 0111                          ??_I2C_MasterGetRxData 0001  
                      ?_I2C_Write1ByteRegister 00E1                                     ??_I2C_Open 00DA  
                          LCD4B_SENDSTR@length 011B                         LCD4B_SENDSTRPOS@column 0121  
             __end_of_INT2_SetInterruptHandler 3530                     __end_of_I2C_MasterClearIrq 35FC  
              fp__INT2_DefaultInterruptHandler 0000                  ?_INT2_DefaultInterruptHandler 0001  
                             PrintDateUART@str 00ED                ??_EUSART_SetOverrunErrorHandler 00DA  
                                      ??_fputc 00DC                      __end_of_SYSTEM_Initialize 336E  
                                  PINWRITE@log 0104                                    PINWRITE@ret 00FD  
                                      ??_putch 00D8                              _I2C_MasterSendAck 35DC  
                                   __pbssBANK0 0060                                     __pbssBANK1 0124  
                         __end_of_EUSART_Write 342C                                  ??_I2C_DO_IDLE 0001  
                                ??_I2C_DO_RCEN 0001                  __end_of_rd2RegCompleteHandler 3256  
                 __end_of_I2C_MasterSendTxData 35D6                              __end_of_TimeArray 3096  
                           ?_I2C_MasterSendAck 0001                                      ?_ReadTemp 0001  
                        _INT0_InterruptHandler 003C                                     ??_INT0_ISR 0002  
                            _I2C_MasterStartRx 3608                                     ??_INT1_ISR 0002  
                                   ??_INT2_ISR 0002                                     __pnvCOMRAM 0038  
                        ??_I2C_DO_ADDRESS_NACK 000D                  __end_of_wr2RegCompleteHandler 32AE  
                          _I2C_DO_RX_NACK_STOP 359E                          _rd1RegCompleteHandler 3256  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 35E8  
                        _wr1RegCompleteHandler 31FE                                     ??_PINSTART 010C  
                          ??_I2C_MasterSendAck 0001                                     ??_PINWRITE 0105  
                     rd1RegCompleteHandler@ptr 000A                               ??_GetDataAndTime 00EB  
                  __end_of_I2C_DO_SEND_RESTART 35BE                                _I2C_DO_TX_EMPTY 27EC  
                          I2C_SetBuffer@buffer 00D8                            ??_I2C_MasterStartRx 0001  
                                      _ADC_ISR 30F2                                        _BAUDCON 0FB8  
                        ??_I2C_MasterOperation 00D8                                        ?_printf 00FC  
             i2I2C_SetDataCompleteCallback@ptr 0008                 I2C_SetDataCompleteCallback@ptr 00DF  
               __end_of_I2C_Write1ByteRegister 28DC                                        ?_strlen 00D8  
                     ??_I2C_DO_RX_NACK_RESTART 0001              __end_of_I2C_DO_SEND_RESTART_WRITE 35C6  
                         ?_I2C_DO_RX_NACK_STOP 0001                     ??_INT1_SetInterruptHandler 00DA  
                     __end_of_LCD4B_SENDSTRPOS 2B60                                        _LAT_Reg 00B6  
                                      _LCDtemp 00A8                                        _TBLPTRH 0FF7  
                                      _TBLPTRL 0FF6                                        _TBLPTRU 0FF8  
                    __end_of_I2C_MasterSendAck 35E2                                        _OSCTUNE 0F9B  
                        __end_of_setcursor4bit 2476                       ??_EUSART_SetErrorHandler 00DA  
                                      _SSPCON1 0FC6                                        _SSPCON2 0FC5  
                            ?_manual_homelight 0001                                        _SSPSTAT 0FC7  
                    __end_of_I2C_MasterStartRx 360C                           I2C_Close@returnValue 00D8  
                 ?_I2C_SetDataCompleteCallback 00DD                                      _I2C_DO_RX 251C  
                                    _I2C_DO_TX 2250                             ??_manual_homelight 0001  
             __end_of_I2C_DO_SEND_RESTART_READ 35CE                   I2C_Read1ByteRegister@address 00E2  
                                   ??_ReadTemp 00E4                                      _I2C_Close 30C4  
                             LCD4B_SENDCMD@cmd 010F                               LCD4B_SENDCMD@lcd 010E  
                             LCD4B_SENDCMD@ret 0112                      ??_rdBlkRegCompleteHandler 000C  
                    ?_INT0_SetInterruptHandler 00D8                           _I2C_MasterDisableIrq 35F0  
                            ??i2_I2C_SetBuffer 0005                                ??_I2C_MasterFsm 000F  
                              ??_I2C_MasterIsr 0012                           _ADC_InterruptHandler 003E  
                                      __Hparam 0000                        _ADC_SetInterruptHandler 3562  
                                      __Lparam 0000                            __end_of_I2C_DO_IDLE 351C  
                          __end_of_I2C_DO_RCEN 3510                                  ?_TimetoString 00EB  
                                      ___aldiv 2054                                        ___almod 2162  
                             ??_LCD4B_SENDCHAR 0110                                      _LCD4B_SET 176E  
                                      ___lldiv 2476                                ??_I2C_SetBuffer 00DC  
                                      ___llmod 2664                                      ?_vfprintf 00F6  
                      I2C_SetBuffer@bufferSize 00DA                                   __psmallconst 1000  
                             LCD4B_SENDSTR@lcd 0118                               LCD4B_SENDSTR@str 0119  
                                   LCD4B_SET@i 011B                                 _I2C_MasterOpen 33DA  
                                      __pcinit 2C8E                                 _I2C_MasterStop 3614  
                               _I2C_Initialize 34A2                                        __ramtop 1000  
                                      _datestr 0094                                        __ptext0 1564  
                                      __ptext1 2DE4                                        __ptext2 334A  
                                      __ptext3 3034                                        __ptext4 351C  
                                      __ptext5 34EA                                        __ptext6 34A2  
                                      __ptext7 2FC0                                        __ptext8 3526  
                                      __ptext9 3530                          ??_I2C_DO_RX_NACK_STOP 0001  
                        _OSCILLATOR_Initialize 351C                               ___aldiv@dividend 00D8  
                           I2C_SetCallback@idx 00DC                       ??_PIN_MANAGER_Initialize 00D8  
                I2C_CallbackReturnReset@funPtr 000A                             I2C_SetCallback@ptr 00DA  
                     wr1RegCompleteHandler@ptr 000A                      I2C_Write1ByteRegister@reg 00E1  
                     fp__I2C_DO_SEND_ADR_WRITE 0000                                        _timestr 009E  
                                      _sprintf 2DE4                                 __pintcode_body 1F3C  
                         end_of_initialization 2CE4                       _INT2_SetInterruptHandler 3526  
                                   ?_I2C_DO_RX 0001                                     ?_I2C_DO_TX 0001  
               ??_INT2_DefaultInterruptHandler 0001          __end_of_EUSART_SetOverrunErrorHandler 354E  
                _EUSART_SetOverrunErrorHandler 3544                                        fputc@fp 00DA  
                                   ?_I2C_Close 0001                                        int_func 1F3C  
                       ?_rd1RegCompleteHandler 000A                           EUSART_SendString@len 00DE  
                      __end_of_I2C_DO_TX_EMPTY 2868                           EUSART_SendString@str 00DC  
                                   _sendenable 28DC                          ?_I2C_MasterDisableIrq 0001  
                            _EUSART_Initialize 2EB6                         ?_wr1RegCompleteHandler 000A  
                              ___lldiv@divisor 00DC                                ___lldiv@counter 00E0  
                               ??_TimetoString 00ED                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                              __end_of_vfpfcnvrt 1564  
                                    _RCSTAbits 0FAB                               ___aldiv@quotient 00E2  
                                      postdec1 0FE5                                        postdec2 0FDD  
                      ??_I2C_Read1ByteRegister 00E2                         __end_of_I2C_MasterOpen 33FC  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 0FEE  
                                      postinc1 0FE6                                        postinc2 0FDE  
                             vfpfcnvrt@convarg 00F1                         __end_of_I2C_MasterStop 3618  
                       __end_of_I2C_Initialize 34B6                                     ?_LCD4B_SET 0118  
                                   ??_vfprintf 00FB                      fp__I2C_CallbackReturnStop 0000  
                                      strlen@a 00DA                                        strlen@s 00D8  
                          ??_EUSART_Initialize 00DA                          _INT1_InterruptHandler 003A  
              __end_of_rdBlkRegCompleteHandler 2F80                           _I2C_MasterSendTxData 35CE  
                              fp__I2C_DO_RESET 0000                              _EUSART_SendString 2C2C  
                           fp__manual_Override 0000            __end_of_ADC_DefaultInterruptHandler 3620  
                  _ADC_DefaultInterruptHandler 361E                    ?_I2C_SetAddressNackCallback 00DD  
                           ?_EUSART_SendString 00DC                      EXTEEPROM_ReadByte@Byteadd 00E4  
                       LCD4B_SENDCHARPOS@F3699 0030                                  _LCD4B_SENDCMD 1948  
                                _LCD4B_SENDSTR 2CEE                            ??_EUSART_SendString 00DE  
                    __end_of_EUSART_Initialize 2EFA                  ??_ADC_DefaultInterruptHandler 001C  
                                  _I2C_DO_IDLE 3510                                    _I2C_DO_RCEN 3504  
                   rdBlkRegCompleteHandler@ptr 000A                                      _DateArray 3096  
                  __end_of_EXTEEPROM_WriteByte 34A2                      ??_ADC_SetInterruptHandler 00DA  
                I2C_Write1ByteRegister@address 00E3                                      _TXSTAbits 0FAC  
                      ?_I2C_CallbackReturnStop 000A                             LCD4B_SENDCMD@F3681 008F  
                     _I2C_DO_SEND_RESTART_READ 35C6                    fp__I2C_DO_SEND_RESTART_READ 0000  
                           LCD4B_SENDCHAR@data 010F                              i2_I2C_SetCallback 2BC6  
                 I2C_CallbackReturnStop@funPtr 000A                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 34F8                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 360C  
                     I2C_Read1ByteRegister@reg 00E1                     fp__I2C_CallbackReturnReset 0000  
         __end_of_INT0_DefaultInterruptHandler 3626                   _INT0_DefaultInterruptHandler 3624  
                   _EUSART_DefaultErrorHandler 0000                             ?i2_I2C_SetCallback 0001  
                                  vfpfcnvrt@ap 00E9                                    vfpfcnvrt@cp 00F0  
                                  vfpfcnvrt@fp 00E6                ??i2_I2C_SetDataCompleteCallback 000A  
                                __pidataCOMRAM 3626                                   _EUSART_Write 3414  
                               _ADC_Initialize 32D8                      __end_of_EUSART_SendString 2C8E  
                        ?_I2C_MasterSendTxData 0001                         ?_OSCILLATOR_Initialize 0001  
                  ??_I2C_DO_SEND_RESTART_WRITE 0001                                 __end_of_printf 3392  
                        __end_of_INT0_CallBack 31FE                            ??i2_I2C_SetCallback 0005  
                               __end_of_strlen 2D98                            start_initialization 2C8E  
                                sendenable@lcd 010A                                  sendenable@ret 010C  
                                  __end_of_abs 3034                          __end_of_INT1_CallBack 31D2  
                                ?_I2C_DO_RESET 0001                       ?_I2C_SetInterruptHandler 00D8  
                        __end_of_INT2_CallBack 31A6                                 ?_LCD4B_SENDCMD 010E  
                               ?_LCD4B_SENDSTR 0118                                    ??_I2C_DO_RX 000D  
                                  ??_I2C_DO_TX 000D                              ??_I2C_MasterClose 00D8  
                       ??_I2C_MasterDisableIrq 00D8                                    ??_I2C_Close 00D8  
                            ??_I2C_MasterStart 00D8                                     ?_DateArray 0001  
                            ??_I2C_MasterWrite 00DA                 __end_of_I2C_CallbackReturnStop 3614  
                              ___llmod@divisor 00DC                         _I2C_DO_RX_NACK_RESTART 3596  
                                  ?_sendenable 010A                               ?_I2C_DO_TX_EMPTY 0001  
                              ___llmod@counter 00E0                             _I2C_MasterClearIrq 35F8  
                             setcursor4bit@col 011A                               setcursor4bit@lcd 0118  
                            PINSTART@pinconfig 010A                               setcursor4bit@ret 011D  
                             setcursor4bit@row 0119                      __end_ofi2_I2C_SetCallback 2C2C  
                               LCD4B_SET@F3672 0091                                 LCD4B_SET@F3675 0090  
                               LCD4B_SENDCMD@i 0113                 ?_EUSART_SetOverrunErrorHandler 00D8  
                                    _TimeArray 3068                                    vfprintf@fmt 00F8  
                   _EUSART_FramingErrorHandler 00FE                         _EUSART_SetErrorHandler 3558  
                                  ??_LCD4B_SET 0119                           LCD4B_SENDSTR@str_old 011A  
                  __end_of_I2C_MasterEnableIrq 35EC                            ?_I2C_MasterClearIrq 0001  
                       __end_of_ADC_Initialize 32FE                    __end_of_I2C_MasterGetRxData 3608  
                                  __pdataBANK0 00AC                          __end_of_I2C_DO_RX_ACK 35AE  
                                ??_lightSwitch 001C                                       ?_ADC_ISR 0001  
                   __end_of_EXT_INT_Initialize 2FFE                     EXTEEPROM_WriteByte@Byteadd 00E4  
                             _I2C_DO_SEND_STOP 35AE                fp__INT0_DefaultInterruptHandler 0000  
                ?_INT0_DefaultInterruptHandler 0001                              ??_I2C_SetCallback 00DC  
                                     ??_printf 00FD                            I2C_Open@returnValue 00DB  
                           _I2C_MasterSendNack 35E2                                       ??_strlen 00DA  
                     ?_I2C_MasterEnableRestart 0001                              _i2c_fsmStateTable 1001  
                       fp__I2C_DO_SEND_RESTART 0000                          _I2C_DO_SEND_ADR_WRITE 34CA  
                                  __pbssCOMRAM 0021                              ?_LCD4B_SENDSTRPOS 011E  
             __end_of_INT0_SetInterruptHandler 3544                                  __pcstackBANK0 00D8  
                                __pcstackBANK1 0100                                 ??_I2C_DO_RESET 0001  
                         __end_of_TimetoString 2E70                            ?_I2C_MasterSendNack 0001  
                           ??_LCD4B_SENDSTRPOS 00FE                                i2_I2C_SetBuffer 33B6  
                 __end_of_I2C_DO_SEND_ADR_READ 34EA                           ??_I2C_MasterClearIrq 00D8  
                  __end_of_I2C_DO_ADDRESS_NACK 2BC6                              ??_manual_Override 0001  
                                _EEPROMreading 0092                               _I2C_MasterIsNack 34B6  
                    _I2C_DO_SEND_RESTART_WRITE 35BE                          _INT2_InterruptHandler 0038  
                                 LCD4B_SET@lcd 0118                               _I2C_MasterSetIrq 3600  
                                    __pnvBANK0 00FE                                      __pnvBANK1 0144  
                        _rd2RegCompleteHandler 322A                                     ?_TimeArray 0001  
                       _PIN_MANAGER_Initialize 3034                          _wr2RegCompleteHandler 3282  
                    ??_I2C_CallbackReturnReset 000C                    __end_of_I2C_MasterOperation 2F3E  
                         ??_I2C_MasterSendNack 0001                       rd2RegCompleteHandler@ptr 000A  
                                    __pintcode 0008                                       ?___aldiv 00D8  
                                     ?___almod 00D8                                      __ptext100 34DA  
                                    __ptext101 3510                                      __ptext110 360C  
                                    __ptext102 27EC                                      __ptext111 3610  
                                    __ptext103 3600                                      __ptext120 3614  
                                    __ptext112 2F3E                                      __ptext104 34B6  
                                    __ptext121 3618                                      __ptext113 31FE  
                                    __ptext105 35CE                                      __ptext122 0000  
                                    __ptext114 322A                                      __ptext106 35DC  
                                    __ptext115 3256                                      __ptext107 3604  
                                    __ptext116 3282                                      __ptext108 35E2  
                                    __ptext117 3474                                      __ptext109 3608  
                                    __ptext118 2BC6                                      __ptext119 33B6  
                                     ?___lldiv 00D8                                       ?___llmod 00D8  
                              ?_ADC_Initialize 0001                         ??_I2C_MasterSendTxData 0001  
                                  __pintcodelo 0018                      __end_of_i2c_fsmStateTable 1021  
                             ___almod@dividend 00D8                                   fp__I2C_DO_RX 0000  
                                 fp__I2C_DO_TX 0000                                    __smallconst 1000  
                   ??_INT2_SetInterruptHandler 00DA                __end_of_I2C_SetInterruptHandler 3576  
        __end_ofi2_I2C_SetDataCompleteCallback 348C                  i2_I2C_SetDataCompleteCallback 3474  
                      I2C_MasterOperation@read 00D8                                       _I2C_Open 25C2  
                                _PrintDateUART 3324                            __end_of_lightSwitch 2AFA  
                              ??_LCD4B_SENDCMD 0110                                ??_LCD4B_SENDSTR 00FE  
                                    _lightread 008B                                       ?_sprintf 0100  
                      ??_rd1RegCompleteHandler 000C                           _INTERRUPT_Initialize 34EA  
                      ??_wr1RegCompleteHandler 000C                                ___aldiv@divisor 00DC  
                              ___aldiv@counter 00E0                                    ??_DateArray 00EB  
                                     _INT0_ISR 358E                                       _INT1_ISR 3586  
                                     _INT2_ISR 357E                                       _LATAbits 0F89  
       EUSART_SetErrorHandler@interruptHandler 00D8                      ?_INT1_SetInterruptHandler 00D8  
                                     _IPR1bits 0F9F                                       _IPR2bits 0FA2  
                                     _PIE1bits 0F9D                                       _PIE2bits 0FA0  
                   __end_of_EXTEEPROM_ReadByte 3444                               _manual_Doorlight 32AE  
                            _eusartRxLastError 0031                                       _TCA7temp 0093  
                                     i1u312_20 003C                                       i1u312_21 0038  
                                     i1u313_20 004A                                       i1u313_21 0046  
                                     i1u270_20 2AD0                                       i1u270_21 2ACC  
                                     i1u271_20 2AE0                                       i1u271_21 2ADC  
                                     i1u272_20 2AF0                                       i1u272_21 2AEC  
                                     i1u280_28 310C                                       i1u280_29 311E  
                                     i1u268_20 2AA2                                       i1u268_21 2A9E  
                                     i1u269_20 2AB8                                       i1u269_21 2AB4  
                                     i1u279_20 3106                                       i1u279_21 3102  
                                     i2u400_40 2962                                       i2u240_40 2712  
                                     i2u400_41 295E                                       i2u240_41 270E  
                                     i2u401_40 2976                                       i2u241_40 2722  
                                     i2u401_41 2972                                       i2u241_41 271C  
                                     i2u241_46 2724                                       i2u242_40 2754  
                                     i2u242_41 2750                                       i2u402_48 29A4  
                                     i2u243_40 3130                                       i2u402_49 29B6  
                                     i2u243_41 312A                                       i2u243_46 3132  
                                     i2u244_40 32BE                                       i2u244_41 32B8  
                                     i2u244_46 32C0                                       i2u260_48 31BE  
                                     i2u261_40 318C                                       i2u260_49 31D0  
                                     i2u261_41 3188                                       i2u239_40 2702  
                                     i2u262_48 3192                                       i2u239_41 26FE  
                                     i2u262_49 31A4                                       i2u440_40 1FDE  
                                     i2u440_41 1FDA                                       i2u257_40 31E4  
                                     i2u441_40 1FEC                                       i2u257_41 31E0  
                                     i2u441_41 1FE8                                       _PIR1bits 0F9E  
                                     i2u434_40 1F72                                       i2u434_41 1F6E  
              ??_EUSART_SetFramingErrorHandler 00DA                                       i2u258_48 31EA  
                                     i2u259_40 31B8                                       i2u443_40 2016  
                                     i2u442_48 1FF2                                       i2u435_40 1F80  
                                     i2u258_49 31FC                                       i2u259_41 31B4  
                                     i2u443_41 2012                                       i2u442_49 2004  
                                     i2u435_41 1F7C                                       _PIR2bits 0FA1  
                                     i2u444_40 2024                                       i2u436_40 1F96  
                                     i2u444_41 2020                                       i2u436_41 1F92  
                                     i2u437_40 1FA4                                       i2u437_41 1FA0  
                                     i2u374_40 33C6                                       i2u366_40 2BDA  
                                     i2u438_40 1FBA                                       i2u374_41 33C2  
                                     i2u366_41 2BD6                                       i2u438_41 1FB6  
                                     i2u390_48 2B8A                                       i2u439_40 1FC8  
                                     _PINSTART 1C90                                       i2u390_49 2B9C  
                                     i2u439_41 1FC4                                       i2u376_40 34C6  
                                     i2u384_40 2264                                       i2u376_41 34C0  
                                     i2u384_41 2260                                       i2u376_46 34C8  
                                     i2u386_40 230A                                       i2u385_48 228E  
                                     i2u386_41 2306                                       i2u385_49 22A2  
                                     i2u387_40 2548                                       i2u387_41 2544  
                                     i2u388_48 2576                                       i2u388_49 2588  
                                     i2u389_48 281C                                       i2u389_49 282E  
                                     _PINWRITE 1DF6                                  _PrintTimeUART 32FE  
                        __end_of_I2C_MasterFsm 29BC                          __end_of_I2C_MasterIsr 35DC  
                                     _RCONbits 0FD0                 fp__ADC_DefaultInterruptHandler 0000  
                  __end_of_I2C_DO_RX_NACK_STOP 35A6              _EUSART_DefaultOverrunErrorHandler 0000  
              __end_of_I2C_MasterEnableRestart 361C                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                                       _PORT_Reg 00AC  
                __end_of_I2C_Read1ByteRegister 27EC                                      _vfpfcnvrt 10A8  
                        __end_of_I2C_SetBuffer 33B6                           LCD4B_SET@pinptr_2471 011D  
                                     _TRIS_Reg 00C0                                     _ADCON0bits 0FC2  
                       ?_I2C_DO_SEND_ADR_WRITE 0001                        __end_ofi2_I2C_SetBuffer 33DA  
                     I2C_MasterSendTxData@data 0001                                 ?_PrintDateUART 0001  
                            PINWRITE@pinconfig 0102                 ??_INT0_DefaultInterruptHandler 0001  
                     wr2RegCompleteHandler@ptr 000A                              LCD4B_SENDCHAR@lcd 010E  
                            LCD4B_SENDCHAR@ret 0112                                     vfpfcnvrt@c 00F5  
                                  _INTCON2bits 0FF1                                    _INTCON3bits 0FF0  
                   ??_I2C_DO_SEND_RESTART_READ 0001                                      copy_data0 2CA2  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000A  
                    i2I2C_SetBuffer@bufferSize 0003                       _INT0_SetInterruptHandler 353A  
                                   _I2C_Status 0060                                   ?_I2C_DO_IDLE 0001  
                                ?_DatetoString 00EB                                   ?_I2C_DO_RCEN 0001  
                                     _ReadTemp 33FC                         ?_rd2RegCompleteHandler 000A  
                                   _EECON1bits 0FA6                               ??_I2C_MasterOpen 00D8  
                       ?_wr2RegCompleteHandler 000A                               ??_I2C_MasterStop 0001  
                             ??_I2C_Initialize 00D8                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                    ??_TimeArray 00EB  
                               ?_PrintTimeUART 0001                                     vfprintf@ap 00F9  
                                     __Lrparam 0000                                     vfprintf@fp 00F6  
                            _ADC_GetConversion 2F80                           __end_of_I2C_DO_RESET 3504  
                     ??_I2C_Write1ByteRegister 00E3                        ??_OSCILLATOR_Initialize 00D8  
                          _EUSART_ErrorHandler 0144                             ?_ADC_GetConversion 00D8  
                         _I2C_DO_SEND_ADR_READ 34DA                                     ?_vfpfcnvrt 00E6  
                                  _lightSwitch 2A90               I2C_Read1ByteRegister@returnValue 00E3  
                 __end_ofi2_I2C_MasterClearIrq 3600                                _I2C_MasterClose 35F4  
                          ??_ADC_GetConversion 00DA                  I2C_SetAddressNackCallback@ptr 00DF  
                                   sprintf@fmt 0101                                I2C_Open@address 00DA  
                          fp__I2C_DO_SEND_STOP 0000                           i2I2C_SetCallback@idx 0005  
              ??_INTERRUPT_InterruptManagerLow 001C                                _I2C_MasterStart 35EC  
                         i2I2C_SetCallback@ptr 0003                                _I2C_MasterWrite 3576  
                                     __ptext10 353A                                       __ptext11 2EB6  
                                     __ptext20 3068                                       __ptext12 3544  
                                     __ptext21 3324                                       __ptext13 354E  
                                     __ptext30 23D0                                       __ptext22 2C2C  
                                     __ptext14 3558                                       __ptext31 1948  
                                     __ptext23 3414                                       __ptext15 32D8  
                                     __ptext40 2314                                       __ptext32 2CEE  
                                     __ptext24 2E70                                       __ptext16 3562  
                                     __ptext41 361C                                       __ptext33 2D44  
                                     __ptext25 3096                                       __ptext17 33FC  
                                     __ptext50 276E                                       __ptext42 2FFE  
                                     __ptext34 1AEC                                       __ptext26 29BC  
                                     __ptext18 32FE                                       __ptext51 3444  
                                     __ptext43 2664                                       __ptext35 28DC  
                                     __ptext27 176E                                       __ptext19 2E2A  
                                     __ptext60 2EFA                                       __ptext52 3392  
                                     __ptext44 2476                                       __ptext36 1DF6  
                                     __ptext28 1C90                                       __ptext61 35EC  
                                     __ptext53 345C                                       __ptext45 2162  
                                     __ptext37 336E                                       __ptext29 2AFA  
                                     __ptext70 2A90                                       __ptext62 30C4  
                                     __ptext54 2A26                                       __ptext46 2054  
                                     __ptext38 2D98                                       __ptext63 35F0  
                                     __ptext55 25C2                                       __ptext47 348C  
                                     __ptext39 10A8                                       __ptext80 358E  
                                     __ptext72 357E                                       __ptext64 35F4  
                                     __ptext56 356C                                       __ptext48 2868  
                                     __ptext81 31D2                                       __ptext73 317A  
                                     __ptext65 35F8                                       __ptext57 33DA  
                                     __ptext49 342C                                       __ptext90 359E  
                                     __ptext82 3624                                       __ptext74 3620  
                                     __ptext66 2F80                                       __ptext58 35E8  
                                     __ptext91 35A6                                       __ptext83 26EE  
                                     __ptext75 32AE                                       __ptext59 3576  
                                     __ptext92 35AE                                       __ptext84 35D6  
                                     __ptext76 3586                                       __ptext68 30F2  
                                     __ptext93 35B6                                       __ptext85 294E  
                                     __ptext77 31A6                                       __ptext69 361E  
                                     __ptext94 35BE                                       __ptext86 35FC  
                                     __ptext78 3622                                       __ptext95 35C6  
                                     __ptext87 2B60                                       __ptext79 3120  
                                     __ptext96 3504                                       __ptext88 34F8  
                                     __ptext97 251C                                       __ptext89 3596  
                                     __ptext98 2250                                       __ptext99 34CA  
                                _setcursor4bit 23D0            __end_of_I2C_SetDataCompleteCallback 345C  
               ?i2_I2C_SetDataCompleteCallback 0006                    _I2C_SetDataCompleteCallback 3444  
                              ___almod@divisor 00DC                        ?_I2C_DO_RX_NACK_RESTART 0001  
                              ___almod@counter 00E0                                 ??_DatetoString 00ED  
                                     _autocont 0040                       __end_of_I2C_DO_SEND_STOP 35B6  
                                 ??_sendenable 010B                      __end_of_ADC_GetConversion 2FC0  
                      ?_EUSART_SetErrorHandler 00D8                                _I2C_SetCallback 2A26  
                       EXTEEPROM_ReadByte@Eadd 00E5                  ??_I2C_SetDataCompleteCallback 00E1  
                   I2C_Write1ByteRegister@data 00E2                         EXTEEPROM_ReadByte@read 00E6  
EUSART_SetOverrunErrorHandler@interruptHandler 00D8                               _manual_homelight 3120  
                                     isa$xinst 0000                                   _TimetoString 2E2A  
                                     int$flags 0041                          ?_I2C_DO_SEND_ADR_READ 0001  
                                     _vfprintf 2D98                                      printf@fmt 00FC  
        __end_of_EUSART_SetFramingErrorHandler 3558                  _EUSART_SetFramingErrorHandler 354E  
                     __end_of_I2C_MasterIsNack 34CA           __end_of_INT1_DefaultInterruptHandler 3624  
                 _INT1_DefaultInterruptHandler 3622                                ??_PrintDateUART 00ED  
                              _manual_Override 26EE                       __end_of_I2C_MasterSetIrq 3604  
                             ?i2_I2C_SetBuffer 0001                                     _INTCONbits 0FF2  
                           __end_of_sendenable 294E                                 ?_setcursor4bit 0118  
                       ??_INTERRUPT_Initialize 00D8                 __end_of_I2C_DO_RX_NACK_RESTART 359E  
                           _EXT_INT_Initialize 2FC0                       ?_ADC_SetInterruptHandler 00D8  
                                     intlevel1 0000                                       intlevel2 0000  
                                    sprintf@ap 0106                            i2I2C_SetCallback@cb 0001  
                             PrintTimeUART@str 00ED                               ___lldiv@dividend 00D8  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 3562  
                          _I2C_DO_SEND_RESTART 35B6                            ?_EXT_INT_Initialize 0001  
                              ??_PrintTimeUART 00ED                        EXTEEPROM_WriteByte@Eadd 00E6  
                       fp__I2C_DO_ADDRESS_NACK 0000                               ??_ADC_Initialize 00DA  
                      EXTEEPROM_WriteByte@data 00E5                            fp__manual_Doorlight 0000  
                                     printf@ap 0100  EUSART_SetFramingErrorHandler@interruptHandler 00D8  
                      __end_of_I2C_MasterClose 35F8                             fp__I2C_DO_TX_EMPTY 0000  
                                  ??_vfpfcnvrt 00EB                        __end_of_I2C_MasterStart 35F0  
                      __end_of_I2C_MasterWrite 357E         __end_of_INTERRUPT_InterruptManagerHigh 2054  
               _INTERRUPT_InterruptManagerHigh 0008                           ?_I2C_DO_SEND_RESTART 0001  
                         ??_EXT_INT_Initialize 00DA                                       sprintf@f 0108  
                                     sprintf@s 0100                                 _GetDataAndTime 29BC  
              fp__INT1_DefaultInterruptHandler 0000                  ?_INT1_DefaultInterruptHandler 0001  
                     __end_of_manual_Doorlight 32D8                               ___lldiv@quotient 00E1  
             __end_of_INT1_SetInterruptHandler 353A                                   ___aldiv@sign 00E1  
                                  _SSPCON1bits 0FC6                                    _SSPCON2bits 0FC5  
        __end_of_INTERRUPT_InterruptManagerLow 0066                  _INTERRUPT_InterruptManagerLow 0018  
                           EUSART_Write@txData 00D8                        __end_of_I2C_SetCallback 2A90  
               __end_of_PIN_MANAGER_Initialize 3068                                   ___almod@sign 00E1  
                __end_of_rd1RegCompleteHandler 3282                               fp__I2C_DO_RX_ACK 0000  
                __end_of_wr1RegCompleteHandler 322A                          _MSSP_InterruptHandler 002C  
                         i2_I2C_MasterClearIrq 35FC  
